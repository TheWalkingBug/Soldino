{
  "contractName": "CitizenMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "registerCitizen",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "login",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllCitizens",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userManager",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userManager",
          "type": "address"
        }
      ],
      "name": "initializeMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"},{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"registerCitizen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userManager\",\"type\":\"address\"}],\"name\":\"initializeMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"login\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllCitizens\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userManager\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getAllCitizens()\":{\"details\":\"Returns a dynamic array containing all registered citizens' addresses\"},\"initialize(address)\":{\"details\":\"Initializes the contract saving the instances of the proxies of the contracts used by this contract\",\"params\":{\"_userManager\":\"The instance of the proxy of the UserManager contract of this project\"}},\"login(address)\":{\"details\":\"Returns the hash of the data of a specific citizen\",\"params\":{\"_user\":\"The address of the citizen whose data to return\"}},\"registerCitizen(bytes32,address)\":{\"details\":\"Registers the given user as a citizen\",\"params\":{\"_hash\":\"the hash of the data of the citizen present in ipfs\",\"_user\":\"the address of the citizen to be registered\"}}},\"title\":\"Citizen\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/mocks/CitizenMock.sol\":\"CitizenMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/BusinessOwner.sol\":{\"keccak256\":\"0xa300e47687dd569b4ba34d19032544b62c713b90c6fcaec588330a487a5432ab\",\"urls\":[\"bzzr://49eb79d5d066bc40cfb62206265c1bb037c52bf48f483a6c2bf1eadda77f0c1e\"]},\"/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/Citizen.sol\":{\"keccak256\":\"0xca77d06b9bedcbcced1504e5110985c2ea27ae8a92d4f279d7ba8b6253b067b2\",\"urls\":[\"bzzr://87e0a862f222c28eab281e1c7018d85c1628dfb0285e6c2f00c65fd891c3a5c9\"]},\"/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/Cubit.sol\":{\"keccak256\":\"0xc6723c48d23d3626c65ffd64f82ba33d78bffba02945c0d5b6f2b92a9e2d92ca\",\"urls\":[\"bzzr://54d1d38339c35945b36014ee0cdd94f984f3795e19dbb42768e3a58a36901d06\"]},\"/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/Government.sol\":{\"keccak256\":\"0x81739600566f16efc9ee962d14e02f0df14c39a6581c1120135abfa62e2b493b\",\"urls\":[\"bzzr://c66380f0b3bb0830560cdd3b45d6396a73aabc57a7ea76566dc114e78eea738c\"]},\"/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/UserManager.sol\":{\"keccak256\":\"0x95f8b1445d5a61a1f6c7f9f908d1b7063afe622501eb25848e5a37879663721f\",\"urls\":[\"bzzr://e05630f5a55d69a2a5e3e93172de90bdc6731c843245051041542e944ef64808\"]},\"/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/mocks/CitizenMock.sol\":{\"keccak256\":\"0xf0d6c2e838de848469ba7944520886cdcd64c1b933149d672c321c25c878d20d\",\"urls\":[\"bzzr://5d1647cb820dcb86b2bbf1df9f24e27f6bb34522b865728465e514745c9acbb2\"]},\"openzeppelin-eth/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzzr://f704341d520fbc98716541f1b3f67737f0ee6e94adf072a66acb2bd25d593c2b\"]},\"openzeppelin-eth/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbc5e61664566dd0ea53e003398833e8fc5571fa36239ccfd3d42c47344047baa\",\"urls\":[\"bzzr://69bbea82cb1b1ae3cc060972a928ca764b4e16c66a13feacee3a6802c7bb61b2\"]},\"openzeppelin-eth/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-eth/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbbb170bdde83dfefceb984332bc74a1aaaf92689180069feb7e90df07432092a\",\"urls\":[\"bzzr://5ed4efa244879243034e381eed100ee36c10201c4bdec9269b1387d2c8a90d2d\"]},\"openzeppelin-eth/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x9626461d3d829a6b2f6707f7c650c6d4b696c0ef9d148d1aae8ebc575b9e0feb\",\"urls\":[\"bzzr://efa580b5f7ee79b0b18b21a5d71c884cb2e78bdee4e8e31d73c7302b88a41b51\"]},\"openzeppelin-eth/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]},\"zos-lib/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]},\"zos-lib/contracts/application/App.sol\":{\"keccak256\":\"0x391e6e2e33f25ebb09cccffe71b58b162e5666a954eba2181df77605c072ee6b\",\"urls\":[\"bzzr://50e87d6dcb83dabf57f4c9e98b5c8261e99aa172f412633b009508a054ab67bd\"]},\"zos-lib/contracts/application/ImplementationProvider.sol\":{\"keccak256\":\"0x56c99da52cc93629037dd3c1c0f71e2330b2d65b6b778339404a9a93a9b06abf\",\"urls\":[\"bzzr://e233f40e00ce6288189d095b09a67097fb017a0d7effb3bad7fe711b19290bce\"]},\"zos-lib/contracts/application/Package.sol\":{\"keccak256\":\"0xe698c978cf10bafa81ad0934dfde390fc5404527336dd54cb7c15b3c09a58d17\",\"urls\":[\"bzzr://cef3b5598f222d0cf71a8135e2b84da175cba3338c74f678b5523934549f83e9\"]},\"zos-lib/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xc9d544a3cebcfc3296f61806d553c1de1710f42fe3daf505104cc1ab2539e65e\",\"urls\":[\"bzzr://9ba4fd6b1b1b9ea45f26022b5d1e08821acf03a66701575d531010dbfd134918\"]},\"zos-lib/contracts/upgradeability/AdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xf7f07ced031558180e343e9e4e8e69c6798878af971a8de1c682c1f3e6ce76b4\",\"urls\":[\"bzzr://683a06536de334975f78f4be5e9b13ea114047b850516a6b1289df68d6b96591\"]},\"zos-lib/contracts/upgradeability/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xa0d3cc9124f7055e1c182eed8b6921b4707ae31853c9acb02aa194522537101d\",\"urls\":[\"bzzr://cf5ae71d7efee85d639d1943c1dfd4134b8ec4901eb45648b0a2dc6f51c75206\"]},\"zos-lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0xc4bbf786e15395b2840d90edfa5599a2246d8b9e35786cbd012833989ba94353\",\"urls\":[\"bzzr://d68cdcc0963ce59b389c596c8567c483aa5cbda4a2570c3e2d0e243c275fd22a\"]},\"zos-lib/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzzr://a94275c7d409e80fa5cf6f31c8a6b97cf85c231de40585d42ae98bab426562c6\"]},\"zos-lib/contracts/upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x3ba28ba575772b5d4afb895eeabcdf344531cd877a0ef5220785a605b16dc372\",\"urls\":[\"bzzr://18ce3ff3fbd9b7bb87ac5aad733ec2212c5ad0df3510d47ace8e140f9f11a55f\"]},\"zos-lib/contracts/utils/Address.sol\":{\"keccak256\":\"0x4296cea43a884099c0d3f532883e8d3997fa07b559131fc5c4ae656a5da3df24\",\"urls\":[\"bzzr://665980fa12b3d42e0ad7dddd92c976da2763d7b08b4043e16a6413d8190ffed6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506107e3806100206000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302dadf8e146100725780631892970b146100cd57806335a6861a1461011e5780636c0e1ccd14610183578063c4d66de8146101ef575b600080fd5b34801561007e57600080fd5b506100cb6004803603604081101561009557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610240565b005b3480156100d957600080fd5b5061011c600480360360208110156100f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b3565b005b34801561012a57600080fd5b5061016d6004803603602081101561014157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103bf565b6040518082815260200191505060405180910390f35b34801561018f57600080fd5b506101986104cd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101db5780820151818401526020810190506101c0565b505050509050019250505060405180910390f35b3480156101fb57600080fd5b5061023e6004803603602081101561021257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610620565b005b603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920757365724d616e616765720000000000000000000000000000000081525060200191505060405180910390fd5b81603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060338190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6103bc81610620565b50565b6000603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610486576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920757365724d616e616765720000000000000000000000000000000081525060200191505060405180910390fd5b603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610594576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920757365724d616e616765720000000000000000000000000000000081525060200191505060405180910390fd5b603380548060200260200160405190810160405280929190818152602001828054801561061657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105cc575b5050505050905090565b600060019054906101000a900460ff168061063f575061063e6107a6565b5b8061065657506000809054906101000a900460ff16155b15156106f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610740576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156107a25760008060016101000a81548160ff0219169083151502179055505b5050565b600080303b9050600081149150509056fea165627a7a72305820c1cdaddfbb1d49d400a96300272f07094591b9bfd37b59548c8ce6ca9ad15ea90029",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302dadf8e146100725780631892970b146100cd57806335a6861a1461011e5780636c0e1ccd14610183578063c4d66de8146101ef575b600080fd5b34801561007e57600080fd5b506100cb6004803603604081101561009557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610240565b005b3480156100d957600080fd5b5061011c600480360360208110156100f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b3565b005b34801561012a57600080fd5b5061016d6004803603602081101561014157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103bf565b6040518082815260200191505060405180910390f35b34801561018f57600080fd5b506101986104cd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101db5780820151818401526020810190506101c0565b505050509050019250505060405180910390f35b3480156101fb57600080fd5b5061023e6004803603602081101561021257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610620565b005b603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920757365724d616e616765720000000000000000000000000000000081525060200191505060405180910390fd5b81603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060338190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6103bc81610620565b50565b6000603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610486576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920757365724d616e616765720000000000000000000000000000000081525060200191505060405180910390fd5b603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610594576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920757365724d616e616765720000000000000000000000000000000081525060200191505060405180910390fd5b603380548060200260200160405190810160405280929190818152602001828054801561061657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105cc575b5050505050905090565b600060019054906101000a900460ff168061063f575061063e6107a6565b5b8061065657506000809054906101000a900460ff16155b15156106f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610740576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156107a25760008060016101000a81548160ff0219169083151502179055505b5050565b600080303b9050600081149150509056fea165627a7a72305820c1cdaddfbb1d49d400a96300272f07094591b9bfd37b59548c8ce6ca9ad15ea90029",
  "sourceMap": "70:142:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;70:142:11;;;;;;;",
  "deployedSourceMap": "70:142:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:163:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1123:163:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1123:163:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;108:102:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;108:102:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;108:102:11;;;;;;;;;;;;;;;;;;;;;;1436:119:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1436:119:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1436:119:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:122;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1657:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1657:122:2;;;;;;;;;;;;;;;;;567:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;567:117:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;567:117:2;;;;;;;;;;;;;;;;;;;;;;1123:163;868:11;;;;;;;;;;;846:34;;:10;:34;;;838:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1234:5;1211:13;:20;1225:5;1211:20;;;;;;;;;;;;;;;:28;;;;1249:18;1273:5;1249:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1249:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:163;;:::o;108:102:11:-;171:32;190:12;171:18;:32::i;:::-;108:102;:::o;1436:119:2:-;1502:7;868:11;;;;;;;;;;;846:34;;:10;:34;;;838:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1528:13;:20;1542:5;1528:20;;;;;;;;;;;;;;;;1521:27;;1436:119;;;:::o;1657:122::-;1719:16;868:11;;;;;;;;;;;846:34;;:10;:34;;;838:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1754:18;1747:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:122;:::o;567:117::-;1024:12:25;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;664:12:2;638:11;;:39;;;;;;;;;;;;;;;;;;1268:14:25;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;567:117:2;;:::o;1409:467:25:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../Citizen.sol\";\n\n/// @title Citizen\ncontract CitizenMock is Citizen {\n    function initializeMock(address _userManager) public {\n        Citizen.initialize(_userManager);\n    }\n}\n",
  "sourcePath": "/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/mocks/CitizenMock.sol",
  "ast": {
    "absolutePath": "/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/mocks/CitizenMock.sol",
    "exportedSymbols": {
      "CitizenMock": [
        5320
      ]
    },
    "id": 5321,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5304,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/Citizen.sol",
        "file": "../Citizen.sol",
        "id": 5305,
        "nodeType": "ImportDirective",
        "scope": 5321,
        "sourceUnit": 1989,
        "src": "25:24:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5306,
              "name": "Citizen",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1988,
              "src": "94:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Citizen_$1988",
                "typeString": "contract Citizen"
              }
            },
            "id": 5307,
            "nodeType": "InheritanceSpecifier",
            "src": "94:7:11"
          }
        ],
        "contractDependencies": [
          1988,
          6727
        ],
        "contractKind": "contract",
        "documentation": "@title Citizen",
        "fullyImplemented": true,
        "id": 5320,
        "linearizedBaseContracts": [
          5320,
          1988,
          6727
        ],
        "name": "CitizenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5318,
              "nodeType": "Block",
              "src": "161:49:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5315,
                        "name": "_userManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5309,
                        "src": "190:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5312,
                        "name": "Citizen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1988,
                        "src": "171:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Citizen_$1988_$",
                          "typeString": "type(contract Citizen)"
                        }
                      },
                      "id": 5314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1926,
                      "src": "171:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "171:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5317,
                  "nodeType": "ExpressionStatement",
                  "src": "171:32:11"
                }
              ]
            },
            "documentation": null,
            "id": 5319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5309,
                  "name": "_userManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 5319,
                  "src": "132:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "131:22:11"
            },
            "returnParameters": {
              "id": 5311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:11"
            },
            "scope": 5320,
            "src": "108:102:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5321,
        "src": "70:142:11"
      }
    ],
    "src": "0:213:11"
  },
  "legacyAST": {
    "absolutePath": "/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/mocks/CitizenMock.sol",
    "exportedSymbols": {
      "CitizenMock": [
        5320
      ]
    },
    "id": 5321,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5304,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "/home/nicolabba/WebstormProjects/The-Walking-Bug/Soldino/contracts/Citizen.sol",
        "file": "../Citizen.sol",
        "id": 5305,
        "nodeType": "ImportDirective",
        "scope": 5321,
        "sourceUnit": 1989,
        "src": "25:24:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5306,
              "name": "Citizen",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1988,
              "src": "94:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Citizen_$1988",
                "typeString": "contract Citizen"
              }
            },
            "id": 5307,
            "nodeType": "InheritanceSpecifier",
            "src": "94:7:11"
          }
        ],
        "contractDependencies": [
          1988,
          6727
        ],
        "contractKind": "contract",
        "documentation": "@title Citizen",
        "fullyImplemented": true,
        "id": 5320,
        "linearizedBaseContracts": [
          5320,
          1988,
          6727
        ],
        "name": "CitizenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5318,
              "nodeType": "Block",
              "src": "161:49:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5315,
                        "name": "_userManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5309,
                        "src": "190:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5312,
                        "name": "Citizen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1988,
                        "src": "171:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Citizen_$1988_$",
                          "typeString": "type(contract Citizen)"
                        }
                      },
                      "id": 5314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1926,
                      "src": "171:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "171:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5317,
                  "nodeType": "ExpressionStatement",
                  "src": "171:32:11"
                }
              ]
            },
            "documentation": null,
            "id": 5319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5309,
                  "name": "_userManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 5319,
                  "src": "132:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "131:22:11"
            },
            "returnParameters": {
              "id": 5311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:11"
            },
            "scope": 5320,
            "src": "108:102:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5321,
        "src": "70:142:11"
      }
    ],
    "src": "0:213:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-16T08:07:59.683Z",
  "devdoc": {
    "methods": {
      "getAllCitizens()": {
        "details": "Returns a dynamic array containing all registered citizens' addresses"
      },
      "initialize(address)": {
        "details": "Initializes the contract saving the instances of the proxies of the contracts used by this contract",
        "params": {
          "_userManager": "The instance of the proxy of the UserManager contract of this project"
        }
      },
      "login(address)": {
        "details": "Returns the hash of the data of a specific citizen",
        "params": {
          "_user": "The address of the citizen whose data to return"
        }
      },
      "registerCitizen(bytes32,address)": {
        "details": "Registers the given user as a citizen",
        "params": {
          "_hash": "the hash of the data of the citizen present in ipfs",
          "_user": "the address of the citizen to be registered"
        }
      }
    },
    "title": "Citizen"
  },
  "userdoc": {
    "methods": {}
  }
}