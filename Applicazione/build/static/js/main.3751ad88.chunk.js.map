{"version":3,"sources":["util/web3 sync /^/.//proxyAddresses/..*$","util/wrappers.js","components/public/AlertMessage.js","components/public/LoadingSpinner.js","components/business/OrdersManagement.js","reducers/userReducer.js","reducers/web3Reducer.js","reducers/contractsReducer.js","reducers/public/cartReducer.js","reducers/public/searchReducer.js","reducers/business/businessReducer.js","reducers/government/governmentReducer.js","reducers/public/fetchDataReducer.js","reducers/public/ordersReducer.js","reducers/reducer.js","store.js","util/API/init.js","util/API/utils/helper.js","util/API/users.js","util/API/cubit.js","util/API/products.js","util/API/vat.js","util/API/orders.js","util/API/SoldinoAPI.js","actions/public/FetchDataActions.js","actions/public/OrdersHistoryActions.js","containers/business/OrdersManagementContainer.js","components/business/ProductsManagement.js","actions/business/ProductsManagementActions.js","containers/business/ProductsManagementContainer.js","components/business/VATManagement.js","actions/public/SearchActions.js","actions/public/CartActions.js","actions/business/VATManagementActions.js","containers/business/VATManagementContainer.js","components/citizen/CitizenHome.js","containers/citizen/CitizenHomeContainer.js","components/business/BusinessHome.js","containers/business/BusinessHomeContainer.js","components/government/GovernmentHome.js","containers/government/GovernmentHomeContainer.js","components/CommonHome.js","containers/CommonHomeContainer.js","util/inputValidation.js","components/public/ModalCustom.js","components/business/AddProductForm.js","containers/business/AddProductFormContainer.js","components/business/OrderDetails.js","components/business/ModifyProductForm.js","containers/business/ModifyProductFormContainer.js","components/business/VATTransactionLedger.js","containers/business/VATTransactionLedgerContainer.js","components/business/VATLedger.js","containers/business/VATLedgerContainer.js","routes/businessRoutes.js","components/citizen/OrdersHistory.js","containers/citizen/OrdersHistoryContainer.js","components/citizen/OrderDetails.js","routes/citizenRoutes.js","components/government/GovernmentFinancial.js","actions/government/BusinessRequestActions.js","containers/government/GovernmentFinancialContainer.js","components/government/ManageBusiness.js","containers/government/ManageBusinessContainer.js","components/government/BusinessList.js","containers/government/BusinessListContainer.js","components/government/EconomyForm.js","actions/government/EconomyFormActions.js","containers/government/EconomyFormContainer.js","components/government/VATDetails.js","containers/government/VATDetailsContainer.js","routes/governmentRoutes.js","components/public/Help.js","components/public/SignUp.js","components/public/Price.js","components/public/SignUpCitizenForm.js","actions/public/LoginButtonActions.js","containers/public/SignUpCitizenFormContainer.js","actions/public/SignUpCitizenFormActions.js","components/public/SignUpBusinessOwnerForm.js","containers/public/SignUpBusinessOwnerFormContainer.js","actions/public/SignUpBusinessOwnerFormActions.js","components/public/Cart.js","containers/public/CartContainer.js","components/public/ProductPage.js","containers/public/ProductPageContainer.js","components/public/ProductCard.js","containers/public/ProductContainer.js","components/public/ProductSearch.js","containers/public/ProductSearchContainer.js","routes/publicRoutes.js","components/public/LoginButton.js","containers/public/LoginButtonContainer.js","components/public/LogoutButton.js","actions/public/LogoutButtonActions.js","containers/public/LogoutButtonContainer.js","routes/NavbarLinks.js","components/public/NavbarCustom.js","components/public/Footer.js","components/App.js","components/public/InfoCards.js","components/public/Home.js","components/public/NotFound.js","routes/SoldinoRoutes.js","containers/Root.js","util/web3/getWeb3.js","util/web3/getContracts.js","index.js","img/Product1.jpg","util/web3/truffle-config.js","util/web3/proxyAddresses.development.js","util/web3/proxyAddresses.ropsten.js","img/metamask_big.png","img/metamask_guide_start.gif","img/metamask_guide_start2.gif","img/company.png","img/man.png","img/logo_min.png","img/metamask_logo.png","img/logo.png","img/gilberto.gif"],"names":["map","./proxyAddresses.development","./proxyAddresses.development.js","./proxyAddresses.ropsten","./proxyAddresses.ropsten.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","UserIsAuthenticated","connectedRouterRedirect","redirectPath","authenticatedSelector","state","user","data","redirectAction","routerActions","replace","wrapperDisplayName","UserIsCitizen","type","UserIsBusinessOwner","confirmed","UserIsGovernment","AllUsersNoGovernment","UserIsNotAuthenticated","ownProps","location","query","redirect","allowRedirectBack","VisibleOnlyCitizen","connectedAuthWrapper","VisibleOnlyBusinessOwner","VisibleOnlyGovernment","HiddenOnlyAuth","AlertMessage","props","variant","message","react_default","a","createElement","Alert","LoadingSpinner","style","textAlign","width","Spinner_default","animation","role","className","OrdersManagement","getOrdersHistory","this","allOrdersPurchase","allOrdersSell","allOrdersPurchasePrint","allOrdersSellPrint","_this$props","ordersHistoryDataPurchase","ordersHistoryDataSell","isLoading","length","item","key","date","concat","total","react_router_es","to","pathname","orderType","products","quantities","productQuantities","seller","Button","buyer","Container","Table","striped","bordered","hover","public_AlertMessage","size","marginBottom","Tabs","defaultActiveKey","Tab","eventKey","title","public_LoadingSpinner","React","Component","defaultProps","initialState","userReducer","arguments","undefined","action","assign","payload","userType","objectSpread","web3Instance","account","web3Reducer","citizen","businessOwner","cubit","government","userManager","vat","vatTransaction","productTransaction","product","contractsReducer","addedItems","removeItem","itemIndex","newAddedItems","newTotal","price","quantity","filter","cartReducer","itemLocation","findIndex","element","availability","push","i","_removeItem","addedItemIndex","removeResult","result","searchReducer","ordersPurchase","ordersSell","productsList","currentQuarterAssessment","VATHistory","businessReducer","purchase","sell","orders","businessVATStatus","businessInfo","users","governmentReducer","fetchDataReducer","ordersReducer","combinedReducers","combineReducers","routing","routerReducer","web3","contracts","cart","search","business","fetchData","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","routingMiddleware","routerMiddleware","browserHistory","store","createStore","applyMiddleware","thunkMiddleware","promise","Init","getWeb3Instance","getState","getCubitContract","getGovernmentContract","getUserManagerContract","getVatContract","getVatTransactionContract","getProductTransactionContract","getProductContract","getCurrentAccount","eth","getAccounts","then","setupAccountChecking","initialAccount","setInterval","currAccount","dispatch","Helper","getBytes32FromIpfsHash","ipfsListing","bs58","decode","slice","toString","getIpfsHashFromBytes32","bytes32Hex","hashHex","hashBytes","Buffer","from","encode","currentAccount","ipfs","IPFS","host","port","protocol","Users","registerUser","userData","bufferToUpload","JSON","stringify","add","hash","methods","send","registerCitizen","name","surname","fiscalCode","mail","registerBusinessOwner","businessName","VATNumber","CE","getUserBalance","address","balanceOf","call","Promise","parseFloat","toFixed","getCitizenData","getUserHash","cat","ipfsResult","balance","parse","getBusinessData","isBusinessOwnerConfirmed","getGovernmentData","failedLogin","error","login","isRegistered","getAllCitizens","getAllBusinessOwners","getAllBusinessData","allBusinesses","all","getAllCitizenData","allCitizens","getAllConfirmedBusinessOwnersData","results","getAllRegisteredUsers","confirmBusinessOwner","removeBusinessOwner","Cubit","mint","amount","intAmount","parseInt","setAllowance","spender","value","approve","distributeToAll","options","distributeToUsers","Products","isValidProductID","productID","addProduct","productData","intPrice","VAT","buyProducts","intPriceProducts","forEach","deleteProduct","getProductData","ethProductData","ipfsProductData","floatPrice","owner","deleted","changeAvailability","changeProductAvailability","editProduct","_this","currentProduct","_","isEqual","omit","getAllProducts","getAllProductsData","ownerAddress","getAllOwnersProductsData","_this2","Vat","getTransactionData","transactionID","getVATTransactionData","ethData","addresser","addressee","refused","getTransactionVATTotal","getQuarterVATBalance","year","quarter","payVATToGovernment","payVATToBusinessOwner","refuseVAT","refusePayment","getVATDeductions","fromYear","fromQuarter","toYear","toQuarter","getVATCompensations","getBusinessOwnerVATHistory","confirmedDate","moment","unix","confirmedYear","confirmedQuarter","actualDate","actualYear","actualQuarter","startQuarter","endQuarter","res","_loop","curYear","_loop2","curQuarter","getBusinessVATStatus","vatStatus","status","businessAddress","transData","transaction","Orders","buyerAddress","totalVat","retData","toDate","toDateString","productsData","sellerAddress","buyerData","sellerData","getAllSellerTransactions","getSellerTransaction","transactions","getSellerTransactions","fromDate","getAllBuyerTransactions","_this3","getBuyerTransaction","getBuyerTransactions","_this4","SoldinoAPI","init","START_FETCH_DATA","STOP_FETCH_DATA","startFetchData","stopFetchData","GET_ORDERS_HISTORY","API","bought","sold","setOrderHistory","OrdersManagementContainer","connect","ProductsManagement","getProductsList","removeProduct","allProducts","description","onClick","allProductsToPrint","Row","ADD_PRODUCT","MODIFY_PRODUCT","REMOVE_PRODUCT","GET_PRODUCTS_LIST","returnProductList","productInfo","productAdded","currentLocation","getCurrentLocation","decodeURIComponent","modifyProduct","productModified","ProductsManagementContainer","VATManagement","getVATHistory","OrdersHistory","totalVatCompensations","totalVatDeductions","_this$props2","payVAT","pendingQuartersView","pendingQuarters","getPendingQuarters","Button_default","pendingQuartersToPrint","console","log","Row_default","Col_default","color","isAfter","set","isBefore","height","overflow","Container_default","SEARCH_PRODUCTS","CLEAR_SEARCH","searchResult","clearSearch","BUY","addToCart","userUpdated","subtractQuantity","addQuantity","productBought","clearCart","GET_VAT_HISTORY","history","VATManagementContainer","CitizenHome","authData","CitizenData","ListGroup_default","Item","Card_default","bg","text","Header","as","block","CitizenHomeContainer","BusinessHome","BusinessData","pointerEvents","disabled","BusinessHomeContainer","GovernmentHome","GovernmentHomeContainer","CommonHome","citizen_CitizenHomeContainer","business_BusinessHomeContainer","government_GovernmentHomeContainer","isPositive","v","Number","isNaN","isPositiveInteger","isOnlyCharacters","RegExp","test","isValidEmail","String","toLowerCase","ModalCustom","onHide","Modal","aria-labelledby","centered","closeButton","Title","Body","index","Footer","AddProductForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleUserInput","target","setState","defineProperty","validateField","formValid","nameValid","availabilityValid","VATValid","descriptionValid","priceValid","file","imagePreview","imageValid","modalShow","errors","handleSubmit","bind","assertThisInitialized","handleImageChange","preventDefault","reader","FileReader","files","onloadend","fileType","includes","readAsDataURL","fieldName","validateForm","event","_this$state","$imagePreview","src","border","margin","Form_default","onSubmit","Group","controlId","Label","column","sm","Control","onChange","placeholder","min","public_ModalCustom","show","AddProductFormContainer","OrderDetails","printDocument","pdfName","input","document","getElementById","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","actor","allDetails","marginRight","padding","ModifyProductForm","ModifyProductFormContainer","VATTransactionLedger","allTransactions","VATTransactionLedgerContainer","VATLedger","allCompensations","allDeductions","_location$state","totalCompensations","totalDeductions","marginTop","Table_default","VATLedgerContainer","businessRoutes","path","component","CommonHomeContainer","allOrders","ordersHistoryData","allOrdersToPrint","OrdersHistoryContainer","citizenRoutes","GovernmentFinancial","getBusinessInfo","allBusinessesInfo","businessDataToPrint","GET_BUSINESS_INFO","ACCEPT_BUSINESS","REMOVE_BUSINESS","removedBusiness","info","acceptBusiness","GovernmentFinancialContainer","ManageBusiness","rejectBusiness","ManageBusinessContainer","BusinessList","removeBusiness","BusinessListContainer","EconomyForm","amountMint","amountDist","checkedAll","checkedItems","Map","handleSubmitMint","handleSubmitDistribute","onMintChange","onDistributeChange","handleCheckChange","handleCheckAll","getUsersList","isChecked","checked","prevState","newCheckedItems","citizens","businessOwners","onMintFormSubmit","usersToDistribute","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","k","err","return","checkAnyUserChecked","onDistributeFormSubmit","_this$state2","allUsersList","Check","label","get","USER_UPDATED","GET_USERS_LIST","EconomyFormContainer","usersToDist","addresses","VATDetails","businessData","vatTaxPayable","VATDetailsContainer","governmentRoutes","Help","Jumbotron_default","href","metamaskLogo","alt","xl","Image","metamaskStart1","fluid","metamaskStart2","SignUp","CardDeck_default","Img","company","Price","SignUpCitizenForm","email","surnameValid","fiscalCodeValid","emailValid","isValidFiscalCode","onSignUpCitizenFormSubmit","USER_LOGGED_IN","loginUser","SignUpCitizenFormContainer","signUpUser","SignUpBusinessOwnerForm","businessNameValid","locationValid","VATNumberValid","CEValid","isValidVAT","onSignUpBusinessOwnerFormSubmit","SignUpBusinessOwnerFormContainer","Cart","printTotal","items","buy","es_Card","objectFit","productPic","marginLeft","Text","float","ProductPage","increaseQuantity","decreaseQuantity","av","qty","ProductCard","prodInfo","ProductSearch","handleQueryValue","handleKeyDown","searchProducts","searchRes","ProductContainer","es_Form","desc","indexOf","publicRoutes","ProductSearchContainer","CartContainer","ProductPageContainer","LoginButton","onLoginUserClick","LoginButtonContainer","LogoutButton","onLogoutUserClick","RESET_STATE","logoutUser","LogoutButtonContainer","GovernmentLinks","Nav","NavItem","eventkey","Link","public_LogoutButtonContainer","CitizenLinks","BusinessOwnerLinks","GuestLinks","public_LoginButtonContainer","NavbarCustom","Navbar","Brand","logo","Collapse","App","children","public_NavbarCustom","public_Footer","InfoCards","es_CardDeck","picture","metamask","public_InfoCards","NotFound","gilberto","SoldinoRoutes","syncHistoryWithStore","onUpdate","scrollTo","Homepage","Root","es","routes_SoldinoRoutes","WEB3_INITIALIZED","getWeb3","Web3","currentProvider","providers","HttpProvider","prototype","sendAsync","provider","web3Initialized","CONTRACTS_INITIALIZED","getContracts","net","getId","networkId","proxyAddresses","networks","network_id","require","Contract","CubitAbi","abi","cubitAddress","GovernmentAbi","governmentAddress","UserManagerAbi","userManagerAddress","VATAbi","vatAddress","VATTransactionAbi","vatTransactionAddress","ProductTransactionAbi","productTransactionAddress","ProductAbi","productAddress","contractsInitialized","onload","ethereum","enable","ReactDOM","render","containers_Root","p","HDWalletProvider","local","gas","gasPrice","development","coverage","ropsten","businessOwnerAddress","citizenAddress"],"mappings":"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","file":"static/js/main.3751ad88.chunk.js","sourcesContent":["var map = {\n\t\"./proxyAddresses.development\": 411,\n\t\"./proxyAddresses.development.js\": 411,\n\t\"./proxyAddresses.ropsten\": 412,\n\t\"./proxyAddresses.ropsten.js\": 412\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1048;","import connectedAuthWrapper from 'redux-auth-wrapper/connectedAuthWrapper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history3/redirect';\nimport { routerActions } from 'react-router-redux';\n\n// Layout Component Wrappers\n\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: '/',\n  authenticatedSelector: state => state.user.data !== null,\n  redirectAction: routerActions.replace,\n  wrapperDisplayName: 'UserIsAuthenticated',\n});\n\nexport const UserIsCitizen = connectedRouterRedirect({\n  redirectPath: '/',\n  authenticatedSelector: state => state.user.type === 1,\n  redirectAction: routerActions.replace,\n  wrapperDisplayName: 'UserIsCitizen',\n});\n\nexport const UserIsBusinessOwner = connectedRouterRedirect({\n  redirectPath: '/',\n  authenticatedSelector: state => state.user.type === 2 && state.user.data.confirmed !== '0',\n  redirectAction: routerActions.replace,\n  wrapperDisplayName: 'UserIsBusinessOwner',\n});\n\nexport const UserIsGovernment = connectedRouterRedirect({\n  redirectPath: '/',\n  authenticatedSelector: state => state.user.type === 3,\n  redirectAction: routerActions.replace,\n  wrapperDisplayName: 'UserIsGovernment',\n});\n\nexport const AllUsersNoGovernment = connectedRouterRedirect({\n  redirectPath: '/',\n  authenticatedSelector: state => state.user.type === 0 || state.user.type === 1\n      || state.user.type === 2,\n  redirectAction: routerActions.replace,\n  wrapperDisplayName: 'UserIsGovernment',\n});\n\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  authenticatedSelector: state => state.user && state.user.type === 0,\n  redirectAction: routerActions.replace,\n  redirectPath: (state, ownProps) => ownProps.location.query.redirect || '/',\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n});\n\n// UI Component Wrappers\n\nexport const VisibleOnlyAuth = connectedAuthWrapper({\n  authenticatedSelector: state => state.user && state.user.data !== null,\n  wrapperDisplayName: 'VisibleOnlyAuth',\n});\n\nexport const VisibleOnlyCitizen = connectedAuthWrapper({\n  authenticatedSelector: state => state.user && state.user.type === 1,\n  wrapperDisplayName: 'VisibleOnlyCitizen',\n});\n\nexport const VisibleOnlyBusinessOwner = connectedAuthWrapper({\n  authenticatedSelector: state => state.user && state.user.type === 2,\n  wrapperDisplayName: 'VisibleOnlyBusinessOwner',\n});\n\nexport const VisibleOnlyGovernment = connectedAuthWrapper({\n  authenticatedSelector: state => state.user && state.user.type === 3,\n  wrapperDisplayName: 'VisibleOnlyGovernment',\n});\n\nexport const HiddenOnlyAuth = connectedAuthWrapper({\n  authenticatedSelector: state => state.user && state.user.type === 0,\n  wrapperDisplayName: 'HiddenOnlyAuth',\n});\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst AlertMessage = (props) => {\n  const { variant, message } = props;\n  return (\n    <Alert variant={variant}>\n      {message}\n    </Alert>\n  );\n};\nAlertMessage.propTypes = {\n  variant: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n};\n\nexport default AlertMessage;\n","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst LoadingSpinner = () => (\n  <div style={{ textAlign: 'center', width: '100%' }}>\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport {\n  Table, Container, Button, Tabs, Tab,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport AlertMessage from '../public/AlertMessage';\nimport LoadingSpinner from '../public/LoadingSpinner';\n\nclass OrdersManagement extends React.Component {\n  componentDidMount() {\n    const {\n      getOrdersHistory,\n    } = this.props;\n    getOrdersHistory();\n  }\n\n  render() {\n    let allOrdersPurchase = null;\n    let allOrdersSell = null;\n    let allOrdersPurchasePrint = null;\n    let allOrdersSellPrint = null;\n\n    const {\n      ordersHistoryDataPurchase,\n      ordersHistoryDataSell,\n      isLoading,\n    } = this.props;\n\n    if (ordersHistoryDataPurchase !== null && ordersHistoryDataPurchase.length !== 0) {\n      allOrdersPurchase = ordersHistoryDataPurchase.map(item => (\n        <tr key={item.id}>\n          <td>{item.id}</td>\n          <td>{item.date}</td>\n          <td>{`${item.total} CUB`}</td>\n          <td>\n            <Link to={{\n              pathname: `/ordersManagement/orderDetails/${item.id}`,\n              state: {\n                orderType: '0',\n                id: item.id,\n                date: item.date,\n                total: item.total,\n                products: item.products,\n                quantities: item.productQuantities,\n                seller: item.seller,\n              },\n            }}\n            >\n              <Button type=\"button\">Details</Button>\n            </Link>\n          </td>\n        </tr>\n      ));\n    }\n\n    if (ordersHistoryDataSell !== null && ordersHistoryDataSell.length !== 0) {\n      allOrdersSell = ordersHistoryDataSell.map(item => (\n        <tr key={item.id}>\n          <td>{item.id}</td>\n          <td>{item.date}</td>\n          <td>{`${item.total} CUB`}</td>\n          <td>\n            <Link to={{\n              pathname: `/ordersManagement/orderDetails/${item.id}`,\n              state: {\n                orderType: '1',\n                id: item.id,\n                date: item.date,\n                total: item.total,\n                products: item.products,\n                quantities: item.productQuantities,\n                buyer: item.buyer,\n              },\n            }}\n            >\n              <Button type=\"button\">Details</Button>\n            </Link>\n          </td>\n        </tr>\n      ));\n    }\n\n\n    if (allOrdersPurchase !== null) {\n      allOrdersPurchasePrint = (\n        <Container>\n          <h2>Purchases Orders</h2>\n          <br />\n          <Table striped bordered hover>\n            <thead>\n              <tr key=\"0\">\n                <th>Order Id</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Details</th>\n              </tr>\n            </thead>\n            <tbody>\n              {allOrdersPurchase}\n            </tbody>\n          </Table>\n        </Container>\n      );\n    } else {\n      allOrdersPurchasePrint = <AlertMessage variant=\"info\" message=\"No purchases.\" />;\n    }\n\n    if (allOrdersSell !== null) {\n      allOrdersSellPrint = (\n        <Container>\n          <h2>Sells Orders</h2>\n          <br />\n          <Table striped bordered hover>\n            <thead>\n              <tr key=\"0\">\n                <th>Id</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Details</th>\n              </tr>\n            </thead>\n            <tbody>\n              {allOrdersSell}\n            </tbody>\n          </Table>\n        </Container>\n      );\n    } else {\n      allOrdersSellPrint = <AlertMessage variant=\"info\" message=\"No sells.\" />;\n    }\n\n    return (\n      <Container>\n        <Link to=\"/profile\">\n          <Button variant=\"dark\" size=\"lg\" style={{ marginBottom: '2%' }}>\n            Back to all actions\n          </Button>\n        </Link>\n        <Tabs defaultActiveKey=\"purchases\" id=\"uncontrolled-tab-example\" style={{ marginBottom: '2%' }}>\n          <Tab eventKey=\"purchases\" title=\"Purchases\">\n            {isLoading ? <LoadingSpinner /> : allOrdersPurchasePrint}\n          </Tab>\n          <Tab eventKey=\"sales\" title=\"Sales\">\n            {isLoading ? <LoadingSpinner /> : allOrdersSellPrint}\n          </Tab>\n        </Tabs>\n      </Container>\n    );\n  }\n}\n\nOrdersManagement.propTypes = {\n  isLoading: PropTypes.bool,\n  // eslint-disable-next-line\n  ordersHistoryDataPurchase: PropTypes.array,\n  // eslint-disable-next-line\n  ordersHistoryDataSell: PropTypes.array,\n  getOrdersHistory: PropTypes.func.isRequired,\n};\n\nOrdersManagement.defaultProps = {\n  isLoading: false,\n};\n\nexport default OrdersManagement;\n","const initialState = {\n  data: null,\n  type: 0,\n};\n\nconst userReducer = (state = initialState, action) => {\n  if (action.type === 'USER_LOGGED_IN' || action.type === 'USER_UPDATED') {\n    return Object.assign({}, state, {\n      data: action.payload,\n      type: action.payload.userType,\n    });\n  }\n\n  if (action.type === 'USER_LOGGED_OUT') {\n    return Object.assign({}, state, {\n      data: null,\n      type: 0,\n    });\n  }\n\n  return {\n    ...state,\n    data: state ? state.data : null,\n    type: state ? state.type : 0,\n  };\n};\n\nexport default userReducer;\n","const initialState = {\n  web3Instance: null,\n  account: null,\n};\n\nconst web3Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'WEB3_INITIALIZED':\n      return {\n        ...state,\n        web3Instance: action.payload.web3Instance,\n        account: action.payload.account,\n      };\n    case 'WEB3_ACCOUNT_CHANGED':\n      return {\n        ...state,\n        account: action.payload,\n      };\n    default: return state;\n  }\n};\n\nexport default web3Reducer;\n","const initialState = {\n  citizen: null,\n  businessOwner: null,\n  cubit: null,\n  government: null,\n  userManager: null,\n  vat: null,\n  vatTransaction: null,\n  productTransaction: null,\n  product: null,\n};\n\nconst contractsReducer = (state = initialState, action) => {\n  if (action.type === 'CONTRACTS_INITIALIZED') {\n    return Object.assign({}, state, {\n      citizen: action.payload.citizen,\n      businessOwner: action.payload.businessOwner,\n      cubit: action.payload.cubit,\n      government: action.payload.government,\n      userManager: action.payload.userManager,\n      vat: action.payload.vat,\n      vatTransaction: action.payload.vatTransaction,\n      productTransaction: action.payload.productTransaction,\n      product: action.payload.product,\n    });\n  }\n\n  return state;\n};\n\nexport default contractsReducer;\n","const initialState = {\n  addedItems: [],\n  total: 0,\n};\n\nfunction removeItem(addedItems, total, itemIndex) {\n  let newAddedItems = addedItems;\n  let newTotal = total;\n  newTotal\n    -= newAddedItems[itemIndex].price * newAddedItems[itemIndex].quantity;\n  newAddedItems = newAddedItems.filter(\n    item => item.id !== newAddedItems[itemIndex].id,\n  );\n  return {\n    newAddedItems,\n    newTotal,\n  };\n}\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART': {\n      const newAddedItems = state.addedItems;\n      let newTotal = 0;\n      let itemLocation = newAddedItems.findIndex(\n        element => element.id === action.payload.id,\n      );\n      if (itemLocation !== -1) {\n        if (newAddedItems[itemLocation].quantity + action.payload.quantity\n            <= newAddedItems[itemLocation].availability) {\n          newAddedItems[itemLocation].quantity += action.payload.quantity;\n        } else {\n          newAddedItems[itemLocation].quantity = newAddedItems[itemLocation].availability;\n        }\n      } else {\n        newAddedItems.push(action.payload);\n        itemLocation = newAddedItems.length - 1;\n      }\n      for (let i = 0; i < newAddedItems.length; i += 1) {\n        newTotal += newAddedItems[i].quantity * newAddedItems[i].price;\n      }\n\n      return {\n        ...state,\n        addedItems: newAddedItems,\n        total: newTotal,\n      };\n    }\n\n    case 'REMOVE_ITEM': {\n      const { newAddedItems, newTotal } = removeItem(\n        state.addedItems,\n        state.total,\n        state.addedItems.findIndex(item => action.payload === item.id),\n      );\n      return {\n        ...state,\n        addedItems: newAddedItems,\n        total: newTotal,\n      };\n    }\n    case 'ADD_QUANTITY': {\n      const newAddedItems = state.addedItems;\n      let newTotal = state.total;\n      const addedItemIndex = newAddedItems.findIndex(\n        item => item.id === action.payload,\n      );\n      newAddedItems[addedItemIndex].quantity += 1;\n      newTotal += newAddedItems[addedItemIndex].price;\n      return {\n        ...state,\n        addedItems: newAddedItems,\n        total: newTotal,\n      };\n    }\n    case 'SUB_QUANTITY': {\n      const newAddedItems = state.addedItems;\n      let newTotal = state.total;\n      const addedItemIndex = newAddedItems.findIndex(\n        item => item.id === action.payload,\n      );\n      // if the qt == 0 then it should be removed\n      if (newAddedItems[addedItemIndex].quantity === 1) {\n        const removeResult = removeItem(\n          newAddedItems,\n          newTotal,\n          addedItemIndex,\n        );\n        return {\n          ...state,\n          addedItems: removeResult.newAddedItems,\n          total: removeResult.newTotal,\n        };\n      }\n      newAddedItems[addedItemIndex].quantity -= 1;\n      newTotal -= newAddedItems[addedItemIndex].price;\n      return {\n        ...state,\n        addedItems: newAddedItems,\n        total: newTotal,\n      };\n    }\n    case 'BUY':\n      return {\n        ...state,\n      };\n    case 'CLEAR_CART':\n      return {\n        addedItems: [],\n        total: 0,\n      };\n    default:\n      return {\n        ...state,\n        addedItems: state ? state.addedItems : [],\n        total: state ? state.total : 0,\n      };\n  }\n};\n\nexport default cartReducer;\n","const initialState = {\n  result: null,\n};\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SEARCH_PRODUCTS':\n      return {\n        result: action.payload,\n      };\n    case 'CLEAR_SEARCH':\n      return {\n        result: action.payload,\n      };\n    default:\n      return {\n        ...state,\n        result: state ? state.result : null,\n      };\n  }\n};\n\nexport default searchReducer;\n","const initialState = {\n  ordersPurchase: null,\n  ordersSell: null,\n  productsList: null,\n  currentQuarterAssessment: null,\n  VATHistory: null,\n};\n\nconst businessReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_ORDERS_HISTORY_BUSINESS':\n      return {\n        ...state,\n        ordersPurchase: action.payload.purchase,\n        ordersSell: action.payload.sell,\n      };\n    case 'GET_PRODUCTS_LIST':\n      return {\n        ...state,\n        productsList: action.payload,\n      };\n    case 'GET_CURRENT_QUARTER_ASSESSMENT':\n      return {\n        ...state,\n        currentQuarterAssessment: action.payload,\n      };\n    case 'GET_VAT_HISTORY':\n      return {\n        ...state,\n        VATHistory: action.payload,\n      };\n    case 'PAY_VAT':\n      return {\n        ...state,\n      };\n    case 'ADD_PRODUCT':\n      return {\n        ...state,\n      };\n    case 'MODIFY_PRODUCT':\n      return {\n        ...state,\n      };\n    case 'REMOVE_PRODUCT':\n      return {\n        ...state,\n      };\n    default:\n      return {\n        ...state,\n        ordersPurchase: state ? state.ordersPurchase : null,\n        ordersSell: state ? state.ordersSell : null,\n        productsList: state ? state.productsList : null,\n        currentQuarterAssessment: state ? state.currentQuarterAssessment : null,\n        VATHistory: state ? state.VATHistory : null,\n      };\n  }\n};\n\nexport default businessReducer;\n","const initialState = {\n  orders: null,\n  businessVATStatus: null,\n  businessInfo: null,\n  users: null,\n};\n\nconst governmentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_ORDERS_HISTORY_GOVERNMENT':\n      return {\n        ...state,\n        orders: action.payload,\n      };\n\n    case 'GET_BUSINESS_VAT_STATUS':\n      return {\n        ...state,\n        businessVATStatus: action.payload,\n      };\n    case 'GET_USERS_LIST':\n      return {\n        ...state,\n        users: action.payload,\n      };\n    case 'NOTIFY_LATE_PAYMENT':\n      return {\n        ...state,\n      };\n\n    case 'PAY_VAT_TAX_CREDIT':\n      return {\n        ...state,\n      };\n    case 'GET_BUSINESS_INFO':\n      return {\n        ...state,\n        businessInfo: action.payload,\n      };\n    case 'ACCEPT_BUSINESS':\n      return {\n        ...state,\n      };\n    case 'REJECT_BUSINESS':\n      return {\n        ...state,\n      };\n    case 'REMOVE_BUSINESS':\n      return {\n        ...state,\n      };\n    default:\n      return {\n        ...state,\n        orders: state ? state.orders : null,\n        businessVATStatus: state ? state.businessVATStatus : null,\n        businessInfo: state ? state.businessInfo : null,\n      };\n  }\n};\n\nexport default governmentReducer;\n","const initialState = {\n  isLoading: false,\n};\n\nconst fetchDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'START_FETCH_DATA':\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case 'STOP_FETCH_DATA':\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    default:\n      return {\n        ...state,\n        isLoading: state ? state.isLoading : false,\n      };\n  }\n};\n\nexport default fetchDataReducer;\n","const initialState = {\n  purchase: null,\n  sell: null,\n};\n\nconst ordersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_ORDERS_HISTORY':\n      return {\n        purchase: action.payload.purchase,\n        sell: action.payload.sell,\n      };\n\n    default:\n      return {\n        ...state,\n        purchase: state ? state.purchase : null,\n        sell: state ? state.sell : null,\n      };\n  }\n};\n\nexport default ordersReducer;\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\nimport userReducer from './userReducer';\nimport web3Reducer from './web3Reducer';\nimport contractsReducer from './contractsReducer';\nimport cartReducer from './public/cartReducer';\nimport searchReducer from './public/searchReducer';\nimport businessReducer from './business/businessReducer';\nimport governmentReducer from './government/governmentReducer';\nimport fetchDataReducer from './public/fetchDataReducer';\nimport ordersReducer from './public/ordersReducer';\n\nconst combinedReducers = combineReducers({\n  routing: routerReducer,\n  user: userReducer,\n  web3: web3Reducer,\n  contracts: contractsReducer,\n  cart: cartReducer,\n  search: searchReducer,\n  business: businessReducer,\n  government: governmentReducer,\n  fetchData: fetchDataReducer,\n  orders: ordersReducer,\n});\n\nconst reducer = (state, action) => {\n  if (action.type === 'RESET_STATE') {\n    const {\n      web3,\n      contracts,\n      routing,\n    } = state;\n    return combinedReducers({\n      web3,\n      contracts,\n      routing,\n      user: null,\n      cart: null,\n      search: null,\n      business: null,\n      government: null,\n      fetchData: null,\n      orders: null,\n    }, action);\n  }\n  return combinedReducers(state, action);\n};\n\nexport default reducer;\n","import { browserHistory } from 'react-router';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { routerMiddleware } from 'react-router-redux';\nimport promise from 'redux-promise-middleware';\nimport reducer from './reducers/reducer';\n\n\n// Redux DevTools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst routingMiddleware = routerMiddleware(browserHistory);\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware, routingMiddleware, promise)),\n);\n\nexport default store;\n","import { browserHistory } from 'react-router';\nimport store from '../../store';\n\n/**\n * @module Init\n * */\nconst Init = {\n\n  /**\n   * Retrieve the web3 Instance.\n   * @function getWeb3Instance\n   * @returns web3 Instance object or undefined.\n   * */\n  getWeb3Instance() {\n    const state = store.getState();\n    return state && state.web3 ? state.web3.web3Instance : undefined;\n  },\n\n  /**\n   * Retrieve the Cubit contract object\n   * @function getCubitContract\n   * @returns cubit contract object or undefined\n   * */\n  getCubitContract() {\n    const state = store.getState();\n    return state.contracts ? state.contracts.cubit : undefined;\n  },\n\n  /**\n   * Retrieve the Government contract object\n   * @function getGovernmentContract\n   * @returns government contract object or undefined\n   * */\n  getGovernmentContract() {\n    const state = store.getState();\n    return state.contracts ? state.contracts.government : undefined;\n  },\n\n  /**\n   * Retrieve the UserManager contract object\n   * @function getUserManagerContract\n   * @returns userManager contract object or undefined\n   * */\n  getUserManagerContract() {\n    const state = store.getState();\n    return state.contracts ? state.contracts.userManager : undefined;\n  },\n\n  /**\n   * Retrieve the Vat contract object\n   * @function getVatContract\n   * @returns vat contract object or undefined\n   * */\n  getVatContract() {\n    const state = store.getState();\n    return state.contracts ? state.contracts.vat : undefined;\n  },\n\n  /**\n   * Retrieve the VatTransaction contract object\n   * @function getVatContract\n   * @returns vatTransaction contract object or undefined\n   * */\n  getVatTransactionContract() {\n    const state = store.getState();\n    return state.contracts ? state.contracts.vatTransaction : undefined;\n  },\n\n  /**\n   * Retrieve the productTransaction contract object\n   * @function getProductTransactionContract\n   * @returns productTransaction contract object or undefined\n   * */\n  getProductTransactionContract() {\n    const state = store.getState();\n    return state.contracts ? state.contracts.productTransaction : undefined;\n  },\n\n  /**\n   * Retrieve the Product contract object\n   * @function getProductContract\n   * @returns product object contract or undefined\n   * */\n  getProductContract() {\n    const state = store.getState();\n    return state.contracts ? state.contracts.product : undefined;\n  },\n\n  /**\n   * Retrieve the currentAccount selected from Metamask as an object\n   * @function getCurrentAccount\n   * @returns account object\n   * */\n  getCurrentAccount() {\n    return Init.getWeb3Instance().eth.getAccounts()\n      .then(result => result[0]);\n  },\n\n  /**\n   * Check if the account has been changed from Metamask.\n   * @function setupAccountChecking\n   * @returns void\n   * */\n  setupAccountChecking() {\n    Init.getCurrentAccount().then((initialAccount) => {\n      let account = initialAccount;\n      setInterval(() => {\n        Init.getCurrentAccount().then((currAccount) => {\n          if (account !== currAccount) {\n            account = currAccount;\n            store.dispatch({\n              type: 'WEB3_ACCOUNT_CHANGED',\n              payload: currAccount,\n            });\n            store.dispatch({\n              type: 'RESET_STATE',\n            });\n            /* const currentLocation = browserHistory.getCurrentLocation();\n\n            if ('redirect' in currentLocation.query) {\n              return browserHistory.push(\n                decodeURIComponent(currentLocation.query.redirect),\n              );\n            } */\n            browserHistory.push('/');\n          }\n        });\n      }, 250);\n    });\n  },\n};\n\nexport default Init;\n","import bs58 from 'bs58';\n\nimport { Buffer } from 'ipfs-http-client';\n\n/**\n * @module Helper\n * */\nconst Helper = {\n  /** Returns bytes32 hex string from base58 encoded ipfs hash,\n  * stripping leading 2 bytes from 34 byte IPFS hash\n  *\n  * Assume IPFS defaults: function:0x12=sha2, size:0x20=256 bits\n  *\n  * E.g. \"QmNSUYVKDSvPUnRLKmuxk9diJ6yS96r1TrAXzjTiBcCLAL\" -->\n  * \"0x017dfd85d4f6cb4dcd715a88101f7b1f06cd1e009b2327a0809d01eb9c91f231\"\n  * @function getBytes32FromIpfsHash\n  * @param ipfsListing\n  * */\n  getBytes32FromIpfsHash(ipfsListing) {\n    return `0x${bs58.decode(ipfsListing)\n      .slice(2)\n      .toString('hex')}`;\n  },\n\n  /**\n   * Returns base58 encoded ipfs hash from bytes32 hex string,\n   *\n   * E.g. \"0x017dfd85d4f6cb4dcd715a88101f7b1f06cd1e009b2327a0809d01eb9c91f231\"\n   *\n   * --> \"QmNSUYVKDSvPUnRLKmuxk9diJ6yS96r1TrAXzjTiBcCLAL\"\n   * @function getIpfsHashFromBytes32\n   * @param bytes32Hex\n   * */\n  getIpfsHashFromBytes32(bytes32Hex) {\n    // Add our default ipfs values for first 2 bytes:\n    // function:0x12=sha2, size:0x20=256 bits\n    // and cut off leading \"0x\"\n    const hashHex = `1220${bytes32Hex.slice(2)}`;\n    const hashBytes = Buffer.from(hashHex, 'hex');\n    return bs58.encode(hashBytes);\n  },\n\n\n};\n\nexport default Helper;\n","import IPFS, { Buffer } from 'ipfs-http-client';\nimport Init from './init';\nimport Helper from './utils/helper';\n\nconst currentAccount = Init.getCurrentAccount;\nconst userManager = Init.getUserManagerContract;\nconst cubit = Init.getCubitContract;\n\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\n/**\n * @module Users\n * */\nconst Users = {\n\n  /**\n   * Registers the given user by taking the user’s data and parsing them into a JSON file.\n   * Once the JSON file has been created this will be stored in IPFS; this operation returns an hash\n   * that will be used to register the user inside the blockchain\n   * @function registerUser\n   * @param {Object} userData object that contains the data belonging the user to register\n   * */\n  registerUser(userData) {\n    const bufferToUpload = Buffer.from(JSON.stringify(userData));\n    return ipfs.add(bufferToUpload).then((result) => {\n      const hash = Helper.getBytes32FromIpfsHash(result[0].hash);\n      return currentAccount()\n        .then(currAccount => userManager().methods.registerUser(userData.userType, hash)\n          .send({ from: currAccount }));\n    });\n  },\n\n  /**\n   * This method builds the JSON ob- ject containing the citizens’s data to be\n   * sent to the function \"registerUser()\" in order to register a citizen\n   * @function registerCitizen\n   * @param {String} name citizen's name\n   * @param {String} surname citizen's surname\n   * @param {String} fiscalCode citizen's fiscal code\n   * @param {String} mail citizen's mail\n   * */\n  registerCitizen(name, surname, fiscalCode, mail) {\n    return currentAccount().then(() => Users.registerUser({\n      userType: 1,\n      name,\n      surname,\n      fiscalCode,\n      mail,\n    }));\n  },\n\n  /**\n   * This method builds the JSON object containing the business owner’s data to be sent to the\n   * function \"registerUser()\" in order to register a business owner\n   * @function registerBusinessOwner\n   * @param {String} businessName business owner's businessName\n   * @param {String} location business owner's location\n   * @param {String} VATNumber business owner's VATNumber\n   * @param {String} CE business owner's CE\n   * */\n  registerBusinessOwner(businessName, location, VATNumber, CE) {\n    return currentAccount().then(() => Users.registerUser({\n      userType: 2,\n      businessName,\n      location,\n      VATNumber,\n      CE,\n    }));\n  },\n\n  /**\n   * Retrieve the caller’s balance in Cubit\n   * @function getUserBalance\n   * @param {String} address user account address\n   * */\n  getUserBalance(address) {\n    return cubit().methods.balanceOf(address).call()\n      .then(result => new Promise((resolve => resolve(\n        (parseFloat(result) / 100.00).toFixed(2),\n      ))));\n  },\n\n  /**\n   * Retrieve citizen data from address\n   * @function getCitizenData\n   * @param {String} address user account address\n   * */\n  getCitizenData(address) {\n    return userManager().methods.getUserHash(address)\n      .call().then(hash => ipfs.cat(Helper.getIpfsHashFromBytes32(hash))\n        .then(ipfsResult => Users.getUserBalance(address)\n          .then(balance => ({\n            ...JSON.parse(ipfsResult.toString()),\n            address,\n            balance,\n          }))));\n  },\n\n  /**\n   * Retrieve BusinessOwner data from address\n   * @function getBusinessData\n   * @param {String} address user account address\n   * */\n  getBusinessData(address) {\n    return userManager().methods.getUserHash(address)\n      .call().then(hash => ipfs.cat(Helper.getIpfsHashFromBytes32(hash))\n        .then(ipfsResult => Users.getUserBalance(address)\n          .then(balance => Users.isBusinessOwnerConfirmed(address)\n            .then(confirmed => ({\n              ...JSON.parse(ipfsResult.toString()),\n              balance,\n              address,\n              confirmed,\n            })))));\n  },\n\n  /**\n   * Retrieve the caller’s data by taking the balance from the blockchain\n   * @function getGovernmentData\n   * @param {String} address government account address\n   * */\n  getGovernmentData(address) {\n    return Users.getUserBalance(address).then(balance => ({ userType: 3, balance }));\n  },\n\n  /**\n   * Takes care to return an error if an attempt of login went wrong\n   * @function failedLogin\n   * @param {Object} error object containing the error to be resolved\n   * */\n  failedLogin(error) {\n    return new Promise((resolve) => {\n      resolve({\n        userType: 0,\n        error,\n      });\n    });\n  },\n\n  /**\n   * Allows a registered user to log in Soldino and returns the user’s data\n   * @function login\n   * @param {String} address user account address\n   * */\n  login(address = null) {\n    return currentAccount().then(currAccount => userManager().methods\n      .isRegistered(address === null ? currAccount : address)\n      .call({ from: currAccount })\n      .then((result) => {\n        switch (result.toString()) {\n          case '0': return Users.failedLogin('User not registered');\n          case '1': return Users.getCitizenData(address === null ? currAccount : address);\n          case '2': return Users.getBusinessData(address === null ? currAccount : address);\n          case '3': return Users.getGovernmentData(address === null ? currAccount : address);\n          default: return Users.failedLogin(`Authentication.login returned an unrecognized value: ${result}`);\n        }\n      }));\n  },\n\n  /**\n   * Retrieve the list of all citizens\n   * @function getAllCitizens\n   * */\n  getAllCitizens() {\n    return userManager().methods.getAllCitizens().call().then(result => result);\n  },\n\n  /**\n   * Retrieve the list of all confirmed business owners\n   * @function getAllBusinessOwners\n   * */\n  getAllBusinessOwners() {\n    return userManager().methods.getAllBusinessOwners().call().then(result => result);\n  },\n\n  /**\n   * Checks if a the given business owner has been confirmed by the government\n   * @function isBusinessOwnerConfirmed\n   * @param {String} address the address that we want to know if it belongs to a\n   * confirmed business owner\n   * */\n  isBusinessOwnerConfirmed(address) {\n    return userManager().methods.isBusinessOwnerConfirmed(address)\n      .call();\n  },\n\n  /**\n   * Gets a list of objects containing all businesses'data\n   * @return {Array} Array of objects with two attributes: address and a boolean\n   * value that identifies if the businessOwner is confirmed.\n   * @function getAllBusinessData\n   * */\n  getAllBusinessData() {\n    return Users.getAllBusinessOwners()\n      .then(allBusinesses => Promise.all(allBusinesses\n        .map(business => Users.getBusinessData(business))));\n  },\n\n  /**\n   * Gets a list of objects containing all citizens'data\n   * @function getAllCitizenData\n   * @return {Array} Array of objects\n   * */\n  getAllCitizenData() {\n    return Users.getAllCitizens()\n      .then(allCitizens => Promise.all(allCitizens\n        .map(citizen => Users.getCitizenData(citizen))));\n  },\n\n  /**\n   * Gets a list of confirmed businessOwner data\n   * @function getAllConfirmedBusinessOwnersData\n   * @return {Array} Array of objects\n   * */\n  getAllConfirmedBusinessOwnersData() {\n    return Users.getAllBusinessData()\n      .then(results => results\n        .filter(business => business.confirmed !== '0'));\n  },\n\n  /**\n   * Retrieve the list of all the registered users that contains all citizens and all\n   * the confirmed business owners\n   * @function getAllRegisteredUsers\n   * */\n  getAllRegisteredUsers() {\n    return userManager().methods.getAllRegisteredUsers().call().then(result => result);\n  },\n\n  /**\n   * Lets the government confirm the given business\n   * @function confirmBusinessOwner\n   * @param {String} address the address that we want to confirm\n   * */\n  confirmBusinessOwner(address) {\n    return currentAccount().then(currAccount => userManager().methods.confirmBusinessOwner(address)\n      .send({ from: currAccount }));\n  },\n\n  /**\n   * Removes the given business from the list of the business owners\n   * @function removeBusinessOwner\n   * @param {String} address the address that we want to remove\n   * */\n  removeBusinessOwner(address) {\n    return currentAccount().then(currAccount => userManager().methods.removeBusinessOwner(address)\n      .send({ from: currAccount }));\n  },\n};\n\nexport default Users;\n","import Init from './init';\nimport Users from './users';\n\nconst cubit = Init.getCubitContract;\nconst government = Init.getGovernmentContract;\nconst currentAccount = Init.getCurrentAccount;\n\n/**\n * @module Cubit\n * */\nconst Cubit = {\n\n  /**\n   * Allows the government to mint the given amount of Cubit\n   * @function mint\n   * @param amount amount of Cubit to be minted\n   * */\n  mint(amount) {\n    const intAmount = parseInt((amount * 100).toFixed(2), 10);\n    return currentAccount().then(currAccount => cubit().methods.mint(currAccount, intAmount)\n      .send({ from: currAccount }));\n  },\n\n  /**\n   * Allows to set the allowance to a specific user of the given value\n   * @function setAllowance\n   * @param spender the user we want to set allowance to\n   * @param value the value with which we want to set the allowance\n   * */\n  setAllowance(spender, value) {\n    return currentAccount().then(currAccount => cubit().methods.approve(spender, value)\n      .send({ from: currAccount }));\n  },\n\n  /**\n   * Allows the government to distribute the given amount of Cubit to all registered\n   * users except those business owners that have not yet been confirmed by the government\n   * @function distributeToAll\n   * @param amount the amount of Cubit we want to distribute to each user\n   * */\n  distributeToAll(amount) {\n    const intAmount = parseInt((amount * 100).toFixed(2), 10);\n    return currentAccount()\n      .then(currAccount => Users.getAllRegisteredUsers()\n        .then(users => Cubit.setAllowance(government().options.address, users.length * intAmount)\n          .then(() => government().methods.distributeToAll(intAmount)\n            .send({ from: currAccount }))));\n  },\n\n  /**\n   * Allows the government to to distribute the given amount of Cubit to the user contained\n   * in the given list\n   * @function distributeToUsers\n   * @param users the list of user we want to distribute some Cubit to\n   * @param amount the amount of Cubit we want to distribute to each user\n   * * */\n  distributeToUsers(users, amount) {\n    const intAmount = parseInt((amount * 100).toFixed(2), 10);\n    return currentAccount().then(currAccount => Cubit\n      .setAllowance(government().options.address, users.length * intAmount)\n      .then(() => government().methods.distributeToUsers(users, intAmount)\n        .send({ from: currAccount })));\n  },\n};\n\nexport default Cubit;\n","import IPFS, { Buffer } from 'ipfs-http-client';\nimport _ from 'underscore';\nimport Init from './init';\nimport Helper from './utils/helper';\nimport Cubit from './cubit';\n\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\nconst product = Init.getProductContract;\nconst currentAccount = Init.getCurrentAccount;\n\n/**\n * @module Products\n * */\nconst Products = {\n\n  /**\n   * @function isValidProductID\n   * @param {String} productID\n   * */\n  isValidProductID(productID) {\n    return product().methods.isValidProductID(productID).call();\n  },\n\n  /**\n   * @function addProduct\n   * @param {Object} productData\n   * */\n  addProduct(productData) {\n    const intPrice = parseInt((productData.price * 100).toFixed(2), 10);\n    const bufferToUpload = Buffer.from(JSON.stringify(productData));\n    return ipfs.add(bufferToUpload).then((result) => {\n      const hash = Helper.getBytes32FromIpfsHash(result[0].hash);\n      return currentAccount()\n        .then(currAccount => product().methods.addProduct(\n          intPrice,\n          productData.availability,\n          productData.VAT,\n          hash,\n        ).send({ from: currAccount }));\n    });\n  },\n\n  /**\n   * @function buyProducts\n   * @param {Array} products\n   * */\n  buyProducts(products) {\n    let value = 0;\n    const intPriceProducts = products.map(element => ({\n      ...element,\n      price: parseInt((element.price * 100).toFixed(0), 10),\n    }));\n    intPriceProducts.forEach((element) => {\n      value += element.price * element.quantity;\n    });\n    return currentAccount()\n      .then(currAccount => Cubit.setAllowance(product().options.address, value)\n        .then(() => product().methods.buyProducts(\n          intPriceProducts.map(element => element.id),\n          intPriceProducts.map(element => element.quantity),\n        ).send({ from: currAccount })));\n  },\n\n  /**\n   * @function deleteProduct\n   * @param {String} productID\n   * */\n  deleteProduct(productID) {\n    return currentAccount()\n      .then(currAccount => product().methods.deleteProduct(productID)\n        .send({ from: currAccount }));\n  },\n\n  /**\n   * @function getProductData\n   * @param {String} productID\n   * */\n  getProductData(productID) {\n    return product().methods.getProductData(productID)\n      .call().then(ethProductData => ipfs.cat(Helper.getIpfsHashFromBytes32(ethProductData[5]))\n        .then((ipfsResult) => {\n          let ipfsProductData = JSON.parse(ipfsResult.toString());\n          const floatPrice = parseFloat((parseFloat(ethProductData[0]) / 100.00).toFixed(2));\n          ipfsProductData = {\n            ...ipfsProductData,\n            id: productID,\n            price: floatPrice,\n            VAT: ethProductData[1],\n            availability: ethProductData[2],\n            owner: ethProductData[3],\n            deleted: ethProductData[4],\n          };\n          return ipfsProductData;\n        }));\n  },\n\n  /**\n   * @function changeAvailability\n   * @param {String} productID\n   * @param {Number} availability\n   * */\n  changeAvailability(productID, availability) {\n    return currentAccount()\n      .then(currAccount => product().methods.changeProductAvailability(productID, availability)\n        .send({ from: currAccount }));\n  },\n\n  /**\n   * @function editProduct\n   * @param {Object} productData\n   * */\n  editProduct(productData) {\n    return this.getProductData(productData.id).then((currentProduct) => {\n      // check if productData & currentProduct are !==\n      if (!_.isEqual(productData, currentProduct)\n      // check if productData & currentProduct have === attrs and values except availability\n      && _.isEqual(_.omit(productData, 'availability'), _.omit(currentProduct, 'availability'))) {\n        return Products.changeAvailability(productData.id, productData.availability);\n      }\n      return Products.deleteProduct(productData.id).then(() => this.addProduct(productData));\n    });\n  },\n\n  /**\n   * @function getAllProducts\n   * */\n  getAllProducts() {\n    return product().methods.getAllProducts().call();\n  },\n\n  /**\n   * @function getAllProductsData\n   * @param {String} ownerAddress\n   * */\n  getAllProductsData(ownerAddress = null) {\n    return Products.getAllProducts().then(results => Promise.all(\n      results.map(productID => Products.getProductData(productID)\n        .then((productData) => {\n          if (ownerAddress === null || ownerAddress === productData.owner) {\n            return productData;\n          }\n          return null;\n        })),\n    ));\n  },\n\n  /**\n   * @function getAllOwnersProductsData\n   * */\n  getAllOwnersProductsData() {\n    return currentAccount().then(currAccount => this.getAllProductsData(currAccount));\n  },\n};\n\nexport default Products;\n","import moment from 'moment';\nimport Init from './init';\nimport users from './users';\nimport cubit from './cubit';\n\nconst vat = Init.getVatContract;\nconst vatTransaction = Init.getVatTransactionContract;\nconst productTransaction = Init.getProductTransactionContract;\nconst currentAccount = Init.getCurrentAccount;\n\n/**\n * @module Vat\n * */\nconst Vat = {\n  /**\n   * @function getTransactionData\n   * @param transactionID: the ID of the transaction we want to get the vat total\n   * */\n  getTransactionData(transactionID) {\n    return vatTransaction().methods.getVATTransactionData(transactionID).call()\n      .then(ethData => ({\n        id: transactionID,\n        amount: parseFloat((parseFloat(ethData[0]) / 100.00).toFixed(2)),\n        date: ethData[1],\n        addresser: ethData[2],\n        addressee: ethData[3],\n        refused: ethData[4],\n      }));\n  },\n\n  /**\n   * Returns the given transaction's VAT total\n   * @function getTransactionVATTotal\n   * @param transactionID: the ID of the transaction we want to get the vat total\n   * */\n  getTransactionVATTotal(transactionID) {\n    return productTransaction().methods.getTransactionVATTotal(transactionID).call();\n  },\n\n  /**\n   * Returns the VAT balance of a given quarter of a given business owner\n   * @function getQuarterVATBalance\n   * @param year: referenced year\n   * @param quarter: referenced quarter\n   * @param businessOwner: business owner whose VAT balance we want to know\n   * */\n  getQuarterVATBalance(year, quarter, businessOwner) {\n    return vat().methods.getQuarterVATBalance(year, quarter, businessOwner).call();\n  },\n\n  /**\n   * Allows a business owner to pay VAT to government\n   * @function payVATToGovernment\n   * @param year: referenced year\n   * @param quarter: referenced quarter\n   * */\n  payVATToGovernment(year, quarter, amount) {\n    return currentAccount()\n      .then(currAccount => cubit\n        .setAllowance(vat().options.address, parseInt((parseFloat(amount) * 100).toFixed(2), 10))\n        .then(() => vat().methods.payVATToGovernment(year, quarter)\n          .send({ from: currAccount })));\n  },\n\n  /**\n   * Allows the government to pay VAT to a business owner\n   * @function payVATToBusinessOwner\n   * @param year: referenced year\n   * @param quarter: referenced quarter\n   * @param businessOwner: business owner who the government wants to pay VAT to\n   * @param amount: the amount of cubit that the government should pay\n   * */\n  payVATToBusinessOwner(year, quarter, businessOwner, amount) {\n    return currentAccount()\n      .then(currAccount => cubit\n        .setAllowance(vat().options.address, parseInt((parseFloat(amount) * 100).toFixed(2), 10))\n        .then(() => vat().methods.payVATToBusinessOwner(year, quarter, businessOwner)\n          .send({ from: currAccount })));\n  },\n\n  refuseVAT(year, quarter) {\n    return currentAccount()\n      .then(currAccount => vat().methods.refusePayment(year, quarter)\n        .send({ from: currAccount }));\n  },\n\n  /**\n   * Returns the caller's amount of VAT deductions of a specific quarter\n   * @function getVATDeductions\n   * @param fromYear: start year\n   * @param fromQuarter: start quarter\n   * @param toYear: end year\n   * @param toQuarter: end quarter\n   * */\n  getVATDeductions(fromYear, fromQuarter, toYear, toQuarter) {\n    return vatTransaction().methods.getVATDeductions(fromYear, fromQuarter, toYear, toQuarter)\n      .call();\n  },\n\n  /**\n   * Returns the caller's amount of VAT compensations of a specific quarter\n   * @function getVATCompensations\n   * @param fromYear: start year\n   * @param fromQuarter: start quarter\n   * @param toYear: end year\n   * @param toQuarter: end quarter\n   * */\n  getVATCompensations(fromYear, fromQuarter, toYear, toQuarter) {\n    return vatTransaction().methods.getVATCompensations(fromYear, fromQuarter, toYear, toQuarter)\n      .call();\n  },\n\n  /**\n   * Returns the caller's payment history\n   * @function getBusinessOwnerVATHistory\n   * @param {String} address the address that we want to confirm\n   * */\n  getBusinessOwnerVATHistory(address = null) {\n    return currentAccount().then(currAccount => users\n      .isBusinessOwnerConfirmed(address === null ? currAccount : address)\n      .then((result) => {\n        const confirmedDate = moment.unix(result);\n        const confirmedYear = confirmedDate.year();\n        const confirmedQuarter = confirmedDate.quarter();\n\n        const actualDate = moment();\n        const actualYear = actualDate.year();\n        const actualQuarter = actualDate.quarter();\n\n        let startQuarter = confirmedQuarter;\n        let endQuarter = 4;\n        const res = [];\n        for (let curYear = confirmedYear; curYear <= actualYear; curYear += 1) {\n          if (curYear === actualYear) {\n            endQuarter = actualQuarter;\n          }\n\n          for (let curQuarter = startQuarter; curQuarter <= endQuarter; curQuarter += 1) {\n            res.push(Vat.getBusinessVATStatus(curYear, curQuarter,\n              address === null ? currAccount : address)\n              .then(vatStatus => ({\n                year: curYear,\n                quarter: curQuarter,\n                status: vatStatus,\n              })));\n          }\n          startQuarter = 1;\n        }\n        return Promise.all(res);\n      }));\n  },\n\n  /**\n   * Returns the status of a given payment related to a specific quarter\n   * @function getBusinessVATStatus\n   * @param year year of payment\n   * @param quarter quarter of payment\n   * @param businessAddress address of the business who we want to check payment\n   * */\n  getBusinessVATStatus(year, quarter, businessAddress) {\n    return vat().methods.getBusinessVATStatus(year, quarter, businessAddress)\n      .call().then((status) => {\n        switch (parseInt(status[0], 10)) {\n          case 0: return { status: 'NotNecessary' };\n          case 1:\n            return Vat.getQuarterVATBalance(year, quarter, businessAddress).then(amount => ({\n              status: 'ToReceive',\n              amount: parseFloat((parseFloat(amount) / 100.00).toFixed(2)),\n            }));\n          case 2:\n            return Vat.getQuarterVATBalance(year, quarter, businessAddress).then(amount => ({\n              status: 'ToPay',\n              amount: -parseFloat((parseFloat(amount) / 100.00).toFixed(2)),\n            }));\n          case 3:\n            return Vat.getTransactionData(status[1]).then(transData => ({\n              status: 'Received',\n              transaction: transData,\n            }));\n          case 4:\n            return Vat.getTransactionData(status[1]).then(transData => ({\n              status: 'Payed',\n              transaction: transData,\n            }));\n          case 5:\n            return Vat.getTransactionData(status[1]).then(transData => ({\n              status: 'Refused',\n              transaction: transData,\n            }));\n          default: return { status: 'StatusNotFound' };\n        }\n      });\n  },\n\n  /**\n   * Gets Vat compensation from a transaction\n   * @function getVATTransactionData\n   * @param transactionID\n   * */\n  getVATTransactionData(transactionID) {\n    return vatTransaction().methods.getVATCompensations(transactionID).call();\n  },\n};\n\nexport default Vat;\n","import moment from 'moment';\nimport products from './products';\nimport users from './users';\nimport Init from './init';\nimport Vat from './vat';\n\nconst productTransaction = Init.getProductTransactionContract;\nconst currentAccount = Init.getCurrentAccount;\n\n/**\n * @module Orders\n * */\nconst Orders = {\n\n  /**\n   * Returns the given transaction's data\n   * @function getTransactionData\n   * @param transactionID: the ID of the transaction we want to get data\n   * */\n  getTransactionData(transaction) {\n    return productTransaction().methods.getTransactionData(transaction).call()\n      .then((data) => {\n        const buyerAddress = data[3];\n        return Vat.getTransactionVATTotal(transaction).then((totalVat) => {\n          const retData = {\n            id: transaction,\n            productQuantities: data[1],\n            date: moment.unix(data[2]).toDate().toDateString(),\n            totalVat: parseFloat((parseFloat(totalVat) / 100.00).toFixed(2)),\n          };\n          return Promise.all(data[0].map(productID => products.getProductData(productID)))\n            .then((productsData) => {\n              retData.products = productsData;\n              const sellerAddress = productsData[0].owner;\n              retData.total = 0;\n              for (let i = 0; i < productsData.length; i += 1) {\n                retData.total += productsData[i].price * retData.productQuantities[i];\n              }\n              return users.login(buyerAddress).then((buyerData) => {\n                switch (buyerData.userType) {\n                  case 1:\n                    retData.buyer = `${buyerData.name} ${buyerData.surname}`;\n                    break;\n                  case 2:\n                    retData.buyer = buyerData.businessName;\n                    break;\n                  case 3:\n                    retData.buyer = 'Government';\n                    break;\n                  default:\n                    break;\n                }\n                return users.login(sellerAddress).then((sellerData) => {\n                  switch (sellerData.userType) {\n                    case 1:\n                      retData.seller = `${sellerData.name} ${sellerData.surname}`;\n                      break;\n                    case 2:\n                      retData.seller = sellerData.businessName;\n                      break;\n                    case 3:\n                      retData.seller = 'Government';\n                      break;\n                    default:\n                      break;\n                  }\n                  return retData;\n                });\n              });\n            });\n        });\n      });\n  },\n\n  /**\n   * @function getAllSellerTransactions\n   * @param {String} address user account address\n   * */\n  getAllSellerTransactions(address) {\n    return currentAccount().then(currAccount => productTransaction().methods\n      .getSellerTransaction(address === undefined ? currAccount : address).call()\n      .then(transactions => Promise.all(transactions.map((transaction) => {\n        const transData = this.getTransactionData(transaction);\n        transData.id = transaction;\n        return transData;\n      }))));\n  },\n\n  /**\n   * @function getSellerTransactions\n   * @param {String} address user account address\n   * @param {String} fromDate\n   * @param {String} toDate\n   * */\n  getSellerTransactions(address = null, fromDate, toDate) {\n    return currentAccount().then(currAccount => productTransaction().methods\n      .getSellerTransaction(address === null ? currAccount : address, fromDate, toDate).call()\n      .then(transactions => Promise.all(transactions.map((transaction) => {\n        const transData = this.getTransactionData(transaction);\n        transData.id = transaction;\n        return transData;\n      }))));\n  },\n\n  /**\n   * @function getAllBuyerTransactions\n   * @param {String} address user account address\n   * */\n  getAllBuyerTransactions(address) {\n    return currentAccount().then(currAccount => productTransaction().methods\n      .getBuyerTransaction(address === undefined ? currAccount : address).call()\n      .then(transactions => Promise.all(transactions.map((transaction) => {\n        const transData = this.getTransactionData(transaction);\n        transData.id = transaction;\n        return transData;\n      }))));\n  },\n\n  /**\n   * @function getBuyerTransactions\n   * @param {String} address user account address\n   * @param {String} fromDate\n   * @param {String} toDate\n   * */\n  getBuyerTransactions(address = null, fromDate, toDate) {\n    return currentAccount().then(currAccount => productTransaction().methods\n      .getBuyerTransaction(address === null ? currAccount : address, fromDate, toDate).call()\n      .then(transactions => Promise.all(transactions.map((transaction) => {\n        const transData = this.getTransactionData(transaction);\n        transData.id = transaction;\n        return transData;\n      }))));\n  },\n};\n\nexport default Orders;\n","import Init from './init';\nimport Users from './users';\nimport Products from './products';\nimport Vat from './vat';\nimport Cubit from './cubit';\nimport Orders from './orders';\n\n/**\n * SoldinoAPI module.\n * SoldinoAPI is the starting point to call specific APIs of Soldino App.\n *\n * It can be exported as a whole object containing all the APIs or via\n * destructuring operator selecting just the needed APIs.\n *\n * All the APIs are grouped according to the type of objects and features they affect.\n * @module SoldinoAPI\n * @property {Function}  init Core APIs with getters and setters of Solidity contracts\n * @property {Function}  users Users APIs\n * @property {Function}  products Products APIs\n * @property {Function}  vat Vat APIs\n * @property {Function}  cubit Cubit APIs\n * @property {Function}  orders Orders APIs\n */\nconst SoldinoAPI = {\n  /**\n   * Init module.\n   * @see module:Init.js\n   */\n  init: Init,\n  /**\n   * Users module.\n   * @see module:Users\n   */\n  users: Users,\n  /**\n   * Users Products.\n   * @see module:Products\n   */\n  products: Products,\n  /**\n   * Vat module.\n   * @see module:Vat\n   */\n  vat: Vat,\n  /**\n   * Cubit module.\n   * @see module:Cubit\n   */\n  cubit: Cubit,\n  /**\n   * Orders module.\n   * @see module:Orders\n   */\n  orders: Orders,\n};\n\nexport default SoldinoAPI;\n","export const START_FETCH_DATA = 'START_FETCH_DATA';\nexport const STOP_FETCH_DATA = 'STOP_FETCH_DATA';\n\nexport function startFetchData() {\n  return {\n    type: START_FETCH_DATA,\n  };\n}\n\nexport function stopFetchData() {\n  return {\n    type: STOP_FETCH_DATA,\n  };\n}\n","import API from '../../util/API/SoldinoAPI';\nimport { startFetchData, stopFetchData } from './FetchDataActions';\n\nexport const GET_ORDERS_HISTORY = 'GET_ORDERS_HISTORY';\n\nfunction setOrderHistory(bought, sold) {\n  return {\n    type: GET_ORDERS_HISTORY,\n    payload: {\n      purchase: bought,\n      sell: sold,\n    },\n  };\n}\n\nexport function getOrdersHistory() {\n  return (dispatch) => {\n    dispatch(startFetchData());\n    API.orders.getAllBuyerTransactions().then((bought) => {\n      API.orders.getAllSellerTransactions().then((sold) => {\n        dispatch(setOrderHistory(bought, sold));\n        dispatch(stopFetchData());\n      });\n    });\n  };\n}\n","import { connect } from 'react-redux';\nimport OrdersManagement from '../../components/business/OrdersManagement';\nimport { getOrdersHistory } from '../../actions/public/OrdersHistoryActions';\n\nfunction mapStateToProps(state) {\n  return {\n    isLoading: state.fetchData.isLoading,\n    ordersHistoryDataPurchase: state.orders.purchase,\n    ordersHistoryDataSell: state.orders.sell,\n  };\n}\nconst mapDispatchToProps = dispatch => ({\n  getOrdersHistory: () => {\n    dispatch(getOrdersHistory());\n  },\n});\n\nconst OrdersManagementContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(OrdersManagement);\n\nexport default OrdersManagementContainer;\n","import React from 'react';\nimport {\n  Button,\n  Container,\n  Table,\n  Row,\n} from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport PropTypes from 'prop-types';\nimport AlertMessage from '../public/AlertMessage';\nimport LoadingSpinner from '../public/LoadingSpinner';\n\nclass ProductsManagement extends React.Component {\n  componentDidMount() {\n    const { getProductsList } = this.props;\n    getProductsList();\n  }\n\n  render() {\n    const { productsList, removeProduct, isLoading } = this.props;\n    let allProducts = null;\n\n    if (productsList !== null) {\n      if (productsList.length !== 0) {\n        allProducts = productsList.map(item => (\n          <tr key={item.id}>\n            <td>{item.id}</td>\n            <td>{item.name}</td>\n            <td>{item.description}</td>\n            <td>{item.availability}</td>\n            <td>{item.VAT}</td>\n            <td>{item.price}</td>\n            <td>\n              <Link to={{\n                pathname: `/productsManagement/ModifyProduct/${item.id}`,\n                state: item,\n              }}\n              >\n                <Button type=\"button\" variant=\"warning\">Modify</Button>\n              </Link>\n            </td>\n            <td>\n              <Button type=\"button\" variant=\"danger\" onClick={() => removeProduct(item.id)}>Remove</Button>\n            </td>\n          </tr>\n        ));\n      }\n    }\n\n    let allProductsToPrint = null;\n\n    if (allProducts !== null) {\n      allProductsToPrint = (\n        <Table striped bordered hover>\n          <thead>\n            <tr key={-1}>\n              <th>Id</th>\n              <th>Name</th>\n              <th>Description</th>\n              <th>Availability</th>\n              <th>VAT</th>\n              <th>Price</th>\n              <th>Modify</th>\n              <th>Remove</th>\n            </tr>\n          </thead>\n          <tbody>\n            { allProducts }\n          </tbody>\n        </Table>\n      );\n    } else {\n      allProductsToPrint = <AlertMessage variant=\"info\" message=\"No products.\" />;\n    }\n\n    return (\n      <Container>\n        <Link to=\"/profile\">\n          <Button variant=\"dark\" size=\"lg\">\n                  Back to all actions\n          </Button>\n        </Link>\n        <h2>Products Management</h2>\n        <Row className=\"justify-content-md-center\">\n          <Link to=\"/profile/AddProducts\">\n            <Button variant=\"primary\" size=\"lg\">\n                            Add a product\n            </Button>\n          </Link>\n        </Row>\n        <br />\n        {isLoading ? <LoadingSpinner /> : allProductsToPrint}\n      </Container>\n    );\n  }\n}\n\nProductsManagement.propTypes = {\n  isLoading: PropTypes.bool,\n  // eslint-disable-next-line\n    productsList: PropTypes.array,\n  // eslint-disable-next-line\n    removeProduct: PropTypes.func.isRequired,\n  // eslint-disable-next-line\n    getProductsList: PropTypes.func.isRequired,\n};\n\nProductsManagement.defaultProps = {\n  isLoading: false,\n};\n\nexport default ProductsManagement;\n","import { browserHistory } from 'react-router';\nimport API from '../../util/API/SoldinoAPI';\nimport { startFetchData, stopFetchData } from '../public/FetchDataActions';\n\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const MODIFY_PRODUCT = 'MODIFY_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const GET_PRODUCTS_LIST = 'GET_PRODUCTS_LIST';\n\n\nfunction returnProductList(products) {\n  return {\n    type: GET_PRODUCTS_LIST,\n    payload: products,\n  };\n}\n\nexport function getProductsList() {\n  return function (dispatch) {\n    dispatch(startFetchData());\n    API.products.getAllOwnersProductsData().then((products) => {\n      dispatch(returnProductList(products.filter(item => item !== null && item.deleted === false)));\n      dispatch(stopFetchData());\n    });\n  };\n}\n\nfunction removedProduct() {\n  return {\n    type: REMOVE_PRODUCT,\n  };\n}\n\nexport function removeProduct(id) {\n  return function (dispatch) {\n    API.products.deleteProduct(id).then(() => {\n      dispatch(removedProduct());\n      dispatch(getProductsList());\n    });\n  };\n}\n\nfunction productAdded(productInfo) {\n  return {\n    type: ADD_PRODUCT,\n    payload: productInfo,\n  };\n}\n\nfunction productModified(productInfo) {\n  return {\n    type: MODIFY_PRODUCT,\n    payload: productInfo,\n  };\n}\n\nexport function addProduct(productInfo) {\n  return function (dispatch) {\n    API.products.addProduct(productInfo).then(() => {\n      dispatch(productAdded(productInfo));\n\n      const currentLocation = browserHistory.getCurrentLocation();\n\n      if ('redirect' in currentLocation.query) {\n        return browserHistory.push(\n          decodeURIComponent(currentLocation.query.redirect),\n        );\n      }\n      return browserHistory.push('/profile/productsManagement');\n    });\n  };\n}\n\nexport function modifyProduct(productInfo) {\n  return function (dispatch) {\n    API.products.editProduct(productInfo).then(() => {\n      dispatch(productModified(productInfo));\n\n      const currentLocation = browserHistory.getCurrentLocation();\n\n      if ('redirect' in currentLocation.query) {\n        return browserHistory.push(\n          decodeURIComponent(currentLocation.query.redirect),\n        );\n      }\n      return browserHistory.push('/profile/productsManagement');\n    });\n  };\n}\n","import { connect } from 'react-redux';\nimport ProductsManagement from '../../components/business/ProductsManagement';\nimport { getProductsList, removeProduct } from '../../actions/business/ProductsManagementActions';\n\nfunction mapStateToProps(state) {\n  return {\n    productsList: state.business.productsList,\n    isLoading: state.fetchData.isLoading,\n  };\n}\nconst mapDispatchToProps = dispatch => ({\n  getProductsList: () => {\n    dispatch(getProductsList());\n  },\n  removeProduct: (id) => {\n    dispatch(removeProduct(id));\n  },\n});\n\nconst ProductsManagementContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ProductsManagement);\n\nexport default ProductsManagementContainer;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport {Table} from 'react-bootstrap';\nimport {Link} from 'react-router';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport LoadingSpinner from '../public/LoadingSpinner';\nimport AlertMessage from '../public/AlertMessage';\n\nclass VATManagement extends React.Component {\n  componentDidMount() {\n    const {getVATHistory, getOrdersHistory} = this.props;\n    getVATHistory();\n    getOrdersHistory();\n  }\n\n  getPendingQuarters() {\n    const {VATHistory} = this.props;\n    if (VATHistory !== null) {\n      return VATHistory.filter(quarter => (\n        quarter.status.status === 'ToReceive'\n        || quarter.status.status === 'ToPay'\n      ));\n    }\n    return null;\n  }\n\n  totalVatDeductions() {\n    const {OrdersHistory} = this.props;\n    let total = 0;\n    if (OrdersHistory.purchase !== null && OrdersHistory.purchase !== undefined) {\n      OrdersHistory.purchase.forEach((purchase) => {\n        total = parseFloat((total + purchase.totalVat).toFixed(2));\n      });\n    }\n    return total;\n  }\n\n  totalVatCompensations() {\n    const {OrdersHistory} = this.props;\n    let total = 0;\n    if (OrdersHistory.sell !== null && OrdersHistory.sell !== undefined) {\n      OrdersHistory.sell.forEach((purchase) => {\n        total = parseFloat((total + purchase.totalVat).toFixed(2));\n      });\n    }\n    return total;\n  }\n\n  totalVat() {\n    const total = this.totalVatCompensations() - this.totalVatDeductions();\n    return parseFloat(total.toFixed(2));\n  }\n\n  render() {\n    const {\n      payVAT, refuseVAT, isLoading, OrdersHistory,\n    } = this.props;\n\n    let pendingQuartersView = null;\n\n    const pendingQuarters = this.getPendingQuarters();\n    if (pendingQuarters !== undefined && pendingQuarters !== null && pendingQuarters.length !== 0) {\n      pendingQuartersView = pendingQuarters.map(item => (\n        <tr key={`${item.year} ${item.quarter}`} style={{width: '100%'}}>\n          <td>\n            {item.quarter}\n            {' quarter '}\n            {item.year}\n            {':'}\n          </td>\n          <td><Button type=\"button\" onClick={() => payVAT(item)}>Pay now</Button></td>\n          <td><Button type=\"button\" variant=\"danger\" onClick={() => refuseVAT(item)}>Refuse</Button></td>\n        </tr>\n      ));\n    }\n\n    let pendingQuartersToPrint = null;\n    if (pendingQuartersView !== null) {\n      pendingQuartersToPrint = (\n        <Table striped bordered hover>\n          <tbody>\n          {pendingQuartersView}\n          </tbody>\n        </Table>\n      );\n    } else {\n      pendingQuartersToPrint = <AlertMessage variant=\"info\" message=\"No pending quarters to pay.\"/>;\n    }\n    console.log(this.props);\n    const data = (\n      <Row>\n        <Col>\n          <Table striped bordered hover>\n            <tbody>\n            <tr key=\"0\">\n              <td>VAT Deductions:</td>\n              <td><h3 style={{color: 'green'}}>{this.totalVatDeductions()}</h3></td>\n            </tr>\n            <tr key=\"1\">\n              <td>VAT Compensations:</td>\n              <td><h3 style={{color: 'red'}}>{this.totalVatCompensations()}</h3></td>\n            </tr>\n            <tr key=\"2\">\n              <td><b>VAT Total:</b></td>\n              <td><h3>{this.totalVat()}</h3></td>\n            </tr>\n            </tbody>\n          </Table>\n          <Link to={{\n            pathname: '/profile/VATLedger',\n            state: {\n              sell: OrdersHistory.sell === null\n                  || OrdersHistory.sell === undefined\n                  || OrdersHistory.sell.length === 0 ? []\n                : OrdersHistory.sell.filter((transaction) => {\n                  const date = moment(transaction.date);\n                  return date.isAfter(moment(0)\n                    .set({ year: moment().year(), quarter: moment().quarter() }))\n                  && date.isBefore(moment(0)\n                    .set({ year: moment().year(), quarter: moment().quarter() }).add(1, 'Q'));\n                }),\n              purchase: OrdersHistory.purchase === null\n                  || OrdersHistory.purchase === undefined\n                  || OrdersHistory.purchase.length === 0 ? []\n                : OrdersHistory.purchase.filter((transaction) => {\n                  const date = moment(transaction.date);\n                  return date.isAfter(moment(0)\n                    .set({ year: moment().year(), quarter: moment().quarter() }))\n                  && date.isBefore(moment(0)\n                    .set({ year: moment().year(), quarter: moment().quarter() }).add(1, 'Q'));\n                }),\n            },\n          }}\n          >\n            <Button variant=\"info\" type=\"button\">\n              SEE LEDGER\n            </Button>\n          </Link>\n        </Col>\n        <Col>\n          <div style={{height: '200px', overflow: 'auto', marginBottom: '1rem'}}>\n            {pendingQuartersToPrint}\n          </div>\n          <Link to=\"/profile/VATTransactionLedger\">\n            <Button variant=\"info\" type=\"submit\">\n              SEE VAT PAYMENTS HISTORY\n            </Button>\n          </Link>\n        </Col>\n      </Row>\n    );\n    return (\n      <Container>\n        <Link to=\"/profile\">\n          <Button variant=\"dark\" size=\"lg\">\n            Back to all actions\n          </Button>\n        </Link>\n        <Row>\n          <Col>\n            <h2>Current quarter</h2>\n          </Col>\n          <Col>\n            <h2>Pending quarters</h2>\n          </Col>\n        </Row>\n        {isLoading ? <LoadingSpinner/> : data}\n      </Container>\n    );\n  }\n}\n\nVATManagement.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  getVATHistory: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types,react/require-default-props\n  VATHistory: PropTypes.array,\n  getOrdersHistory: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types,react/require-default-props\n  OrdersHistory: PropTypes.object,\n  payVAT: PropTypes.func.isRequired,\n  refuseVAT: PropTypes.func.isRequired,\n};\n\nexport default VATManagement;\n","import API from '../../util/API/SoldinoAPI';\nimport {startFetchData, stopFetchData} from \"./FetchDataActions\";\n\nexport const SEARCH_PRODUCTS = 'SEARCH_PRODUCTS';\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\n\nfunction searchResult(result) {\n  return {\n    type: SEARCH_PRODUCTS,\n    payload: result,\n  };\n}\n\nfunction search(item, query) {\n  const name = item.name.toLowerCase();\n  const desc = item.description.toLowerCase();\n  return (name.indexOf(query.toLowerCase()) !== -1) || (desc.indexOf(query.toLowerCase()) !== -1);\n}\n\nexport function searchProducts(query) {\n  return function (dispatch) {\n    dispatch(startFetchData());\n    if (query === '') {\n      dispatch(searchResult([]));\n      dispatch(stopFetchData());\n    } else {\n      API.products.getAllProductsData().then((items) => {\n        const result = items.filter(item => search(item, query) && item.deleted === false);\n        dispatch(searchResult(result));\n        dispatch(stopFetchData());\n      });\n    }\n  };\n}\n\nexport function clearSearch() {\n  const result = null;\n  return {\n    type: CLEAR_SEARCH,\n    payload: result,\n  };\n}\n","import API from '../../util/API/SoldinoAPI';\nimport { clearSearch } from './SearchActions';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const USER_UPDATED = 'USER_UPDATED';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\nexport const BUY = 'BUY';\nexport const CLEAR_CART = 'CLEAR_CART';\n\nexport const addToCart = item => ({\n  type: ADD_TO_CART,\n  payload: item,\n});\n\nexport const userUpdated = user => ({\n  type: USER_UPDATED,\n  payload: user,\n});\n\nexport const removeItem = id => ({\n  type: REMOVE_ITEM,\n  payload: id,\n});\n\nexport const subtractQuantity = id => ({\n  type: SUB_QUANTITY,\n  payload: id,\n});\n\nexport const addQuantity = id => ({\n  type: ADD_QUANTITY,\n  payload: id,\n});\n\nfunction productBought(result) {\n  return {\n    type: BUY,\n    payload: result,\n  };\n}\n\nexport const clearCart = () => ({\n  type: CLEAR_CART,\n});\n\nexport function buyCart(cart) {\n  return (dispatch) => {\n    API.products.buyProducts(cart).then(() => {\n      dispatch(productBought(0));\n      dispatch(clearCart());\n      dispatch(clearSearch());\n      API.users.login().then((result) => {\n        dispatch(userUpdated(result));\n      });\n    }, (err) => {\n      dispatch(productBought(err));\n    });\n  };\n}\n","import { startFetchData, stopFetchData } from '../public/FetchDataActions';\nimport API from '../../util/API/SoldinoAPI';\nimport { userUpdated } from '../public/CartActions';\n\nexport const PAY_VAT = 'PAY_VAT';\nexport const GET_VAT_HISTORY = 'GET_VAT_HISTORY';\n\nfunction setVatHistory(data) {\n  return {\n    type: GET_VAT_HISTORY,\n    payload: data,\n  };\n}\n\nexport function getVATHistory(address = null) {\n  return (dispatch) => {\n    dispatch(startFetchData());\n    API.vat.getBusinessOwnerVATHistory(address).then((history) => {\n      dispatch(setVatHistory(history));\n      dispatch(stopFetchData());\n    });\n  };\n}\n\nexport function payVAT(item, address = null) {\n  return (dispatch) => {\n    if (item.status.status === 'ToPay') {\n      API.vat.payVATToGovernment(item.year, item.quarter, item.status.amount).then(() => {\n        dispatch(getVATHistory());\n        API.users.login().then((result) => {\n          dispatch(userUpdated(result));\n        });\n      });\n    } else if (item.status.status === 'ToReceive') {\n      API.vat.payVATToBusinessOwner(item.year, item.quarter, address, item.status.amount)\n        .then(() => {\n          dispatch(getVATHistory());\n          API.users.login().then((result) => {\n            dispatch(userUpdated(result));\n          });\n        });\n    }\n  };\n}\n\nexport function refuseVAT(item) {\n  return (dispatch) => {\n    if (item.status.status === 'ToPay') {\n      API.vat.refuseVAT(item.year, item.quarter)\n        .then(() => {\n          dispatch(getVATHistory());\n          API.users.login().then((result) => {\n            dispatch(userUpdated(result));\n          });\n        });\n    }\n  };\n}\n","import { connect } from 'react-redux';\nimport VATManagement from '../../components/business/VATManagement';\nimport { payVAT, getVATHistory, refuseVAT } from '../../actions/business/VATManagementActions';\nimport { getOrdersHistory } from '../../actions/public/OrdersHistoryActions';\n\nfunction mapStateToProps(state) {\n  return {\n    VATHistory: state.business.VATHistory,\n    OrdersHistory: state.orders,\n    isLoading: state.fetchData.isLoading,\n  };\n}\nconst mapDispatchToProps = dispatch => ({\n\n  getVATHistory: () => {\n    dispatch(getVATHistory());\n  },\n  getOrdersHistory: () => {\n    dispatch(getOrdersHistory());\n  },\n  payVAT: (item) => {\n    dispatch(payVAT(item));\n  },\n  refuseVAT: (item) => {\n    dispatch(refuseVAT(item));\n  },\n});\n\nconst VATManagementContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(VATManagement);\n\nexport default VATManagementContainer;\n","import React from 'react';\nimport { Link } from 'react-router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { VisibleOnlyCitizen } from '../../util/wrappers';\n\nconst CitizenHome = (props) => {\n  const { authData } = props;\n  const CitizenData = VisibleOnlyCitizen(() => (\n    <ListGroup variant=\"flush\">\n      <ListGroup.Item variant=\"dark\">\n          Name:\n        {' '}\n        {authData.name}\n      </ListGroup.Item>\n      <ListGroup.Item variant=\"dark\">\n          Surname:\n        {' '}\n        {authData.surname}\n      </ListGroup.Item>\n      <ListGroup.Item variant=\"dark\">\n          Fiscal code:\n        {' '}\n        {authData.fiscalCode}\n      </ListGroup.Item>\n      <ListGroup.Item variant=\"dark\">\n          Balance:\n        {' '}\n        {authData.balance}\n      </ListGroup.Item>\n    </ListGroup>\n  ));\n  return (\n    <Container>\n      <Row>\n        <h1>Citizen Profile</h1>\n      </Row>\n      <Row>\n        <Col>\n          <Card bg=\"dark\" text=\"white\">\n            <Card.Header as=\"h3\">Information</Card.Header>\n            <CitizenData />\n          </Card>\n        </Col>\n\n        <Col>\n          <Card bg=\"dark\" text=\"white\">\n            <Card.Header as=\"h3\">Actions</Card.Header>\n            <Link to=\"/profile/ordersHistory\">\n              <Button variant=\"info\" size=\"lg\" block>\n                        Orders\n              </Button>\n            </Link>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nCitizenHome.propTypes = {\n  // eslint-disable-next-line\n    authData: PropTypes.object.isRequired,\n};\n\nexport default CitizenHome;\n","import { connect } from 'react-redux';\nimport CitizenHome from '../../components/citizen/CitizenHome';\n\nconst mapStateToProps = state => ({\n  authData: state.user.data,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nconst CitizenHomeContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CitizenHome);\n\nexport default CitizenHomeContainer;\n","import React from 'react';\nimport { Link } from 'react-router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { VisibleOnlyBusinessOwner } from '../../util/wrappers';\nimport AlertMessage from '../public/AlertMessage';\n\nconst BusinessHome = (props) => {\n  const { authData } = props;\n\n  const BusinessData = VisibleOnlyBusinessOwner(() => (\n    <ListGroup variant=\"flush\">\n      <ListGroup.Item variant=\"dark\">\n                Business name:\n        {' '}\n        {authData.businessName}\n      </ListGroup.Item>\n      <ListGroup.Item variant=\"dark\">\n                Business location:\n        {' '}\n        {authData.location}\n      </ListGroup.Item>\n      <ListGroup.Item variant=\"dark\">\n                VAT number:\n        {' '}\n        {authData.VATNumber}\n      </ListGroup.Item>\n      <ListGroup.Item variant=\"dark\">\n                Certified e-mail:\n        {' '}\n        {authData.CE}\n      </ListGroup.Item>\n      <ListGroup.Item variant=\"dark\">\n                Balance:\n        {' '}\n        {authData.balance}\n      </ListGroup.Item>\n    </ListGroup>\n  ));\n\n  return (\n    <Container>\n      <Row>\n        <h1>Business Owner Profile</h1>\n        <br />\n        {authData.confirmed === '0' ? (\n          <AlertMessage\n            variant=\"warning\"\n            message={'In order to use Soldino you '\n          + 'need to be accepted by the government. Your actions are disabled until the confirm.'}\n          />\n        ) : null}\n      </Row>\n      <Row>\n        <Col>\n          <Card bg=\"dark\" text=\"white\">\n            <Card.Header as=\"h3\">Information</Card.Header>\n            <BusinessData />\n          </Card>\n        </Col>\n        <Col>\n          <Card bg=\"dark\" text=\"white\">\n            <Card.Header as=\"h3\">Actions</Card.Header>\n            <Link\n              to=\"/profile/productsManagement\"\n              style={authData.confirmed === '0' ? { pointerEvents: 'none' } : null}\n            >\n              <Button variant=\"info\" size=\"lg\" block disabled={authData.confirmed === '0'}>\n                        Products Management\n              </Button>\n            </Link>\n            <Link\n              to=\"/profile/ordersManagement\"\n              style={authData.confirmed === '0' ? { pointerEvents: 'none' } : null}\n            >\n              <Button variant=\"info\" size=\"lg\" block disabled={authData.confirmed === '0'}>\n                      Orders History\n              </Button>\n            </Link>\n            <Link\n              to=\"/profile/vatManagement\"\n              style={authData.confirmed === '0' ? { pointerEvents: 'none' } : null}\n            >\n              <Button variant=\"info\" size=\"lg\" block disabled={authData.confirmed === '0'}>\n                        VAT Management\n              </Button>\n            </Link>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nBusinessHome.propTypes = {\n  // eslint-disable-next-line\n    authData: PropTypes.object.isRequired,\n};\n\n\nexport default BusinessHome;\n","import { connect } from 'react-redux';\nimport BusinessHome from '../../components/business/BusinessHome';\n\nconst mapStateToProps = state => ({\n  authData: state.user.data,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nconst BusinessHomeContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BusinessHome);\n\nexport default BusinessHomeContainer;\n","import React from 'react';\nimport { Link } from 'react-router';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\n\nconst GovernmentHome = (props) => {\n  const { authData } = props;\n  return (\n    <Container>\n      <Row>\n        <h1>Government Profile</h1>\n      </Row>\n      <Row>\n        <Col>\n          <Card bg=\"dark\" text=\"white\">\n            <Card.Header as=\"h3\">Information</Card.Header>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item variant=\"dark\">\n                  Balance:\n                {' '}\n                {authData.balance}\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n        <Col>\n          <Card bg=\"dark\" text=\"white\">\n            <Card.Header as=\"h3\">Actions</Card.Header>\n            <Link to=\"/profile/governmentEconomy\">\n              <Button variant=\"info\" size=\"lg\" block>\n                  Mint & Distribute Cubit\n              </Button>\n            </Link>\n\n            <Link to=\"/profile/governmentFinancial\">\n              <Button variant=\"info\" size=\"lg\" block>\n                  Check businesses VAT Status\n              </Button>\n            </Link>\n\n            <Link to=\"/profile/manageBusiness\">\n              <Button variant=\"info\" size=\"lg\" block>\n                  Manage businesses requests\n              </Button>\n            </Link>\n\n            <Link to=\"/profile/businessList\">\n              <Button variant=\"info\" size=\"lg\" block>\n                  Manage businesses\n              </Button>\n            </Link>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nGovernmentHome.propTypes = {\n  // eslint-disable-next-line\n  authData: PropTypes.object.isRequired,\n};\n\nexport default GovernmentHome;\n","import { connect } from 'react-redux';\nimport GovernmentHome from '../../components/government/GovernmentHome';\n\nconst mapStateToProps = state => ({\n  authData: state.user.data,\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nconst GovernmentHomeContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GovernmentHome);\n\nexport default GovernmentHomeContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CitizenHomeContainer from '../containers/citizen/CitizenHomeContainer';\nimport BusinessHomeContainer from '../containers/business/BusinessHomeContainer';\nimport GovernmentHomeContainer from '../containers/government/GovernmentHomeContainer';\nimport AlertMessage from './public/AlertMessage';\n\nconst CommonHome = (props) => {\n  const {\n    authData,\n  } = props;\n\n  if (authData.data.userType === 1) {\n    return <CitizenHomeContainer />;\n  }\n  if (authData.data.userType === 2) {\n    return <BusinessHomeContainer />;\n  }\n  if (authData.data.userType === 3) {\n    return <GovernmentHomeContainer />;\n  }\n  return (\n    <AlertMessage\n      variant=\"info\"\n      message={'No account associated with your metamask account. You have to'\n    + ' register one in order to get access to Soldino features.'}\n    />\n  );\n};\n\nCommonHome.propTypes = {\n  // eslint-disable-next-line\n  authData: PropTypes.object.isRequired,\n};\n\nexport default CommonHome;\n","import { connect } from 'react-redux';\n\nimport CommonHome from '../components/CommonHome';\n\nexport default connect(state => ({ authData: state.user }))(CommonHome);\n","function onlyIntegerNumbers(value) {\n  const regex = new RegExp('^[0-9]+$');\n  return regex.test(value);\n}\n\nfunction onlyFloatNumbers(value) {\n  const regex = new RegExp('/^[+-]?\\d+(\\.\\d+)?$/');\n  return regex.test(value);\n}\n\nfunction isPositive(value) {\n  const v = parseFloat(value);\n  if (Number.isNaN(v) || v <= 0) {\n    return false;\n  }\n  return true;\n}\n\n// zero accepted\nfunction isPositiveInteger(value) {\n  const v = parseInt(value);\n  if (Number.isNaN(v) || v < 0) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOneHundredCharacterMax(value) {\n  if (value.lenght > 100) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOnlyCharacters(value) {\n  const regex = new RegExp('^[A-Za-z]+$');\n  return regex.test(value);\n}\n\nfunction isValidFiscalCode(value) {\n  const regex = new RegExp('^[A-Z]{6}\\\\d{2}[A-Z]\\\\d{2}[A-Z]\\\\d{3}[A-Z]$');\n  return regex.test(value);\n}\n\nfunction isValidEmail(value) {\n  const regex = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  return regex.test(String(value).toLowerCase());\n}\n\nfunction isValidAddress(value) {\n  const regex = new RegExp(\"^[a-zA-Z0-9\\s,'-]*$\");\n  return regex.test(String(value));\n}\n\nfunction isValidVAT(value) {\n  const regex = new RegExp('^[0-9]{11}');\n  return regex.test(String(value));\n}\n\nexport {\n  onlyIntegerNumbers,\n  onlyFloatNumbers,\n  isPositive,\n  isOneHundredCharacterMax,\n  isOnlyCharacters,\n  isValidFiscalCode,\n  isValidEmail,\n  isValidAddress,\n  isValidVAT,\n  isPositiveInteger,\n};\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst ModalCustom = (props) => {\n  const { title, description, onHide } = props;\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {description.map((item, index) => (\n          <p key={index}>{item}</p>\n        ))}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nModalCustom.propTypes = {\n  title: PropTypes.string.isRequired,\n  // eslint-disable-next-line\n  description: PropTypes.array.isRequired,\n  onHide: PropTypes.func.isRequired,\n};\n\nexport default ModalCustom;\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport PropTypes from \"prop-types\";\nimport {\n  isOnlyCharacters,\n  isPositive,\n  onlyIntegerNumbers,\n  isPositiveInteger,\n} from \"../../util/inputValidation\";\nimport { Link } from \"react-router\";\nimport ModalCustom from \"../public/ModalCustom\";\n\nclass AddProductForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      availability: \"\",\n      VAT: \"\",\n      description: \"\",\n      price: \"\",\n      formValid: false,\n      nameValid: false,\n      availabilityValid: false,\n      VATValid: false,\n      descriptionValid: false,\n      priceValid: false,\n      file: \"\",\n      imagePreview: \"\",\n      imageValid: false,\n      modalShow: false,\n      errors: [],\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n  }\n\n  handleImageChange(e) {\n    e.preventDefault();\n\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreview: reader.result\n      });\n    };\n\n    if (file) {\n      const fileType = file[\"type\"];\n      const validImageTypes = [\"image/jpeg\", \"image/png\", \"image/svg\"];\n      if (validImageTypes.includes(fileType)) {\n        this.setState({\n          imageValid: true\n        });\n        reader.readAsDataURL(file);\n      } else {\n        this.setState({\n          imagePreview: \"\",\n          imageValid: false\n        });\n      }\n    } else {\n      this.setState({\n        file: \"\",\n        imagePreview: \"\",\n        imageValid: false,\n      });\n    }\n  }\n\n  validateForm() {\n    this.setState({\n      formValid:\n        this.state.nameValid &&\n        this.state.VATValid &&\n        this.state.descriptionValid &&\n        this.state.priceValid &&\n        this.state.availabilityValid &&\n        this.state.imageValid\n    });\n  }\n\n  validateField(fieldName, value) {\n    let nameValid = this.state.nameValid;\n    let VATValid = this.state.VATValid;\n    let availabilityValid = this.state.availabilityValid;\n    let descriptionValid = this.state.descriptionValid;\n    let priceValid = this.state.priceValid;\n    let imageValid = this.state.imageValid;\n\n    switch (fieldName) {\n      case \"name\":\n        nameValid = value.length > 2 && isOnlyCharacters(value);\n        break;\n      case \"VAT\":\n        VATValid =\n          value.toString() === \"4\" ||\n          value.toString() === \"10\" ||\n          value.toString() === \"22\";\n        break;\n      case \"availability\":\n        availabilityValid = isPositiveInteger(value);\n        break;\n      case \"description\":\n        descriptionValid = value.length > 1;\n        break;\n      case \"price\":\n        priceValid = isPositive(value);\n        break;\n      case \"image\":\n        imageValid = this.state.imagePreview !== \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        nameValid: nameValid,\n        VATValid: VATValid,\n        descriptionValid: descriptionValid,\n        availabilityValid: availabilityValid,\n        priceValid: priceValid\n      },\n      this.validateForm\n    );\n  }\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const { props, state } = this;\n\n    const {\n      name, availability, VAT, description, price, nameValid, availabilityValid,\n      VATValid, descriptionValid, priceValid, formValid, imageValid, imagePreview\n    } = state;\n\n    this.setState({\n      formValid: nameValid && availabilityValid && VATValid && descriptionValid && priceValid && imageValid\n    });\n\n    if (formValid) {\n      props.addProduct({\n        name,\n        availability,\n        VAT,\n        description,\n        price,\n        imagePreview\n      });\n    } else {\n      let errors = [];\n      if(!nameValid) {\n        errors.push(\"Name must contain at least three characters.\");\n      }\n      if(!availabilityValid) {\n        errors.push(\"Availability must be greater then zero.\");\n      }\n      if(!VATValid) {\n        errors.push(\"VAT must be 4% or 10% or 22%.\");\n      }\n      if(!descriptionValid) {\n        errors.push(\"Description must contain at least two characters.\");\n      }\n      if(!priceValid) {\n        errors.push(\"Price must be greater then zero.\");\n      }\n      if(!imageValid) {\n        errors.push(\"Invalid image file. Accepted file: .png, .jpg, .svg\");\n      }\n      this.setState({modalShow: true, errors: errors});\n    }\n  }\n\n  render() {\n    const {\n      name,\n      availability,\n      VAT,\n      description,\n      price,\n      modalShow,\n      errors\n    } = this.state;\n\n    let { imagePreview } = this.state;\n    let $imagePreview = null;\n    if (imagePreview) {\n      $imagePreview = <img src={imagePreview} />;\n    }\n\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n      <Container>\n        <Link to=\"/profile/productsManagement\">\n          <Button variant=\"dark\" size=\"lg\">\n            Back to products management\n          </Button>\n        </Link>\n        <Row>\n          <h1>Add a product</h1>\n        </Row>\n\n        <Card\n          border=\"dark\"\n          bg=\"light\"\n          className=\"text-center\"\n          style={{ margin: \"auto\", width: \"75%\" }}\n        >\n          <Card.Title as=\"h3\">\n            Compile and submit to register a new product\n          </Card.Title>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group as={Row} controlId=\"name\">\n              <Form.Label column sm=\"3\" className=\"text-right\">\n                Name\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control\n                  type=\"text\"\n                  value={name}\n                  name={\"name\"}\n                  onChange={this.handleUserInput}\n                  placeholder=\"Name\"\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"VAT\">\n              <Form.Label column sm=\"3\" className=\"text-right\">\n                VAT\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control\n                  as=\"select\"\n                  value={VAT}\n                  name={\"VAT\"}\n                  onChange={this.handleUserInput}\n                >\n                  <option>Select VAT category (%)</option>\n                  <option>4</option>\n                  <option>10</option>\n                  <option>22</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"availability\">\n              <Form.Label column sm=\"3\" className=\"text-right\">\n                Availability\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control\n                  type=\"number\"\n                  value={availability}\n                  min={0}\n                  name={\"availability\"}\n                  onChange={this.handleUserInput}\n                  placeholder=\"Availability\"\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"description\">\n              <Form.Label column sm=\"3\" className=\"text-right\">\n                Description\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control\n                  type=\"text\"\n                  value={description}\n                  name={\"description\"}\n                  onChange={this.handleUserInput}\n                  placeholder=\"Description\"\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"price\">\n              <Form.Label column sm=\"3\" className=\"text-right\">\n                Price\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control\n                  value={price}\n                  name={\"price\"}\n                  onChange={this.handleUserInput}\n                  placeholder=\"Price\"\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"image\">\n              <Form.Label column sm=\"3\" className=\"text-right\">\n                Image\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control\n                  type={\"file\"}\n                  name={\"image\"}\n                  onChange={(e) => {this.handleImageChange(e); this.handleUserInput(e)}}\n                  placeholder=\"Price\"\n                />\n              </Col>\n            </Form.Group>\n            {$imagePreview}\n            <br />\n            <Button\n              variant=\"dark\"\n              type=\"submit\"\n              onClick={this.handleSubmit}\n            >\n              Add product\n            </Button>\n          </Form>\n        </Card>\n        <ModalCustom\n            show={modalShow}\n            title={\"Form not valid!\"}\n            description={errors}\n            onHide={modalClose}\n        />\n      </Container>\n    );\n  }\n}\n\nAddProductForm.propTypes = {\n  // eslint-disable-next-line\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default AddProductForm;\n","import { connect } from 'react-redux';\nimport AddProductForm from '../../components/business/AddProductForm';\nimport { addProduct } from '../../actions/business/ProductsManagementActions';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  addProduct: (productInfo) => {\n    dispatch(addProduct(productInfo));\n  },\n});\n\nconst AddProductFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AddProductForm);\n\nexport default AddProductFormContainer;\n","import React from 'react';\nimport { Link } from 'react-router';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { Table } from 'react-bootstrap';\nimport AlertMessage from '../public/AlertMessage';\n\n\nclass OrderDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.printDocument = this.printDocument.bind(this);\n\n    this.state = {\n      pdfName: props.location.state !== undefined ? props.location.state.id : '',\n    };\n  }\n\n  printDocument() {\n    // window.html2canvas = html2canvas;\n    const input = document.getElementById('divToPrint');\n    html2canvas(input)\n      .then((canvas) => {\n        const imgData = canvas.toDataURL('image/png', 1);\n        // eslint-disable-next-line\n                const pdf = new jsPDF();\n        pdf.addImage(imgData, 'JPEG', 0, 0, 210, 0);\n        // pdf.output('dataurlnewwindow');\n        pdf.save(`Invoice Order ID ${this.state.pdfName}.pdf`);\n      });\n  }\n\n  render() {\n    const { location } = this.props;\n\n    if (location.state === undefined) {\n      return (\n        <AlertMessage\n          variant=\"warning\"\n          message={\"You can't access this page directly from the url. You need\"\n      + ' to get access from the orders management page.'}\n        />\n      );\n    }\n    const actor = location.state.orderType === '0' ? 'Seller' : 'Buyer';\n    const allDetails = location.state.products.map((item, index) => (\n      <tr key={item.id}>\n        <td>{location.state.date}</td>\n        <td>{item.name}</td>\n        <td>{location.state.quantities[parseInt(index, 10)]}</td>\n        {actor === 'Seller' ? <td>{location.state.seller}</td> : <td>{location.state.buyer}</td>}\n        <td>\n          {`${item.price} CUB`}\n        </td>\n      </tr>\n    ));\n\n    return (\n      <Container>\n        <h1>Order details</h1>\n        <br />\n        <div id=\"divToPrint\">\n          <Table striped bordered hover>\n            <thead>\n              <tr key=\"0\">\n                <th>Date</th>\n                <th>Product name</th>\n                <th>Quantity</th>\n                {<th>{actor}</th>}\n                <th>Unit price</th>\n              </tr>\n            </thead>\n            <tbody>{allDetails}</tbody>\n          </Table>\n          <p style={{ textAlign: 'right', marginRight: '2%' }}>\n            <b>Total: </b>\n            {' '}\n            {location.state.total}\n            {' '}\n            CUB\n          </p>\n        </div>\n\n\n        <div style={{ textAlign: 'center', padding: '0.5em' }}>\n          <Button\n            type=\"button\"\n            variant=\"dark\"\n            size=\"lg\"\n            onClick={this.printDocument}\n            style={{ marginRight: '2%' }}\n          >\n                        Download Receipt\n          </Button>\n          <Link to=\"/profile/ordersManagement\">\n            <Button variant=\"dark\" size=\"lg\">\n                            Back to all orders\n            </Button>\n          </Link>\n        </div>\n      </Container>\n    );\n  }\n}\n\nOrderDetails.propTypes = {\n  // eslint-disable-next-line\n    location: PropTypes.object.isRequired,\n};\n\nexport default OrderDetails;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport {\n  isOnlyCharacters,\n  isPositive,\n  isPositiveInteger\n} from '../../util/inputValidation';\nimport AlertMessage from \"../public/AlertMessage\";\nimport ModalCustom from \"../public/ModalCustom\";\n\nclass ModifyProductForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const { location } = props;\n\n    this.state = {\n      name: location.state !== undefined ? location.state.name : null,\n      availability: location.state !== undefined ? location.state.availability : null,\n      VAT: location.state !== undefined ? location.state.VAT : null,\n      description: location.state !== undefined ? location.state.description : null,\n      price: location.state !== undefined ? location.state.price : null,\n      formValid: true,\n      nameValid: true,\n      availabilityValid: true,\n      VATValid: true,\n      descriptionValid: true,\n      priceValid: true,\n      modalShow: false,\n      errors: [],\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid:\n        this.state.nameValid\n        && this.state.VATValid\n        && this.state.descriptionValid\n        && this.state.priceValid\n        && this.state.availabilityValid,\n    });\n  }\n\n  validateField(fieldName, value) {\n    let nameValid = this.state.nameValid;\n    let VATValid = this.state.VATValid;\n    let availabilityValid = this.state.availabilityValid;\n    let descriptionValid = this.state.descriptionValid;\n    let priceValid = this.state.priceValid;\n\n    switch (fieldName) {\n      case 'name':\n        nameValid = value.length > 2 && isOnlyCharacters(value);\n        break;\n      case 'VAT':\n        VATValid = value.toString() === '4'\n          || value.toString() === '10'\n          || value.toString() === '22';\n        break;\n      case 'availability':\n        availabilityValid = isPositiveInteger(value);\n        break;\n      case 'description':\n        descriptionValid = value.length > 1;\n        break;\n      case 'price':\n        priceValid = isPositive(value);\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        nameValid,\n        VATValid,\n        descriptionValid,\n        availabilityValid,\n        priceValid,\n      },\n      this.validateForm,\n    );\n  }\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const { props, state } = this;\n\n    const {\n      name, availability, VAT, description, price, nameValid, availabilityValid,\n      VATValid, descriptionValid, priceValid, formValid\n    } = state;\n\n    this.setState({\n      formValid: nameValid && availabilityValid && VATValid && descriptionValid && priceValid,\n    });\n\n    if (formValid) {\n      const productModified = {\n        id: props.location.state.id,\n        name,\n        availability,\n        VAT,\n        description,\n        price,\n      };\n      props.modifyProduct(productModified);\n    } else {\n      let errors = [];\n      if(!nameValid) {\n        errors.push(\"Name must contain at least three characters.\");\n      }\n      if(!availabilityValid) {\n        errors.push(\"Availability must be greater then zero.\");\n      }\n      if(!VATValid) {\n        errors.push(\"VAT must be 4% or 10% or 22%.\");\n      }\n      if(!descriptionValid) {\n        errors.push(\"Description must contain at least two characters.\");\n      }\n      if(!priceValid) {\n        errors.push(\"Price must be a number and greater then zero.\");\n      }\n      this.setState({modalShow: true, errors: errors});\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    if (location.state === undefined) {\n      return (\n          <AlertMessage\n              variant=\"warning\"\n              message={\"You can't access this page directly from the url. You need\"\n              + ' to get access from the products management page.'}\n          />\n      );\n    }\n\n    const {\n      name, availability, VAT, description, price, modalShow, errors\n    } = this.state;\n\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n      <Container>\n        <Link to=\"/profile/productsManagement\">\n          <Button variant=\"dark\" size=\"lg\">\n            Back to products management\n          </Button>\n        </Link>\n        <Row><h1>Modify a product</h1></Row>\n\n        <Card border=\"dark\" bg=\"light\" className=\"text-center\" style={{ margin: 'auto', width: '75%' }}>\n          <Card.Title as=\"h3\">Compile and submit to modify a product</Card.Title>\n          <Form onSubmit={this.handleSubmit}>\n\n            <Form.Group as={Row} controlId=\"name\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Name</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" value={name} name=\"name\" onChange={this.handleUserInput} placeholder=\"Name\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"VAT\">\n              <Form.Label column sm=\"3\" className=\"text-right\">\n                VAT\n              </Form.Label>\n              <Col sm=\"8\">\n                <Form.Control\n                    as=\"select\"\n                    value={VAT}\n                    name={\"VAT\"}\n                    onChange={this.handleUserInput}\n                >\n                  <option>Select VAT category (%)</option>\n                  <option>4</option>\n                  <option>10</option>\n                  <option>22</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"availability\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Availability</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"number\" min={0} value={availability} name=\"availability\" onChange={this.handleUserInput} placeholder=\"Availability\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"description\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Description</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" value={description} name=\"description\" onChange={this.handleUserInput} placeholder=\"Description\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"price\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Price</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control value={price} name=\"price\" onChange={this.handleUserInput} placeholder=\"Price\" />\n              </Col>\n            </Form.Group>\n\n            <Button variant=\"dark\" type=\"submit\" onClick={this.handleSubmit}>\n                            Modify product\n            </Button>\n          </Form>\n        </Card>\n        <ModalCustom\n            show={modalShow}\n            title={\"Form not valid!\"}\n            description={errors}\n            onHide={modalClose}\n        />\n      </Container>\n    );\n  }\n}\n\nModifyProductForm.propTypes = {\n  // eslint-disable-next-line\n    location: PropTypes.object.isRequired,\n  // eslint-disable-next-line\n    modifyProduct: PropTypes.func.isRequired\n};\n\nexport default ModifyProductForm;\n","import { connect } from 'react-redux';\nimport ModifyProductForm from '../../components/business/ModifyProductForm';\nimport { modifyProduct } from '../../actions/business/ProductsManagementActions';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  modifyProduct: (productInfo) => {\n    dispatch(modifyProduct(productInfo));\n  },\n});\n\nconst ModifyProductFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ModifyProductForm);\n\nexport default ModifyProductFormContainer;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Button, Table } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Link } from 'react-router';\n\nclass VATTransactionLedger extends React.Component {\n  componentDidMount() {\n    const { getVATHistory, getOrdersHistory } = this.props;\n    getVATHistory();\n    getOrdersHistory();\n  }\n\n  render() {\n    const { VATHistory, OrdersHistory } = this.props;\n\n    let allTransactions = null;\n\n    if (VATHistory !== null && VATHistory !== undefined && VATHistory.length !== 0\n    && OrdersHistory !== null && OrdersHistory !== undefined) {\n      allTransactions = VATHistory\n        .filter(item => (\n          item.status.status === 'Payed'\n          || item.status.status === 'Received'\n          || item.status.status === 'Refused'\n        ))\n        .map(item => (\n          <tr key={item.status.transaction.id}>\n            <td>{item.status.transaction.id}</td>\n            <td>{item.status.status}</td>\n            <td>{moment.unix(item.status.transaction.date).toDate().toDateString()}</td>\n            <td>{item.quarter}</td>\n            <td>{item.year}</td>\n            <td>{item.status.transaction.amount}</td>\n            <td>\n              <Link to={{\n                pathname: `/VATTransactionLedger/VATLedger/${item.status.transaction.id}`,\n                state: {\n                  sell: OrdersHistory.sell === null\n                  || OrdersHistory.sell === undefined\n                  || OrdersHistory.sell.length === 0 ? []\n                    : OrdersHistory.sell.filter((transaction) => {\n                      const date = moment(transaction.date);\n                      return date.isAfter(moment(0).set({ year: item.year, quarter: item.quarter }))\n                      && date.isBefore(moment(0).set({ year: item.year, quarter: item.quarter }).add(1, 'Q'));\n                    }),\n                  purchase: OrdersHistory.purchase === null\n                  || OrdersHistory.purchase === undefined\n                  || OrdersHistory.purchase.length === 0 ? []\n                    : OrdersHistory.purchase.filter((transaction) => {\n                      const date = moment(transaction.date);\n                      return date.isAfter(moment(0).set({ year: item.year, quarter: item.quarter }))\n                      && date.isBefore(moment(0).set({ year: item.year, quarter: item.quarter }).add(1, 'Q'));\n                    }),\n                  quarter: item.quarter,\n                  year: item.year,\n                },\n              }}\n              >\n                <Button variant=\"info\" type=\"button\">\n                  DETAILS\n                </Button>\n              </Link>\n            </td>\n          </tr>\n        ));\n    }\n    return (\n      <Container>\n        <Link to=\"/profile/VATManagement\">\n          <Button variant=\"dark\" size=\"lg\">\n                  Back to VAT Management\n          </Button>\n        </Link>\n        <Row>\n          <Col>\n            <h2> VAT Transactions history </h2>\n            <Table>\n              <thead>\n                <tr key=\"0\">\n                  <th>Id</th>\n                  <th>Type</th>\n                  <th>Date</th>\n                  <th>Quarter</th>\n                  <th>Year</th>\n                  <th>Amount</th>\n                  <th>Details</th>\n                </tr>\n              </thead>\n              <tbody>\n                {allTransactions}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nVATTransactionLedger.propTypes = {\n  // eslint-disable-next-line\n  VATHistory: PropTypes.array,\n  getVATHistory: PropTypes.func.isRequired,\n  // eslint-disable-next-line\n  OrdersHistory: PropTypes.object,\n  getOrdersHistory: PropTypes.func.isRequired,\n};\n\nexport default VATTransactionLedger;\n","import { connect } from 'react-redux';\nimport VATTransactionLedger from '../../components/business/VATTransactionLedger';\nimport { getVATHistory } from '../../actions/business/VATManagementActions';\nimport { getOrdersHistory } from '../../actions/public/OrdersHistoryActions';\n\nfunction mapStateToProps(state) {\n  return {\n    VATHistory: state.business.VATHistory,\n    OrdersHistory: state.orders,\n  };\n}\nconst mapDispatchToProps = dispatch => ({\n\n  getVATHistory: () => {\n    dispatch(getVATHistory());\n  },\n  getOrdersHistory: () => {\n    dispatch(getOrdersHistory());\n  },\n});\n\nconst VATTransactionLedgerContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(VATTransactionLedger);\n\nexport default VATTransactionLedgerContainer;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport PropTypes from 'prop-types';\nimport Table from 'react-bootstrap/Table';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport AlertMessage from '../public/AlertMessage';\n\nclass VATLedger extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.printDocument = this.printDocument.bind(this);\n\n    this.state = {\n      pdfName: props.location.state !== undefined ? `${props.location.state.year} ${props.location.state.quarter}` : '',\n    };\n  }\n\n  printDocument() {\n    // window.html2canvas = html2canvas;\n    const input = document.getElementById('divToPrint');\n\n    html2canvas(input)\n      .then((canvas) => {\n        const imgData = canvas.toDataURL('image/png', 1);\n        // eslint-disable-next-line\n          const pdf = new jsPDF();\n        pdf.addImage(imgData, 'JPEG', 0, 0, 210, 0);\n        // pdf.output('dataurlnewwindow');\n        pdf.save(`VAT Assessment ${this.state.pdfName}.pdf`);\n      });\n  }\n\n  render() {\n    let allCompensations;\n    let allDeductions;\n\n    const { location } = this.props;\n\n    console.log(location);\n\n    if (location.state === undefined) {\n      return (\n        <AlertMessage\n          variant=\"warning\"\n          message={\"You can't access this page directly from the url. You need\"\n              + ' to get access from the VAT Transaction ledger page.'}\n        />\n      );\n    }\n\n    const { sell, purchase } = location.state;\n\n    let totalCompensations = 0;\n    let totalDeductions = 0;\n\n    if (purchase !== null\n      && purchase !== undefined\n      && purchase.length !== 0) {\n      allCompensations = purchase.map((item) => {\n        totalCompensations = parseFloat(parseFloat(totalCompensations + item.totalVat).toFixed(2));\n        return (\n          <tr key={item.id}>\n            <td>{item.id}</td>\n            <td><h3 style={{ color: 'green' }}>{item.totalVat}</h3></td>\n          </tr>\n        );\n      });\n    }\n\n    if (sell !== null\n      && sell !== undefined\n      && sell.length !== 0) {\n      allDeductions = sell.map((item) => {\n        totalDeductions = parseFloat(parseFloat(totalDeductions + item.totalVat).toFixed(2));\n        return (\n          <tr key={item.id}>\n            <td>{item.id}</td>\n            <td><h3 style={{ color: 'red' }}>{item.totalVat}</h3></td>\n          </tr>\n        );\n      });\n    }\n\n    return (\n      <Container>\n        <Link to=\"/profile/VATManagement\">\n          <Button variant=\"dark\" size=\"lg\">\n            Back to VAT Management\n          </Button>\n        </Link>\n        <div id=\"divToPrint\" style={{ marginTop: '2%' }}>\n          <Row>\n            <Col>\n              <h2> Current quarter  VAT compensation </h2>\n              <Table>\n                <thead>\n                  <tr key=\"0\">\n                    <th>Id</th>\n                    <th>VAT Portion</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {allCompensations}\n                  <tr>\n                    <td>\n                      <b>\n                  TOTAL COMPENSATIONS:\n                      </b>\n                    </td>\n                    <td>\n                      <h3 style={{ color: 'green' }}>{ totalCompensations }</h3>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col>\n              <h2> Current quarter  VAT deductions </h2>\n              <Table>\n                <thead>\n                  <tr key=\"0\">\n                    <th>Id</th>\n                    <th>VAT Portion</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {allDeductions}\n                  <tr>\n                    <td>\n                      <b>\n                  TOTAL DEDUCTIONS:\n                      </b>\n                    </td>\n                    <td>\n                      <h3 style={{ color: 'red' }}>{ totalDeductions }</h3>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </div>\n        <div style={{ textAlign: 'center', padding: '0.5em' }}>\n          <Button\n            type=\"button\"\n            variant=\"dark\"\n            size=\"lg\"\n            onClick={this.printDocument}\n            style={{ marginRight: '2%' }}\n          >\n            Download VAT assessment\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\n\nVATLedger.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types,react/require-default-props\n  location: PropTypes.object,\n};\n\n\nexport default VATLedger;\n","import { connect } from 'react-redux';\nimport VATLedger from '../../components/business/VATLedger';\nimport { getOrdersHistory } from '../../actions/public/OrdersHistoryActions';\n\nfunction mapStateToProps(state) {\n  return {\n    OrdersHistory: state.orders,\n  };\n}\nconst mapDispatchToProps = dispatch => ({\n\n  getOrdersHistory: () => {\n    dispatch(getOrdersHistory());\n  },\n});\n\nconst VATLedgerContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(VATLedger);\n\nexport default VATLedgerContainer;\n","import React from 'react';\nimport { Route, IndexRoute } from 'react-router';\nimport { UserIsBusinessOwner, UserIsAuthenticated } from '../util/wrappers';\n\nimport OrdersManagementContainer from '../containers/business/OrdersManagementContainer';\nimport ProductsManagementContainer from '../containers/business/ProductsManagementContainer';\nimport VATManagementContainer from '../containers/business/VATManagementContainer';\nimport CommonHomeContainer from '../containers/CommonHomeContainer';\nimport AddProductFormContainer from '../containers/business/AddProductFormContainer';\nimport OrderDetails from '../components/business/OrderDetails';\nimport ModifyProductFormContainer from '../containers/business/ModifyProductFormContainer';\nimport VATTransactionLedgerContainer from '../containers/business/VATTransactionLedgerContainer';\nimport VATLedgerContainer from '../containers/business/VATLedgerContainer';\nimport VATLedger from '../components/business/VATLedger';\n\nconst businessRoutes = (\n  <Route path=\"profile\">\n    <IndexRoute component={UserIsAuthenticated(CommonHomeContainer)} />\n    <Route\n      path=\"ordersManagement\"\n      component={UserIsBusinessOwner(OrdersManagementContainer)}\n    />\n    <Route\n      path=\"productsManagement\"\n      component={UserIsBusinessOwner(ProductsManagementContainer)}\n    />\n    <Route\n      path=\"vatManagement\"\n      component={UserIsBusinessOwner(VATManagementContainer)}\n    />\n    <Route\n      path=\"AddProducts\"\n      component={UserIsBusinessOwner(AddProductFormContainer)}\n    />\n    <Route\n      path=\"VATLedger\"\n      component={UserIsBusinessOwner(VATLedgerContainer)}\n    />\n    <Route\n      path=\"VATTransactionLedger\"\n      component={UserIsBusinessOwner(VATTransactionLedgerContainer)}\n    />\n    <Route\n      path=\"/VATTransactionLedger/VATLedger/:id\"\n      component={UserIsBusinessOwner(VATLedger)}\n    />\n    <Route\n      path=\"/ordersManagement/orderDetails/:id\"\n      component={UserIsBusinessOwner(OrderDetails)}\n    />\n    <Route\n      path=\"/productsManagement/ModifyProduct/:id\"\n      component={UserIsBusinessOwner(ModifyProductFormContainer)}\n    />\n  </Route>\n);\n\nexport default businessRoutes;\n","import React from 'react';\nimport { Table, Container, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport AlertMessage from '../public/AlertMessage';\nimport LoadingSpinner from '../public/LoadingSpinner';\n\nclass OrdersHistory extends React.Component {\n  componentDidMount() {\n    const { getOrdersHistory } = this.props;\n    getOrdersHistory();\n  }\n\n  render() {\n    let allOrders = null;\n    const { ordersHistoryData, isLoading } = this.props;\n    if (ordersHistoryData !== null) {\n      if (ordersHistoryData.length !== 0) {\n        allOrders = ordersHistoryData.map(item => (\n          <tr key={item.id}>\n            <td>{item.id}</td>\n            <td>{item.date}</td>\n            <td>{`${item.total} CUB`}</td>\n            <td>\n              <Link\n                to={{\n                  pathname: `/ordersHistory/orderDetails/${item.id}`,\n                  state: {\n                    id: item.id,\n                    date: item.date,\n                    total: item.total,\n                    products: item.products,\n                    quantities: item.productQuantities,\n                    seller: item.seller,\n                  },\n                }}\n              >\n                <Button type=\"button\">Details</Button>\n              </Link>\n            </td>\n          </tr>\n        ));\n      }\n    }\n\n    let allOrdersToPrint = null;\n\n    if (allOrders !== null) {\n      allOrdersToPrint = (\n        <Table striped bordered hover>\n          <thead>\n            <tr key=\"0\">\n              <th>Order Id</th>\n              <th>Date</th>\n              <th>Total</th>\n              <th>Details</th>\n            </tr>\n          </thead>\n          <tbody>{allOrders}</tbody>\n        </Table>\n      );\n    } else {\n      allOrdersToPrint = <AlertMessage variant=\"info\" message=\"No orders.\" />;\n    }\n\n    return (\n      <Container>\n        <h2>Orders History</h2>\n        <br />\n        {isLoading ? <LoadingSpinner /> : allOrdersToPrint}\n      </Container>\n    );\n  }\n}\n\nOrdersHistory.propTypes = {\n  isLoading: PropTypes.bool,\n  // eslint-disable-next-line\n  ordersHistoryData: PropTypes.array,\n  getOrdersHistory: PropTypes.func.isRequired,\n};\n\nOrdersHistory.defaultProps = {\n  isLoading: false,\n};\n\nexport default OrdersHistory;\n","import { connect } from 'react-redux';\nimport OrdersHistory from '../../components/citizen/OrdersHistory';\nimport { getOrdersHistory } from '../../actions/public/OrdersHistoryActions';\n\nfunction mapStateToProps(state) {\n  return {\n    ordersHistoryData: state.orders.purchase,\n    isLoading: state.fetchData.isLoading,\n  };\n}\nconst mapDispatchToProps = dispatch => ({\n  getOrdersHistory: () => {\n    dispatch(getOrdersHistory());\n  },\n});\n\nconst OrdersHistoryContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(OrdersHistory);\n\nexport default OrdersHistoryContainer;\n","import React from 'react';\nimport { Link } from 'react-router';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { Table } from 'react-bootstrap';\nimport AlertMessage from '../public/AlertMessage';\n\nclass OrderDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.printDocument = this.printDocument.bind(this);\n\n    this.state = {\n      pdfName: props.location.state !== undefined ? props.location.state.id : '',\n    };\n  }\n\n  printDocument() {\n    // window.html2canvas = html2canvas;\n    const input = document.getElementById('divToPrint');\n    html2canvas(input).then((canvas) => {\n      const imgData = canvas.toDataURL('image/png', 1);\n      // eslint-disable-next-line\n      const pdf = new jsPDF();\n      pdf.addImage(imgData, 'JPEG', 0, 0, 210, 0);\n      // pdf.output('dataurlnewwindow');\n      pdf.save(`Invoice Order ID ${this.state.pdfName}.pdf`);\n    });\n  }\n\n  render() {\n    const { location } = this.props;\n\n    if (location.state === undefined) {\n      return (\n        <AlertMessage\n          variant=\"warning\"\n          message={\n            \"You can't access this page directly from the url. You need\"\n            + ' to get access from the orders history page.'\n          }\n        />\n      );\n    }\n\n    const allDetails = location.state.products.map((item, index) => (\n      <tr key={item.id}>\n        <td>{location.state.date}</td>\n        <td>{item.name}</td>\n        <td>{location.state.quantities[parseInt(index, 10)]}</td>\n        <td>{location.state.seller}</td>\n        <td>{`${item.price} CUB`}</td>\n      </tr>\n    ));\n\n    return (\n      <Container>\n        <h1>Order details</h1>\n        <br />\n        <div id=\"divToPrint\">\n          <Table striped bordered hover>\n            <thead>\n              <tr key=\"0\">\n                <th>Date</th>\n                <th>Product name</th>\n                <th>Quantity</th>\n                <th>Seller</th>\n                <th>Unit price</th>\n              </tr>\n            </thead>\n            <tbody>{allDetails}</tbody>\n          </Table>\n          <p style={{ textAlign: 'right', marginRight: '2%' }}>\n            <b>Total: </b>\n            {' '}\n            {location.state.total}\n            {' '}\nCUB\n          </p>\n        </div>\n\n        <div style={{ textAlign: 'center', padding: '0.5em' }}>\n          <Button\n            type=\"button\"\n            variant=\"dark\"\n            size=\"lg\"\n            onClick={this.printDocument}\n            style={{ marginRight: '2%' }}\n          >\n            Download Receipt\n          </Button>\n          <Link to=\"/profile/ordersHistory\">\n            <Button variant=\"dark\" size=\"lg\">\n              Back to all orders\n            </Button>\n          </Link>\n        </div>\n      </Container>\n    );\n  }\n}\n\nOrderDetails.propTypes = {\n  // eslint-disable-next-line\n  location: PropTypes.object.isRequired\n};\n\nexport default OrderDetails;\n","import React from 'react';\nimport { Route, IndexRoute } from 'react-router';\n\nimport { UserIsCitizen, UserIsAuthenticated } from '../util/wrappers';\nimport OrdersHistoryContainer from '../containers/citizen/OrdersHistoryContainer';\nimport CommonHomeContainer from '../containers/CommonHomeContainer';\nimport OrderDetails from '../components/citizen/OrderDetails';\n\nconst citizenRoutes = (\n  <Route path=\"profile\">\n    <IndexRoute component={UserIsAuthenticated(CommonHomeContainer)} />\n    <Route path=\"ordersHistory\" component={UserIsCitizen(OrdersHistoryContainer)} />\n    <Route path=\"/ordersHistory/orderDetails/:id\" component={UserIsCitizen(OrderDetails)} />\n  </Route>\n);\n\nexport default citizenRoutes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Table, Container } from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport AlertMessage from '../public/AlertMessage';\nimport LoadingSpinner from '../public/LoadingSpinner';\n\nclass GovernmentFinancial extends React.Component {\n  componentDidMount() {\n    const { getBusinessInfo } = this.props;\n    getBusinessInfo();\n  }\n\n  render() {\n    const { businessInfo, isLoading } = this.props;\n    let allBusinessesInfo = null;\n    let businessDataToPrint = null;\n\n    if (businessInfo) {\n      if (businessInfo.length !== 0) {\n        allBusinessesInfo = businessInfo.map((item, id) => (\n          <tr key={id}>\n            <td>{item.businessName}</td>\n            <td>{item.location}</td>\n            <td>{item.CE}</td>\n            <td>{item.VATNumber}</td>\n            <td>\n              <Link to={{\n                pathname: `/governmentFinancial/VATDetails/${item.address}`,\n                state: item.address,\n              }}\n              >\n                <Button type=\"button\">VAT details</Button>\n              </Link>\n            </td>\n          </tr>\n        ));\n      }\n\n      if (allBusinessesInfo !== null) {\n        businessDataToPrint = (\n          <Container>\n            <Table striped bordered hover>\n              <thead>\n                <tr key=\"0\">\n                  <th>Business name</th>\n                  <th>Location</th>\n                  <th>PEC</th>\n                  <th>VAT number</th>\n                  <th>VAT details</th>\n                </tr>\n              </thead>\n              <tbody>\n                {allBusinessesInfo}\n              </tbody>\n            </Table>\n          </Container>\n        );\n      } else {\n        businessDataToPrint = <AlertMessage variant=\"info\" message=\"No business.\" />;\n      }\n    }\n\n    return (\n      <Container>\n        <Link to=\"/profile\">\n          <Button variant=\"dark\" size=\"lg\">\n              Back to all actions\n          </Button>\n        </Link>\n        <h2 className=\"ManageBusinessTitle\">Check business VAT status</h2>\n        <br />\n        {isLoading ? <LoadingSpinner /> : businessDataToPrint }\n      </Container>\n    );\n  }\n}\n\nGovernmentFinancial.propTypes = {\n  isLoading: PropTypes.bool,\n  // eslint-disable-next-line\n  businessInfo: PropTypes.array,\n  // eslint-disable-next-line\n  getBusinessInfo: PropTypes.func.isRequired,\n};\n\nGovernmentFinancial.defaultProps = {\n  isLoading: false,\n};\n\nexport default GovernmentFinancial;\n","import SoldinoAPI from '../../util/API/SoldinoAPI';\nimport { startFetchData, stopFetchData } from '../public/FetchDataActions';\n\nexport const GET_BUSINESS_INFO = 'GET_BUSINESS_INFO';\nexport const ACCEPT_BUSINESS = 'ACCEPT_BUSINESS';\nexport const REJECT_BUSINESS = 'REJECT_BUSINESS';\nexport const REMOVE_BUSINESS = 'REMOVE_BUSINESS';\n\nfunction setBusinessInfo(info) {\n  return {\n    type: GET_BUSINESS_INFO,\n    payload: info,\n  };\n}\n\nfunction acceptedBusiness() {\n  return {\n    type: ACCEPT_BUSINESS,\n  };\n}\n\nfunction removedBusiness() {\n  return {\n    type: REMOVE_BUSINESS,\n  };\n}\n\nexport const getBusinessInfo = confirmed => function (dispatch) {\n  dispatch(startFetchData());\n  SoldinoAPI.users.getAllBusinessData()\n    .then((result) => {\n      dispatch(setBusinessInfo(result\n        .filter(business => (confirmed ? business.confirmed !== '0' : business.confirmed === '0'))));\n      dispatch(stopFetchData());\n    });\n};\n\nexport function acceptBusiness(address) {\n  return function (dispatch) {\n    SoldinoAPI.users.confirmBusinessOwner(address).then(() => {\n      dispatch(acceptedBusiness());\n      dispatch(getBusinessInfo(false));\n    });\n  };\n}\n\nexport function removeBusiness(address) {\n  return function (dispatch) {\n    SoldinoAPI.users.removeBusinessOwner(address).then(() => {\n      dispatch(removedBusiness());\n      dispatch(getBusinessInfo(true));\n    });\n  };\n}\n\nexport function rejectBusiness(address) {\n  return function (dispatch) {\n    SoldinoAPI.users.removeBusinessOwner(address).then(() => {\n      dispatch(removedBusiness());\n      dispatch(getBusinessInfo(false));\n    });\n  };\n}\n","import { connect } from 'react-redux';\nimport GovernmentFinancial from '../../components/government/GovernmentFinancial';\nimport {\n  getBusinessInfo,\n} from '../../actions/government/BusinessRequestActions';\n\nconst mapStateToProps = state => ({\n  businessInfo: state.government.businessInfo,\n  isLoading: state.fetchData.isLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getBusinessInfo: () => {\n    dispatch(getBusinessInfo(true));\n  },\n});\n\nconst GovernmentFinancialContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GovernmentFinancial);\n\nexport default GovernmentFinancialContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Table, Container } from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport LoadingSpinner from '../public/LoadingSpinner';\nimport AlertMessage from '../public/AlertMessage';\n\nclass ManageBusiness extends React.Component {\n  componentDidMount() {\n    const { getBusinessInfo } = this.props;\n    getBusinessInfo();\n  }\n\n  render() {\n    const { businessInfo, isLoading, acceptBusiness, rejectBusiness } = this.props;\n    let allBusinessesInfo = null;\n    let businessDataToPrint = null;\n\n    if (businessInfo) {\n      if (businessInfo.length !== 0) {\n        allBusinessesInfo = businessInfo.map((item, id) => (\n          <tr key={id}>\n            <td>{item.businessName}</td>\n            <td>{item.location}</td>\n            <td>{item.CE}</td>\n            <td>{item.VATNumber}</td>\n            <td>\n              <Button type=\"button\" variant=\"primary\" onClick={() => acceptBusiness(item.address)}>Accept</Button>\n            </td>\n            <td>\n              <Button type=\"button\" variant=\"danger\" onClick={() => rejectBusiness(item.address)}>Reject</Button>\n            </td>\n          </tr>\n        ));\n      }\n\n      if (allBusinessesInfo !== null) {\n        businessDataToPrint = (\n          <Container>\n            <Table striped bordered hover>\n              <thead>\n                <tr key=\"0\">\n                  <th>Business name</th>\n                  <th>Location</th>\n                  <th>PEC</th>\n                  <th>VAT number</th>\n                  <th>Accept</th>\n                  <th>Reject</th>\n                </tr>\n              </thead>\n              <tbody>\n                {allBusinessesInfo}\n              </tbody>\n            </Table>\n          </Container>\n        );\n      } else {\n        businessDataToPrint = <AlertMessage variant=\"info\" message=\"No business requests for use Soldino.\" />;\n      }\n    }\n\n    return (\n      <Container>\n        <Link to=\"/profile\">\n          <Button variant=\"dark\" size=\"lg\">\n              Back to all actions\n          </Button>\n        </Link>\n        <h2 className=\"ManageBusinessTitle\">Businesses requests</h2>\n        <br />\n        {isLoading ? <LoadingSpinner /> : businessDataToPrint }\n      </Container>\n    );\n  }\n}\n\nManageBusiness.propTypes = {\n  isLoading: PropTypes.bool,\n  // eslint-disable-next-line\n    businessInfo: PropTypes.array,\n  // eslint-disable-next-line\n    getBusinessInfo: PropTypes.func.isRequired,\n  acceptBusiness: PropTypes.func.isRequired,\n  rejectBusiness: PropTypes.func.isRequired,\n};\n\nManageBusiness.defaultProps = {\n  isLoading: false,\n};\n\nexport default ManageBusiness;\n","import { connect } from 'react-redux';\nimport {\n  acceptBusiness,\n  getBusinessInfo, rejectBusiness,\n} from '../../actions/government/BusinessRequestActions';\nimport ManageBusiness from '../../components/government/ManageBusiness';\n\nconst mapStateToProps = state => ({\n  businessInfo: state.government.businessInfo,\n  isLoading: state.fetchData.isLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getBusinessInfo: () => {\n    dispatch(getBusinessInfo(false));\n  },\n  acceptBusiness: (address) => {\n    dispatch(acceptBusiness(address));\n  },\n  rejectBusiness: (address) => {\n    dispatch(rejectBusiness(address));\n  },\n});\n\nconst ManageBusinessContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ManageBusiness);\n\nexport default ManageBusinessContainer;\n","import React from 'react';\nimport { Button, Container, Table } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport LoadingSpinner from '../public/LoadingSpinner';\nimport AlertMessage from '../public/AlertMessage';\n\nclass BusinessList extends React.Component {\n  componentDidMount() {\n    const { getBusinessInfo } = this.props;\n    getBusinessInfo();\n  }\n\n  render() {\n    const { businessInfo, isLoading, removeBusiness } = this.props;\n    let allBusinessesInfo = null;\n    let businessDataToPrint = null;\n\n    if (businessInfo) {\n      if (businessInfo.length !== 0) {\n        allBusinessesInfo = businessInfo.map((item, id) => (\n          <tr key={id}>\n            <td>{item.businessName}</td>\n            <td>{item.location}</td>\n            <td>{item.CE}</td>\n            <td>{item.VATNumber}</td>\n            <td>\n              <Button type=\"button\" variant=\"danger\" onClick={() => removeBusiness(item.address)}>Remove</Button>\n            </td>\n          </tr>\n        ));\n      }\n\n      if (allBusinessesInfo !== null) {\n        businessDataToPrint = (\n          <Container>\n            <Table striped bordered hover>\n              <thead>\n                <tr key=\"0\">\n                  <th>Business name</th>\n                  <th>Location</th>\n                  <th>PEC</th>\n                  <th>VAT number</th>\n                  <th>Remove</th>\n                </tr>\n              </thead>\n              <tbody>\n                {allBusinessesInfo}\n              </tbody>\n            </Table>\n          </Container>\n        );\n      } else {\n        businessDataToPrint = <AlertMessage variant=\"info\" message=\"No business.\" />;\n      }\n    }\n\n    return (\n      <Container>\n        <Link to=\"/profile\">\n          <Button variant=\"dark\" size=\"lg\">\n              Back to all actions\n          </Button>\n        </Link>\n        <h2 className=\"ManageBusinessTitle\">Remove businesses</h2>\n        <br />\n        {isLoading ? <LoadingSpinner /> : businessDataToPrint }\n      </Container>\n    );\n  }\n}\n\nBusinessList.propTypes = {\n  isLoading: PropTypes.bool,\n  // eslint-disable-next-line\n    businessInfo: PropTypes.array,\n  // eslint-disable-next-line\n    getBusinessInfo: PropTypes.func.isRequired,\n  removeBusiness: PropTypes.func.isRequired,\n};\n\nBusinessList.defaultProps = {\n  isLoading: false,\n};\n\nexport default BusinessList;\n","import { connect } from 'react-redux';\nimport {\n  getBusinessInfo, removeBusiness,\n} from '../../actions/government/BusinessRequestActions';\nimport BusinessList from '../../components/government/BusinessList';\n\nconst mapStateToProps = state => ({\n  businessInfo: state.government.businessInfo,\n  isLoading: state.fetchData.isLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getBusinessInfo: () => {\n    dispatch(getBusinessInfo(true));\n  },\n  removeBusiness: (address) => {\n    dispatch(removeBusiness(address));\n  },\n});\n\nconst BusinessListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BusinessList);\n\nexport default BusinessListContainer;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport PropTypes from 'prop-types';\nimport { isPositive } from '../../util/inputValidation';\nimport LoadingSpinner from '../public/LoadingSpinner';\nimport AlertMessage from '../public/AlertMessage';\nimport ModalCustom from '../public/ModalCustom';\n\nclass EconomyForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amountMint: 0,\n      amountDist: 0,\n      checkedAll: false,\n      checkedItems: new Map(),\n      modalShow: false,\n      errors: [],\n    };\n\n    this.handleSubmitMint = this.handleSubmitMint.bind(this);\n    this.handleSubmitDistribute = this.handleSubmitDistribute.bind(this);\n    this.onMintChange = this.onMintChange.bind(this);\n    this.onDistributeChange = this.onDistributeChange.bind(this);\n    this.handleCheckChange = this.handleCheckChange.bind(this);\n    this.handleCheckAll = this.handleCheckAll.bind(this);\n  }\n\n  componentDidMount() {\n    const { getUsersList } = this.props;\n    getUsersList();\n  }\n\n  onMintChange(event) {\n    this.setState({ amountMint: event.target.value });\n  }\n\n  onDistributeChange(event) {\n    this.setState({ amountDist: event.target.value });\n  }\n\n  handleCheckChange(e) {\n    const item = e.target.name;\n    const isChecked = e.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked),\n    }));\n  }\n\n  handleCheckAll() {\n    const { checkedItems, checkedAll } = this.state;\n    const { users } = this.props;\n    const newCheckedItems = checkedItems;\n    for (let i = 0; i < users.citizens.length; i += 1) {\n      newCheckedItems.set(users.citizens[i].address, !checkedAll);\n    }\n    for (let i = 0; i < users.businessOwners.length; i += 1) {\n      newCheckedItems.set(users.businessOwners[i].address, !checkedAll);\n    }\n    this.setState({ checkedItems: newCheckedItems, checkedAll: !checkedAll });\n  }\n\n  handleSubmitMint(event) {\n    event.preventDefault();\n    const { amountMint } = this.state;\n\n    const { props } = this;\n\n    if (isPositive(amountMint)) {\n      props.onMintFormSubmit(amountMint);\n    } else {\n      const errors = [];\n      errors.push('Mint amount must be positive and greater than zero.');\n      this.setState({ modalShow: true, errors });\n    }\n  }\n\n  checkAnyUserChecked() {\n    const { checkedItems } = this.state;\n    const usersToDistribute = [];\n    for (const [k, v] of checkedItems) {\n      if (v) {\n        usersToDistribute.push(k);\n      }\n    }\n    return usersToDistribute;\n  }\n\n\n  handleSubmitDistribute(event) {\n    event.preventDefault();\n    const { amountDist } = this.state;\n\n    const { props } = this;\n\n    const usersToDistribute = this.checkAnyUserChecked();\n\n    if (parseInt(amountDist, 10) * usersToDistribute.length <= parseInt(props.data.balance, 10)\n        && isPositive(amountDist) && usersToDistribute.length > 0) {\n      props.onDistributeFormSubmit(usersToDistribute, amountDist);\n    } else {\n      const errors = [];\n      if (parseInt(amountDist, 10) * usersToDistribute.length > parseInt(props.data.balance, 10)) {\n        errors.push(\"You can't distribute more Cubit than you have. Mint some first!\");\n      }\n      if (usersToDistribute.length < 1) {\n        errors.push('You must select at least one user to distribute Cubit.');\n      }\n      if (!isPositive(amountDist)) {\n        errors.push('Cubit amount to distribute must be positive and greater than zero.');\n      }\n      this.setState({ modalShow: true, errors });\n    }\n  }\n\n  render() {\n    const {\n      amountMint, amountDist, checkedItems, modalShow, errors,\n    } = this.state;\n\n    const { users, isLoading } = this.props;\n\n    const modalClose = () => this.setState({ modalShow: false });\n\n    let allUsersList = null;\n\n    if (users !== null && users !== undefined) {\n      allUsersList = users.citizens.map(item => (\n        <Col key={item.address}>\n          <Form.Check\n            className=\"checkbox\"\n            name={item.address}\n            type=\"checkbox\"\n            label={`Citizen: ${item.name} ${item.surname}`}\n            checked={checkedItems.get(item.address)}\n            onChange={this.handleCheckChange}\n          />\n        </Col>\n      ));\n      allUsersList.push(\n        users.businessOwners.map(item => (\n          <Col key={item.address}>\n            <Form.Check\n              className=\"checkbox\"\n              name={item.address}\n              type=\"checkbox\"\n              label={`Business: ${item.businessName}`}\n              checked={checkedItems.get(item.address)}\n              onChange={this.handleCheckChange}\n            />\n          </Col>\n        )),\n      );\n    }\n\n    if (allUsersList === null) {\n      allUsersList = <AlertMessage variant=\"info\" message=\"No users registered in Soldino.\" />;\n    }\n\n    return (\n      <Container>\n        <h2 style={{ margin: '1em' }}>Mint cubits here</h2>\n        <Form onSubmit={this.handleSubmitMint}>\n          <Form.Group as={Row} controlId=\"mintAmount\">\n            <Form.Label column sm=\"4\" className=\"text-right\">\n              Amount of cubits to mint:\n            </Form.Label>\n            <Col sm=\"6\">\n              <Form.Control\n                type=\"text\"\n                value={amountMint}\n                onChange={this.onMintChange}\n                placeholder=\"0\"\n              />\n            </Col>\n            <Col>\n              <Button\n                variant=\"dark\"\n                type=\"submit\"\n                block\n              >\n                Mint\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n\n        <h2 style={{ margin: '1em' }}>Distribute cubits here</h2>\n        <Form onSubmit={this.handleSubmitDistribute}>\n          <Form.Group as={Row} controlId=\"distributeAmount\">\n            <Form.Label column sm=\"4\" className=\"text-right\">\n              Amount of cubits to distribute:\n            </Form.Label>\n            <Col sm=\"6\">\n              <Form.Control\n                type=\"text\"\n                value={amountDist}\n                onChange={this.onDistributeChange}\n                placeholder=\"Distribute\"\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group controlId=\"distributeAddress\">\n            <Form.Label\n              column\n              sm=\"4\"\n              className=\"text-right\"\n              style={{ margin: '1em' }}\n            >\n              Users to distribute cubits to:\n            </Form.Label>\n            <Row style={{ textAlign: 'center', marginTop: '2%', marginBottom: '4%' }}>\n              <Col>\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Check All\"\n                  onChange={this.handleCheckAll}\n                />\n              </Col>\n            </Row>\n            <Row style={{ textAlign: 'center' }}>{isLoading ? <LoadingSpinner /> : allUsersList}</Row>\n            <div style={{ textAlign: 'center', margin: '3em' }}>\n              <Button variant=\"dark\" type=\"submit\">\n                Distribute\n              </Button>\n            </div>\n          </Form.Group>\n        </Form>\n        <ModalCustom\n          show={modalShow}\n          title=\"Form not valid!\"\n          description={errors}\n          onHide={modalClose}\n        />\n      </Container>\n    );\n  }\n}\n\nEconomyForm.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  // eslint-disable-next-line\n  users: PropTypes.object,\n  // eslint-disable-next-line\n  onMintFormSubmit: PropTypes.func.isRequired,\n  // eslint-disable-next-line\n  onDistributeFormSubmit: PropTypes.func.isRequired,\n  // eslint-disable-next-line\n  getUsersList: PropTypes.func.isRequired\n};\n\nexport default EconomyForm;\n","import { browserHistory } from 'react-router';\nimport API from '../../util/API/SoldinoAPI';\nimport { startFetchData, stopFetchData } from '../public/FetchDataActions';\n\nexport const USER_UPDATED = 'USER_UPDATED';\nexport const GET_USERS_LIST = 'GET_USERS_LIST';\n\nfunction userUpdated(user) {\n  return {\n    type: USER_UPDATED,\n    payload: user,\n  };\n}\n\nfunction fetchUsersList(usersData) {\n  return {\n    type: GET_USERS_LIST,\n    payload: usersData,\n  };\n}\n\nexport function getUsersList() {\n  return (dispatch) => {\n    dispatch(startFetchData());\n    return API.users.getAllCitizenData()\n      .then(citizens => API.users.getAllConfirmedBusinessOwnersData()\n        .then((businessOwners) => {\n          dispatch(fetchUsersList({\n            citizens,\n            businessOwners,\n          }));\n          const retData = [];\n          retData.push(citizens.map(citizen => citizen.address));\n          retData.push(businessOwners.map(citizen => citizen.address));\n          dispatch(stopFetchData());\n          return retData;\n        }));\n  };\n}\n\nexport function mintCubit(amount) {\n  return dispatch => API.cubit.mint(amount)\n    .then(() => {\n      API.init.getCurrentAccount()\n        .then(currAccount => API.users.getUserBalance(currAccount)\n          .then((balance) => {\n            dispatch(\n              userUpdated({ userType: 3, balance }),\n            );\n            const currentLocation = browserHistory.getCurrentLocation();\n\n            if ('redirect' in currentLocation.query) {\n              return browserHistory.push(\n                decodeURIComponent(currentLocation.query.redirect),\n              );\n            }\n\n            return browserHistory.push('/profile');\n          }));\n    });\n}\n\nexport function distributeCubit(addresses, amount) {\n  return dispatch => API.cubit.distributeToUsers(addresses, amount)\n    .then(() => {\n      API.init.getCurrentAccount()\n        .then(currAccount => API.users.getUserBalance(currAccount)\n          .then((balance) => {\n            dispatch(\n              userUpdated({ userType: 3, balance }),\n            );\n            const currentLocation = browserHistory.getCurrentLocation();\n\n            if ('redirect' in currentLocation.query) {\n              return browserHistory.push(\n                decodeURIComponent(currentLocation.query.redirect),\n              );\n            }\n\n            return browserHistory.push('/profile');\n          }));\n    });\n}\n","import { connect } from 'react-redux';\nimport EconomyForm from '../../components/government/EconomyForm';\nimport {\n  mintCubit,\n  distributeCubit,\n  getUsersList,\n} from '../../actions/government/EconomyFormActions';\n\nconst mapStateToProps = state => ({\n  data: state.user.data,\n  users: state.government.users,\n  isLoading: state.fetchData.isLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onMintFormSubmit: (amountMint) => {\n    // event.preventDefault();\n\n    dispatch(mintCubit(amountMint));\n  },\n  onDistributeFormSubmit: (usersToDist, amountDist) => {\n    // event.preventDefault();\n    dispatch(distributeCubit(usersToDist, amountDist));\n  },\n  getUsersList: () => {\n    // event.preventDefault();\n\n    dispatch(getUsersList());\n  },\n});\n\nconst EconomyFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EconomyForm);\n\nexport default EconomyFormContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Table, Container,\n} from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport moment from 'moment';\nimport AlertMessage from '../public/AlertMessage';\nimport LoadingSpinner from '../public/LoadingSpinner';\n\nclass VATDetails extends React.Component {\n  componentDidMount() {\n    const { getVATHistory, location } = this.props;\n    getVATHistory(location.state);\n  }\n\n  render() {\n    const {\n      VATHistory, payVAT, isLoading, location,\n    } = this.props;\n\n    if (location.state === undefined) {\n      return (\n        <AlertMessage\n          variant=\"warning\"\n          message={\"You can't access this page directly from the url. You need\"\n                  + ' to get access from the business VAT status page.'}\n        />\n      );\n    }\n\n    let businessData = null;\n    if (VATHistory !== null && VATHistory !== undefined && VATHistory.length !== 0) {\n      businessData = (\n        VATHistory.map((quarter) => {\n          let amount = '';\n          let date = '';\n          switch (quarter.status.status) {\n            case 'ToReceive':\n            case 'ToPay': amount = `${quarter.status.amount.toString()} Cubit`;\n              date = 'Not yet payed';\n              break;\n            case 'Refused':\n            case 'Payed':\n            case 'Received': amount = `${quarter.status.transaction.amount.toString()} Cubit`;\n              date = moment.unix(quarter.status.transaction.date).toDate().toDateString();\n              break;\n            case 'NotNecessary': amount = '0.00 Cubit';\n              date = 'NA';\n              break;\n            default: break;\n          }\n\n          const vatTaxPayable = quarter.status.status === 'ToReceive';\n          return (\n            <tr key={`${quarter.year} ${quarter.quarter}`}>\n              <td>{quarter.year}</td>\n              <td>{quarter.quarter}</td>\n              <td>{quarter.status.status}</td>\n              <td>{amount}</td>\n              <td>{date}</td>\n              <td><Button onClick={() => payVAT(quarter, location.state)} disabled={!vatTaxPayable} variant=\"danger\">Pay VAT tax credit</Button></td>\n            </tr>\n          );\n        })\n      );\n    }\n\n    let businessDataToPrint = null;\n\n    if (businessData !== null) {\n      businessDataToPrint = (\n        <Container>\n          <Table striped bordered hover>\n            <thead>\n              <tr key=\"0\">\n                <th>Year</th>\n                <th>Quarter</th>\n                <th>Status</th>\n                <th>Amount</th>\n                <th>Payment date</th>\n                <th>Pay VAT credit</th>\n              </tr>\n            </thead>\n            <tbody>\n              { businessData }\n            </tbody>\n          </Table>\n        </Container>\n      );\n    } else {\n      businessDataToPrint = <AlertMessage variant=\"info\" message=\"No VAT History.\" />;\n    }\n\n    return (\n      <Container>\n        <Link to=\"/profile\">\n          <Button variant=\"dark\" size=\"lg\">\n                        Back to all actions\n          </Button>\n        </Link>\n        <h2 className=\"ManageBusinessTitle\">Business VAT details</h2>\n        <br />\n        {isLoading ? <LoadingSpinner /> : businessDataToPrint}\n      </Container>\n    );\n  }\n}\n\nVATDetails.propTypes = {\n  isLoading: PropTypes.bool,\n  // eslint-disable-next-line\n  VATHistory: PropTypes.array,\n  getVATHistory: PropTypes.func.isRequired,\n  payVAT: PropTypes.func.isRequired,\n  location: PropTypes.string.isRequired,\n};\n\nVATDetails.defaultProps = {\n  isLoading: false,\n};\n\nexport default VATDetails;\n","import { connect } from 'react-redux';\nimport {\n  getVATHistory,\n  payVAT,\n} from '../../actions/business/VATManagementActions';\nimport VATDetails from '../../components/government/VATDetails';\n\nfunction mapStateToProps(state) {\n  return {\n    VATHistory: state.business.VATHistory,\n  };\n}\nconst mapDispatchToProps = dispatch => ({\n  getVATHistory: (address) => {\n    dispatch(getVATHistory(address));\n  },\n  payVAT: (item, address) => {\n    dispatch(payVAT(item, address));\n  },\n});\n\nconst VATDetailsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(VATDetails);\n\nexport default VATDetailsContainer;\n","import React from 'react';\nimport { Route, IndexRoute } from 'react-router';\nimport { UserIsGovernment, UserIsAuthenticated } from '../util/wrappers';\n\nimport GovernmentFinancialContainer from '../containers/government/GovernmentFinancialContainer';\nimport ManageBusinessContainer from '../containers/government/ManageBusinessContainer';\nimport BusinessListContainer from '../containers/government/BusinessListContainer';\n\nimport CommonHomeContainer from '../containers/CommonHomeContainer';\nimport EconomyFormContainer from '../containers/government/EconomyFormContainer';\nimport VATDetailsContainer from '../containers/government/VATDetailsContainer';\n\nconst governmentRoutes = (\n  <Route path=\"profile\">\n    <IndexRoute component={UserIsAuthenticated(CommonHomeContainer)} />\n    <Route\n      path=\"governmentEconomy\"\n      component={UserIsGovernment(EconomyFormContainer)}\n    />\n    <Route\n      path=\"governmentFinancial\"\n      component={UserIsGovernment(GovernmentFinancialContainer)}\n    />\n    <Route path=\"manageBusiness\" component={UserIsGovernment(ManageBusinessContainer)} />\n    <Route path=\"businessList\" component={UserIsGovernment(BusinessListContainer)} />\n    <Route path=\"/governmentFinancial/VATDetails/:id\" component={UserIsGovernment(VATDetailsContainer)} />\n  </Route>\n);\n\nexport default governmentRoutes;\n","import React from 'react';\nimport { Container, Image } from 'react-bootstrap';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport metamaskLogo from '../../img/metamask_big.png';\nimport metamaskStart1 from '../../img/metamask_guide_start.gif';\nimport metamaskStart2 from '../../img/metamask_guide_start2.gif';\n\nconst Help = () => (\n  <Container>\n    <Jumbotron>\n      <h1>\nGetting started with\n        <a href=\"https://metamask.io/\"><img src={metamaskLogo} alt=\"MetaMask logo\" width=\"250\" /></a>\n      </h1>\n      <p>\nTo use the application Soldino\n        <strong> YOU WILL NEED TO HAVE AN ETHEREUM WALLET</strong>\n: this can be done by\n        <a href=\"https://metamask.io/\"> installing MetaMask</a>\n.\n      </p>\n      <p>\n                MetaMask is a free and secure browser\n                extension that allows web applications to read\n                and interact with the Ethereum blockchain.\n      </p>\n    </Jumbotron>\n    <h2>Two steps to install MetaMask</h2>\n    <br />\n    <Row>\n      <Col xl>\n        <h3>Step 1. Install MetaMask on your browser</h3>\n        <p>\n                        To\n          {' '}\n          <strong> create a new wallet with MetaMask</strong>\n          {' '}\nyou need to\n          {' '}\n          <strong> install the extension first</strong>\n.\n                        You can install MetaMask for Chrome or Firefox, this guide will use Chrome as an example.\n        </p>\n        <ol>\n          <li>\nOpen\n            <a href=\"https://metamask.io\"> https://metamask.io</a>\n            {' '}\nor search for “MetaMask extension” using\n                            your favorite search engine;\n          </li>\n          <li>Click \"Chrome\" to install MetaMask as a Google Chrome extension;</li>\n          <li>Click \"Add to Chrome\";</li>\n          <li>Click \"Add Extension\".</li>\n        </ol>\n        <p>\n          <strong>And now you have successfully installed the MetaMask extension!</strong>\n        </p>\n      </Col>\n      <Col xl>\n        <Image src={metamaskStart1} fluid />\n      </Col>\n    </Row>\n    <br />\n    <br />\n    <br />\n    <Row>\n      <Col xl>\n        <Image src={metamaskStart2} fluid />\n      </Col>\n      <Col xl>\n        <h3>Step 2. Create an account</h3>\n        <p>\n                        Now it is time to create an account:\n        </p>\n        <ol>\n          <li>\nClick on the MetaMask icon in the upper right corner to\n            <strong> open the extension</strong>\n;\n          </li>\n          <li>To install the latest version of MetaMask, click Try it now;</li>\n          <li>Click Continue;</li>\n          <li>\nYou will be asked to create a new password.\n            <strong> Create a strong password and click Create</strong>\n;\n          </li>\n          <li>Proceed by clicking Next, then accept Terms of Use;</li>\n          <li>Click Reveal secret words;</li>\n          <li>\nYou will see a\n            <strong> 12 words seed phrase</strong>\n. Save seed words as a file or\n            <strong> copy them to a safe place </strong>\n                            and click Next;\n          </li>\n          <li>\n            <strong> Verify your secret phrase</strong>\n            {' '}\nby selecting the previously generated phrase. When done, click Confirm.\n          </li>\n        </ol>\n        <p>\n                        Congratulations!\n          {' '}\n          <strong>\nYou have successfully created your MetaMask account. A new Ethereum wallet address\n                        was automatically generated for you!\n          </strong>\n        </p>\n          <p>\n              <strong>And now you are good to go</strong>\n              , you can register to the platform and start searching for products or selling\n              them!\n          </p>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Help;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport { Link } from 'react-router';\nimport company from '../../img/company.png';\nimport citizen from '../../img/man.png';\n\nconst SignUp = () => (\n  <Container>\n    <Row>\n      <h1>Sign up</h1>\n    </Row>\n    <Row>\n      <h2>Are you a citizen or a business owner?</h2>\n    </Row>\n    <Row className=\"justify-content-md-center\">\n      <CardDeck>\n        <Card bg=\"dark\" text=\"white\" style={{ width: '25rem' }}>\n          <Card.Body className=\"text-centered\">\n            <Card.Title as=\"h3\">\n                  I am a\n              <br />\n                  CITIZEN\n            </Card.Title>\n            <Card.Img variant=\"bottom\" src={citizen} />\n            <Card.Footer>\n              <Link to=\"/signupcitizen\">\n                <Button variant=\"info\" size=\"lg\" block>\n                      To sign up as a\n                  {' '}\n                  <strong>CITIZEN</strong>\n                  {' '}\nclick here\n                </Button>\n              </Link>\n            </Card.Footer>\n          </Card.Body>\n        </Card>\n        <Card bg=\"dark\" text=\"white\" style={{ width: '25rem' }}>\n          <Card.Body className=\"text-centered\">\n            <Card.Title as=\"h3\">\n                  I am a\n              <br />\n                  BUSINESS OWNER\n            </Card.Title>\n            <Card.Img variant=\"bottom\" src={company} />\n            <Card.Footer>\n              <Link to=\"/signupbusinessowner\">\n                <Button variant=\"info\" size=\"lg\" block>\n                      To sign up as a\n                  {' '}\n                  <strong>BUSINESS OWNER</strong>\n                  {' '}\nclick here\n                </Button>\n              </Link>\n            </Card.Footer>\n          </Card.Body>\n        </Card>\n      </CardDeck>\n    </Row>\n  </Container>\n);\n\n\nexport default SignUp;\n","import React from 'react';\nimport { Container, Table } from 'react-bootstrap';\n\nconst Price = () => (\n  <Container>\n    <h1>Price list</h1>\n    <h2>Ethereum price</h2>\n    <Table bordered>\n      <thead>\n        <tr>\n          <th>ETH</th>\n          <th>EUR</th>\n          <th>USD</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>1</td>\n          <td>126,61</td>\n          <td>142,09</td>\n        </tr>\n        <tr>\n          <td>0,0079</td>\n          <td>1</td>\n          <td>1,12</td>\n        </tr>\n        <tr>\n          <td>0,0070</td>\n          <td>0,89</td>\n          <td>1</td>\n        </tr>\n      </tbody>\n    </Table>\n    <p>1 Ether = 1 Cubit</p>\n\n    <h2>Operation Price</h2>\n    <Table bordered>\n      <thead>\n        <tr>\n          <th>Operation</th>\n          <th>Gas cost</th>\n          <th>ETH</th>\n          <th>EUR</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>All reading operations</td>\n          <td>FREE</td>\n          <td>FREE</td>\n          <td>FREE</td>\n        </tr>\n        <tr>\n          <td>Login/logout</td>\n          <td>FREE</td>\n          <td>FREE</td>\n          <td>FREE</td>\n        </tr>\n        <tr>\n          <td>Register as citizen/business owner</td>\n          <td>70000</td>\n          <td>0.00007</td>\n          <td>0.0088</td>\n        </tr>\n        <tr>\n          <td>Mint Cubit</td>\n          <td>90000</td>\n          <td>0.00009</td>\n          <td>0.011</td>\n        </tr>\n        <tr>\n          <td>Distribute Cubit</td>\n          <td>80000</td>\n          <td>0.00008</td>\n          <td>0.010</td>\n        </tr>\n\n      </tbody>\n    </Table>\n\n  </Container>\n);\n\nexport default Price;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\nimport {\n  isOnlyCharacters, isValidEmail, isValidFiscalCode,\n} from '../../util/inputValidation';\nimport ModalCustom from \"./ModalCustom\";\n\nclass SignUpCitizenForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      surname: '',\n      fiscalCode: '',\n      email: '',\n      nameValid: false,\n      surnameValid: false,\n      fiscalCodeValid: false,\n      emailValid: false,\n      formValid: false,\n      modalShow: false,\n      errors: [],\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.nameValid && this.state.surnameValid && this.state.fiscalCodeValid && this.state.emailValid,\n    });\n  }\n\n  validateField(fieldName, value) {\n    let nameValid = this.state.nameValid;\n    let surnameValid = this.state.surnameValid;\n    let fiscalCodeValid = this.state.fiscalCodeValid;\n    let emailValid = this.state.emailValid;\n\n    switch (fieldName) {\n      case 'name':\n        nameValid = value.length > 2 && isOnlyCharacters(value);\n        break;\n      case 'surname':\n        surnameValid = value.length > 2 && isOnlyCharacters(value);\n        break;\n      case 'fiscalCode':\n        fiscalCodeValid = isValidFiscalCode(value);\n        break;\n      case 'email':\n        emailValid = isValidEmail(value);\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        nameValid,\n        surnameValid,\n        fiscalCodeValid,\n        emailValid,\n      },\n      this.validateForm,\n    );\n  }\n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const {\n      props, state,\n    } = this;\n\n    const {\n      name, surname, fiscalCode, email, nameValid, surnameValid, emailValid, fiscalCodeValid, formValid\n    } = state;\n\n    this.setState({\n      formValid: nameValid && surnameValid\n          && emailValid && fiscalCodeValid,\n    });\n\n    if(formValid) {\n      props.onSignUpCitizenFormSubmit(name, surname, fiscalCode, email);\n    } else {\n      let errors = [];\n      if(!nameValid) {\n        errors.push(\"Name must contain at least three characters.\");\n      }\n      if(!surnameValid) {\n        errors.push(\"Surname must contain at least three characters.\");\n      }\n      if(!fiscalCodeValid) {\n        errors.push(\"Social security is not valid.\");\n      }\n      if(!emailValid) {\n        errors.push(\"Email is not valid.\");\n      }\n      this.setState({modalShow: true, errors: errors});\n    }\n  }\n\n  render() {\n    const {\n      name, surname, fiscalCode, email, modalShow, errors\n    } = this.state;\n\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n      <Container>\n        <Row><h1>Sign up as a Citizen</h1></Row>\n\n        <Card border=\"dark\" bg=\"light\" className=\"text-center\" style={{ margin: 'auto', width: '75%' }}>\n          <Card.Title as=\"h3\">Compile and submit to register</Card.Title>\n          <Form onSubmit={this.handleSubmit}>\n\n            <Form.Group as={Row} controlId=\"Name\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Name</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" value={name} name={\"name\"} onChange={this.handleUserInput} placeholder=\"Name\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"surname\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Surname</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" value={surname} name={\"surname\"} onChange={this.handleUserInput} placeholder=\"Surname\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"location\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Social Security Code</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" value={fiscalCode} name={\"fiscalCode\"} onChange={this.handleUserInput} placeholder=\"Social Security Code\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"email\">\n              <Form.Label column sm=\"3\" className=\"text-right\">E-mail</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"email\" value={email} name={\"email\"} onChange={this.handleUserInput} placeholder=\"E-Mail\" />\n              </Col>\n            </Form.Group>\n\n            <Button variant=\"dark\" type=\"submit\">\n                SIGN UP\n            </Button>\n          </Form>\n        </Card>\n        <ModalCustom\n            show={modalShow}\n            title={\"Form not valid!\"}\n            description={errors}\n            onHide={modalClose}\n        />\n      </Container>\n    );\n  }\n}\n\nSignUpCitizenForm.propTypes = {\n  // eslint-disable-next-line\n  onSignUpCitizenFormSubmit: PropTypes.func.isRequired\n};\n\nexport default SignUpCitizenForm;\n","import { browserHistory } from 'react-router';\nimport API from '../../util/API/SoldinoAPI';\n\nexport const USER_LOGGED_IN = 'USER_LOGGED_IN';\nfunction userLoggedIn(user) {\n  return {\n    type: USER_LOGGED_IN,\n    payload: user,\n  };\n}\n\nexport function loginUser() {\n  return (dispatch) => {\n    API.users.login().then((result) => {\n      dispatch(userLoggedIn(result));\n\n      const currentLocation = browserHistory.getCurrentLocation();\n\n      if ('redirect' in currentLocation.query) {\n        return browserHistory.push(\n          decodeURIComponent(currentLocation.query.redirect),\n        );\n      }\n      return browserHistory.push('/profile');\n    }, (err) => { console.log(err); });\n  };\n}\n","import { connect } from 'react-redux';\nimport SignUpCitizenForm from '../../components/public/SignUpCitizenForm';\nimport { signUpUser } from '../../actions/public/SignUpCitizenFormActions';\n\nconst mapStateToProps = (/* state, ownProps */) => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  onSignUpCitizenFormSubmit: (name, surname, fiscalCode, email) => {\n    dispatch(signUpUser(name, surname, fiscalCode, email));\n  },\n});\n\nconst SignUpCitizenFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpCitizenForm);\n\nexport default SignUpCitizenFormContainer;\n","import { loginUser } from './LoginButtonActions';\nimport API from '../../util/API/SoldinoAPI';\n\nexport function signUpUser(name, surname, fiscalCode, email) {\n  return function (dispatch) {\n    API.users.registerCitizen(name, surname, fiscalCode, email)\n      .then(() => {\n        dispatch(loginUser());\n      });\n  };\n}\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport PropTypes from 'prop-types';\nimport {isValidEmail, isValidVAT } from '../../util/inputValidation';\nimport ModalCustom from \"./ModalCustom\";\n\nclass SignUpBusinessOwnerForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businessName: '',\n      location: '',\n      VATNumber: '',\n      CE: '',\n      businessNameValid: false,\n      locationValid: false,\n      VATNumberValid: false,\n      CEValid: false,\n      formValid: false,\n      modalShow: false,\n      errors: [],\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.businessNameValid && this.state.locationValid && this.state.CEValid\n          && this.state.VATNumberValid,\n    });\n  }\n\n  validateField(fieldName, value) {\n    let businessNameValid = this.state.businessNameValid;\n    let locationValid = this.state.locationValid;\n    let VATNumberValid = this.state.VATNumberValid;\n    let CEValid = this.state.CEValid;\n\n    switch (fieldName) {\n      case 'businessName':\n        businessNameValid = value.length > 2;\n        break;\n      case 'VATNumber':\n        VATNumberValid = value.length > 2 && isValidVAT(value);\n        break;\n      case 'location':\n        locationValid = value.length > 2;\n        break;\n      case 'CE':\n        CEValid = isValidEmail(value);\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        businessNameValid,\n        locationValid,\n        VATNumberValid,\n        CEValid,\n      },\n      this.validateForm,\n    );\n  }\n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const {\n      props, state,\n    } = this;\n\n    const {\n      businessName, location, VATNumber, CE, businessNameValid, locationValid, VATNumberValid, CEValid, formValid\n    } = state;\n\n    this.setState({\n      formValid: businessNameValid && locationValid\n          && VATNumberValid && CEValid,\n    });\n\n    if(formValid) {\n      props.onSignUpBusinessOwnerFormSubmit(businessName, location, VATNumber, CE);\n    } else {\n      let errors = [];\n      if(!businessNameValid) {\n        errors.push(\"Business name must contain at least three characters\");\n      }\n      if(!locationValid) {\n        errors.push(\"Location must contain at least three characters.\");\n      }\n      if(!VATNumberValid) {\n        errors.push(\"VAT number must be eleven digit.\");\n      }\n      if(!CEValid) {\n        errors.push(\"Certified email is not valid.\");\n      }\n      this.setState({modalShow: true, errors: errors});\n    }\n  }\n\n  render() {\n    const {\n      businessName, location, VATNumber, CE, modalShow, errors\n    } = this.state;\n\n    let modalClose = () => this.setState({ modalShow: false });\n\n    return (\n      <Container>\n        <Row><h1>Sign up as a Business Owner</h1></Row>\n\n        <Card border=\"dark\" bg=\"light\" className=\"text-center\" style={{ margin: 'auto', width: '75%' }}>\n          <Card.Title as=\"h3\">Compile and submit to register</Card.Title>\n\n\n          <Form onSubmit={this.handleSubmit}>\n\n            <Form.Group as={Row} controlId=\"businessName\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Business Name</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" value={businessName} name={\"businessName\"} onChange={this.handleUserInput} placeholder=\"Business Name\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"VATNumber\">\n              <Form.Label column sm=\"3\" className=\"text-right\">VAT Number</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" value={VATNumber} name={\"VATNumber\"} onChange={this.handleUserInput} placeholder=\"VAT Number\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"location\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Location</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"text\" value={location} name={\"location\"} onChange={this.handleUserInput} placeholder=\"Location\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"CE\">\n              <Form.Label column sm=\"3\" className=\"text-right\">Certified E-mail</Form.Label>\n              <Col sm=\"8\">\n                <Form.Control type=\"email\" value={CE} name={\"CE\"} onChange={this.handleUserInput} placeholder=\"Certified E-Mail\" />\n              </Col>\n            </Form.Group>\n\n            <Button variant=\"dark\" type=\"submit\" >\n                SIGN UP\n            </Button>\n          </Form>\n        </Card>\n        <ModalCustom\n            show={modalShow}\n            title={\"Form not valid!\"}\n            description={errors}\n            onHide={modalClose}\n        />\n      </Container>\n    );\n  }\n}\n\nSignUpBusinessOwnerForm.propTypes = {\n  // eslint-disable-next-line\n  onSignUpBusinessOwnerFormSubmit: PropTypes.func.isRequired\n};\n\nexport default SignUpBusinessOwnerForm;\n","import { connect } from 'react-redux';\nimport SignUpBusinessOwnerForm from '../../components/public/SignUpBusinessOwnerForm';\nimport { signUpUser } from '../../actions/public/SignUpBusinessOwnerFormActions';\n\nconst mapStateToProps = (/* state, ownProps */) => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  onSignUpBusinessOwnerFormSubmit: (businessName, location, VATNumber, CE) => {\n    dispatch(signUpUser(businessName, location, VATNumber, CE));\n  },\n});\n\nconst SignUpBusinessOwnerFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpBusinessOwnerForm);\n\nexport default SignUpBusinessOwnerFormContainer;\n","import { loginUser } from './LoginButtonActions';\nimport API from '../../util/API/SoldinoAPI';\n\nexport function signUpUser(businessName, location, VATNumber, CE) {\n  return function (dispatch) {\n    API.users.registerBusinessOwner(businessName, location, VATNumber, CE)\n      .then(() => {\n        dispatch(loginUser());\n      });\n  };\n}\n","import React from 'react';\nimport {\n  Card, Button, Container,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router';\nimport productPic from '../../img/Product1.jpg';\nimport AlertMessage from './AlertMessage';\n\nconst Cart = (props) => {\n  const {\n    items,\n    total,\n    addQuantity,\n    subtractQuantity,\n    buy,\n    removeItem,\n    userType,\n    userData,\n  } = props;\n  const addedItems = items.length\n    ? (\n      items.map(item => (\n        <Card key={item.id} bg=\"dark\" text=\"light\" style={{ width: '100%' }}>\n          <div>\n            <div className=\"productImage\">\n              <Link to={{\n                pathname: `/product/${item.id}`,\n                state: item,\n              }}\n              >\n                <Card.Img style={{ objectFit: 'scale-down' }} src={productPic} />\n              </Link>\n            </div>\n            <Card.Body style={{ marginLeft: '30%' }}>\n              <Link to={{\n                pathname: `/product/${item.id}`,\n                state: item,\n              }}\n              >\n                <h2>{item.name}</h2>\n              </Link>\n              <h3>\n                <b>Price: </b>\n                {item.price}\n                {' '}\n                                CUB\n              </h3>\n              <Card.Text>{item.description}</Card.Text>\n              <div style={{ float: 'right' }}>\n                <h3>\n                                    Quantity:\n                  {' '}\n                  {item.quantity}\n                </h3>\n                <Button\n                  style={{ marginRight: '0.5em' }}\n                  variant=\"info\"\n                  onClick={() => {\n                    if (item.quantity < item.availability) {\n                      addQuantity(item.id);\n                    }\n                  }}\n                >\n                                    +\n                </Button>\n                <Button\n                  style={{ marginRight: '0.5em' }}\n                  variant=\"info\"\n                  onClick={() => {\n                    subtractQuantity(item.id);\n                  }}\n                >\n                                    -\n                </Button>\n                <Button\n                  style={{ marginRight: '0.5em' }}\n                  variant=\"info\"\n                  onClick={() => {\n                    removeItem(item.id);\n                  }}\n                >\n                                    Remove\n                </Button>\n                <p style={{ marginTop: '5%' }}>\n                  <b>Availability: </b>\n                  {' '}\n                  {`${item.availability} units`}\n                </p>\n              </div>\n            </Card.Body>\n          </div>\n        </Card>\n      ))\n    ) : (<AlertMessage variant=\"info\" message=\"The cart is empty.\" />);\n\n  let printTotal;\n\n  if (parseFloat(total.toFixed(2)) !== 0.00) {\n    printTotal = (\n      <div>\n        <h4>\n                    Total:\n          {' '}\n          {total.toFixed(2)}\n          {' '}\n                    CUB\n        </h4>\n        <Button\n          type=\"submit\"\n          variant=\"dark\"\n          disabled={userType === 0\n        || userData.balance < total}\n          onClick={() => buy(items)}\n        >\nCheckout\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Container>\n      <div>\n        {userType === 0 ? (\n          <AlertMessage\n            variant=\"warning\"\n            message=\"You must login in order to place an order.\"\n          />\n        ) : null}\n        {userType !== 0 && userData.balance < total ? (\n          <AlertMessage\n            variant=\"danger\"\n            message=\"You haven't enough Cubit to place this order.\"\n          />\n        ) : null}\n        <h1 style={{ textAlign: 'center', margin: '1em' }}>Cart</h1>\n        {addedItems}\n      </div>\n      {printTotal}\n    </Container>\n  );\n};\n\n\nCart.propTypes = {\n  // eslint-disable-next-line\n    addQuantity: PropTypes.func.isRequired,\n  subtractQuantity: PropTypes.func.isRequired,\n  buy: PropTypes.func.isRequired,\n  // eslint-disable-next-line\n    items: PropTypes.array.isRequired,\n  removeItem: PropTypes.func.isRequired,\n  // eslint-disable-next-line\n    total: PropTypes.number.isRequired,\n  userType: PropTypes.number.isRequired,\n  // eslint-disable-next-line\n  userData: PropTypes.object,\n\n};\n\nCart.defaultProps = {\n  // eslint-disable-next-line\n    items: [],\n  // eslint-disable-next-line\n    total: 0,\n};\n\nexport default Cart;\n","import { connect } from 'react-redux';\nimport {\n  addQuantity, removeItem, subtractQuantity, buyCart,\n} from '../../actions/public/CartActions';\nimport Cart from '../../components/public/Cart';\n\nconst mapStateToProps = state => ({\n  items: state.cart.addedItems,\n  total: state.cart.total,\n  userType: state.user.type,\n  userData: state.user.data,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeItem: (id) => {\n    dispatch(removeItem(id));\n  },\n  addQuantity: (id) => {\n    dispatch(addQuantity(id));\n  },\n  subtractQuantity: (id) => {\n    dispatch(subtractQuantity(id));\n  },\n  buy: (items) => {\n    dispatch(buyCart(items));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport {\n  Card, Button,\n} from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport PropTypes from 'prop-types';\n\nimport productPic from '../../img/Product1.jpg';\n\nclass ProductPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quantity: 0,\n    };\n\n    this.increaseQuantity = this.increaseQuantity.bind(this);\n    this.decreaseQuantity = this.decreaseQuantity.bind(this);\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const av = location.state.availability;\n    this.setState({ quantity: av < 1 ? 0 : 1 });\n  }\n\n\n  increaseQuantity() {\n    const { quantity } = this.state;\n    const { location } = this.props;\n\n    if (quantity < location.state.availability) {\n      this.setState({ quantity: quantity + 1 });\n    }\n  }\n\n  decreaseQuantity() {\n    const { quantity } = this.state;\n    if (quantity > 1) {\n      this.setState({ quantity: quantity - 1 });\n    }\n  }\n\n\n  render() {\n    const {\n      props, state,\n    } = this;\n\n    return (\n      <Card bg=\"dark\" text=\"light\" style={{ width: '100%', marginTop: '2%' }}>\n        <div>\n          <div className=\"productImage\">\n            <Card.Img style={{ objectFit: 'scale-down' }} src={props.location.state.imagePreview} />\n          </div>\n          <Card.Body style={{ marginLeft: '30%' }}>\n            <h2>{props.location.state.name}</h2>\n            <h3>\n                        Price:\n              {' '}\n              {props.location.state.price}\n              {' '}\n                        CUB\n            </h3>\n            <Card.Text>\n              {props.location.state.description}\n            </Card.Text>\n\n            <div style={{ float: 'right' }}>\n              <Button\n                type=\"button\"\n                variant=\"info\"\n                style={{ marginRight: '0.5em' }}\n                onClick={this.increaseQuantity}\n              >\n+\n              </Button>\n              <b style={{ marginRight: '0.5em' }}>\n                            Quantity:\n                {' '}\n                {state.quantity}\n              </b>\n              <Button\n                type=\"button\"\n                variant=\"info\"\n                style={{ marginRight: '1em' }}\n                onClick={this.decreaseQuantity}\n              >\n-\n              </Button>\n              <Link to=\"/cart\">\n                <Button\n                  type=\"button\"\n                  variant=\"info\"\n                  onClick={() => {\n                    props.addToCart({\n                      ...props.location.state,\n                      quantity: state.quantity,\n                    });\n                  }}\n                  disabled={props.location.state.availability < 1}\n                >\n                  {props.location.state.availability < 1 ? 'Out of stock' : 'Add to cart'}\n                </Button>\n              </Link>\n              <p style={{ marginTop: '5%' }}>\n                <b>Availability: </b>\n                {' '}\n                {`${props.location.state.availability} units`}\n              </p>\n            </div>\n          </Card.Body>\n        </div>\n      </Card>\n    );\n  }\n}\n\n\nProductPage.propTypes = {\n  // eslint-disable-next-line\n    location: PropTypes.object.isRequired,\n  // eslint-disable-next-line\n  addToCart: PropTypes.func.isRequired,\n};\n\nexport default ProductPage;\n","import { connect } from 'react-redux';\nimport { addToCart } from '../../actions/public/CartActions';\nimport ProductPage from '../../components/public/ProductPage';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: (id, qty) => {\n    dispatch(addToCart(id, qty));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductPage);\n","import React from 'react';\nimport {\n  Card, Button,\n} from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport PropTypes from 'prop-types';\n\nconst ProductCard = (props) => {\n  const { prodInfo } = props;\n\n  return (\n    <Card style={{ width: '18rem', marginRight: '8%' }}>\n      <Link to={{\n        pathname: `/product/${prodInfo.id}`,\n        state: prodInfo,\n      }}\n      >\n        <Card.Img variant=\"top\" src={prodInfo.imagePreview} />\n      </Link>\n      <Card.Body>\n        <Card.Title>\n          <Link to={{\n            pathname: `/product/${prodInfo.id}`,\n            state: prodInfo,\n          }}\n          >\n            <span>{prodInfo.name}</span>\n          </Link>\n        </Card.Title>\n        <Card.Text>\n          {prodInfo.description}\n        </Card.Text>\n        <Card.Text>\n          <b>Availability: </b>\n          {`${prodInfo.availability} `}\n        </Card.Text>\n        <Card.Text>\n          <b>Price: </b>\n          {` ${prodInfo.price} CUB`}\n        </Card.Text>\n        <Link to=\"/cart\">\n          <Button\n            style={{ float: 'right' }}\n            variant=\"dark\"\n            onClick={() => {\n              props.addToCart({\n                ...prodInfo,\n                quantity: 1,\n              });\n            }}\n            disabled={prodInfo.availability < 1}\n          >\n            {prodInfo.availability < 1 ? 'Out of stock' : 'Add to cart'}\n          </Button>\n        </Link>\n      </Card.Body>\n    </Card>\n  );\n};\n\nProductCard.propTypes = {\n  // eslint-disable-next-line\n    prodInfo: PropTypes.object.isRequired,\n  addToCart: PropTypes.func.isRequired,\n};\n\nexport default ProductCard;\n","import { connect } from 'react-redux';\nimport { addQuantity, addToCart, subtractQuantity } from '../../actions/public/CartActions';\nimport ProductCard from '../../components/public/ProductCard';\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: (id, qty) => {\n    dispatch(addToCart(id, qty));\n  },\n  addQuantity: (id) => {\n    dispatch(addQuantity(id));\n  },\n  subtractQuantity: (id) => {\n    dispatch(subtractQuantity(id));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { Form, Button, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport ProductContainer from '../../containers/public/ProductContainer';\nimport LoadingSpinner from './LoadingSpinner';\nimport AlertMessage from './AlertMessage';\n\n\nclass ProductSearch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: '',\n    };\n\n    this.handleQueryValue = this.handleQueryValue.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  handleQueryValue(event) {\n    this.setState({ query: event.target.value });\n  }\n\n  handleKeyDown(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const {\n      searchProducts,\n      clearSearch,\n      result,\n      isLoading,\n    } = this.props;\n\n    const {\n      query,\n    } = this.state;\n\n    let searchRes = null;\n    if (result !== null) {\n      if (result.length !== 0) {\n        searchRes = result.map(item => (\n          <ProductContainer\n            key={item.id}\n            prodInfo={item}\n          />\n        ));\n      }\n    }\n\n    const error = <AlertMessage variant=\"info\" message=\"No results found.\" />;\n\n    return (\n      <div>\n        <Container>\n          <h2 className=\"productFormTitle\">Search for products</h2>\n          <div style={{ textAlign: 'center' }}>\n            <Form onSubmit={this.handleKeyDown} className=\"productFormSearch\">\n              <Form.Control size=\"lg\" placeholder=\"e.g. Vans, White, Adidas, Blues\" onChange={this.handleQueryValue} />\n              <Button\n                type=\"submit\"\n                size=\"lg\"\n                className=\"searchButton\"\n                onClick={() => searchProducts(query)}\n              >\nSearch\n              </Button>\n              <Button\n                type=\"submit\"\n                size=\"lg\"\n                className=\"searchButton\"\n                onClick={() => clearSearch()}\n              >\n                    Clear Search results\n              </Button>\n            </Form>\n          </div>\n          {isLoading ? <LoadingSpinner /> : <Row>{searchRes}</Row> }\n          {result !== null && searchRes === null ? error : null }\n        </Container>\n      </div>\n    );\n  }\n}\n\nProductSearch.propTypes = {\n  isLoading: PropTypes.bool,\n  // eslint-disable-next-line\n  items: PropTypes.array,\n  // eslint-disable-next-line\n    result: PropTypes.array,\n  searchProducts: PropTypes.func.isRequired,\n  clearSearch: PropTypes.func.isRequired,\n};\n\nProductSearch.defaultProps = {\n  isLoading: false,\n};\n\nexport default ProductSearch;\n","import { connect } from 'react-redux';\nimport ProductSearch from '../../components/public/ProductSearch';\nimport { searchProducts, clearSearch } from '../../actions/public/SearchActions';\n\nconst mapStateToProps = state => ({\n  items: state.cart.items,\n  result: state.search.result,\n  isLoading: state.fetchData.isLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  searchProducts: (query) => {\n    dispatch(searchProducts(query));\n  },\n  clearSearch: () => {\n    dispatch(clearSearch());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductSearch);\n","import React from 'react';\nimport { Route } from 'react-router';\nimport { UserIsNotAuthenticated, AllUsersNoGovernment } from '../util/wrappers';\n\nimport Help from '../components/public/Help';\nimport SignUp from '../components/public/SignUp';\nimport Price from '../components/public/Price';\nimport SignUpCitizenFormContainer from '../containers/public/SignUpCitizenFormContainer';\nimport SignUpBusinessOwnerFormContainer from '../containers/public/SignUpBusinessOwnerFormContainer';\nimport CartContainer from '../containers/public/CartContainer';\nimport ProductPageContainer from '../containers/public/ProductPageContainer';\nimport ProductSearchContainer from '../containers/public/ProductSearchContainer';\n\nconst publicRoutes = (\n  <div>\n    <Route path=\"products\" component={AllUsersNoGovernment(ProductSearchContainer)} />\n    <Route path=\"signup\" component={UserIsNotAuthenticated(SignUp)} />\n    <Route path=\"costs\" component={Price} />\n    <Route path=\"help\" component={Help} />\n    <Route path=\"signupcitizen\" component={UserIsNotAuthenticated(SignUpCitizenFormContainer)} />\n    <Route path=\"signupbusinessowner\" component={UserIsNotAuthenticated(SignUpBusinessOwnerFormContainer)} />\n    <Route path=\"cart\" component={AllUsersNoGovernment(CartContainer)} />\n    <Route path=\"product/:id\" component={AllUsersNoGovernment(ProductPageContainer)} />\n  </div>\n);\n\nexport default publicRoutes;\n","import React from 'react';\nimport {Button} from 'react-bootstrap'\nimport PropTypes from 'prop-types';\n\nconst LoginButton = props => (\n    <Button variant=\"dark\" onClick={() => props.onLoginUserClick()}> Login</Button>);\n\nLoginButton.propTypes = {\n  // eslint-disable-next-line\n  onLoginUserClick: PropTypes.func.isRequired\n};\n\nexport default LoginButton;\n","import { connect } from 'react-redux';\nimport LoginButton from '../../components/public/LoginButton';\nimport { loginUser } from '../../actions/public/LoginButtonActions';\n\nconst mapStateToProps = (/* state, ownProps */) => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  onLoginUserClick: () => {\n    dispatch(loginUser());\n  },\n});\n\nconst LoginButtonContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoginButton);\n\nexport default LoginButtonContainer;\n","import React from 'react';\nimport {Button} from 'react-bootstrap'\nimport PropTypes from 'prop-types';\n\nconst LogoutButton = props => (\n  <Button variant=\"dark\" onClick={event => props.onLogoutUserClick(event)}>Logout</Button>\n);\n\nLogoutButton.propTypes = {\n  // eslint-disable-next-line\n    onLogoutUserClick: PropTypes.func.isRequired\n};\n\nexport default LogoutButton;\n","import { browserHistory } from 'react-router';\n\nexport const RESET_STATE = 'RESET_STATE';\nfunction resetState() {\n  return {\n    type: RESET_STATE,\n  };\n}\n\nexport function logoutUser() {\n  return (dispatch) => {\n    // Logout user.\n    dispatch(resetState());\n\n    // Redirect home.\n    return browserHistory.push('/');\n  };\n}\n","import { connect } from 'react-redux';\nimport LogoutButton from '../../components/public/LogoutButton';\nimport { logoutUser } from '../../actions/public/LogoutButtonActions';\n\nconst mapStateToProps = (/* state, ownProps */) => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  onLogoutUserClick: (event) => {\n    event.preventDefault();\n\n    dispatch(logoutUser());\n  },\n});\n\nconst LogoutButtonContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LogoutButton);\n\nexport default LogoutButtonContainer;\n","import React from 'react';\nimport { Nav, NavItem, Button } from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport {\n  HiddenOnlyAuth,\n  VisibleOnlyGovernment,\n  VisibleOnlyBusinessOwner,\n  VisibleOnlyCitizen,\n} from '../util/wrappers.js';\n\n// UI Components\nimport LoginButtonContainer from '../containers/public/LoginButtonContainer';\nimport LogoutButtonContainer from '../containers/public/LogoutButtonContainer';\n\nexport const GovernmentLinks = VisibleOnlyGovernment(() => (\n  <Nav className=\"mr-auto\">\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/costs\">\n        <Button variant=\"dark\">\n                    Costs\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/profile\">\n        <Button variant=\"dark\">\n                    Profile\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/\">\n        <LogoutButtonContainer />\n      </Nav.Link>\n    </NavItem>\n  </Nav>\n));\n\nexport const CitizenLinks = VisibleOnlyCitizen(() => (\n  <Nav className=\"mr-auto\">\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"products\">\n        <Button variant=\"dark\">\n                    Search Products\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/costs\">\n        <Button variant=\"dark\">\n                    Costs\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/profile\">\n        <Button variant=\"dark\">\n                    Profile\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/cart\">\n        <Button variant=\"dark\">\n                    Cart\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/\">\n        <LogoutButtonContainer />\n      </Nav.Link>\n    </NavItem>\n  </Nav>\n));\n\nexport const BusinessOwnerLinks = VisibleOnlyBusinessOwner(() => (\n  <Nav className=\"mr-auto\">\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"products\">\n        <Button variant=\"dark\">\n                    Search Products\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/costs\">\n        <Button variant=\"dark\">\n                    Costs\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/profile\">\n        <Button variant=\"dark\">\n                    Profile\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/cart\">\n        <Button variant=\"dark\">\n                    Cart\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/\">\n        <LogoutButtonContainer />\n      </Nav.Link>\n    </NavItem>\n  </Nav>\n));\n\nexport const GuestLinks = HiddenOnlyAuth(() => (\n  <Nav className=\"mr-auto\">\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"products\">\n        <Button variant=\"dark\">\n                    Search Products\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/costs\">\n        <Button variant=\"dark\">\n                    Costs\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/cart\">\n        <Button variant=\"dark\">\n                    Cart\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem eventkey={1}>\n      <Nav.Link as={Link} to=\"/signup\">\n        <Button variant=\"dark\">\n                    Sign up\n        </Button>\n      </Nav.Link>\n    </NavItem>\n    <NavItem>\n      <Nav.Link>\n        <LoginButtonContainer />\n      </Nav.Link>\n    </NavItem>\n  </Nav>\n));\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router';\nimport {\n  CitizenLinks,\n  GovernmentLinks,\n  GuestLinks,\n  BusinessOwnerLinks,\n} from '../../routes/NavbarLinks';\n\nimport logo from '../../img/logo_min.png';\n\nconst NavbarCustom = () => (\n  <Navbar className=\"sticky-top\" bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand>\n      <Nav.Link as={Link} to=\"/\">\n        <img src={logo} alt=\"logo-Soldino\" width=\"200\" />\n      </Nav.Link>\n    </Navbar.Brand>\n    <Navbar.Collapse />\n    <CitizenLinks />\n    <GovernmentLinks />\n    <BusinessOwnerLinks />\n    <GuestLinks />\n  </Navbar>\n);\n\nexport default NavbarCustom;\n","import React from 'react';\n\nconst Footer = () => (\n<footer>\n    <div className=\"light-tile-footer\">\n        SOLDINO project\n    </div>\n    <div className=\"dark-tile-footer\">\n        Made with &#10084; by The Walking Bug\n    </div>\n</footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarCustom from './public/NavbarCustom';\nimport Footer from './public/Footer';\n\n// Styles\nimport '../css/App.css';\n\nconst App = (props) => {\n  const { children } = props;\n  return (\n    <div>\n      <NavbarCustom />\n      <div>\n        {children}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  // eslint-disable-next-line\n    children: PropTypes.node.isRequired,\n};\n\nexport default App;","import React from 'react';\nimport {\n  Card, Button, CardDeck, Table,\n} from 'react-bootstrap';\nimport { Link } from 'react-router';\n\nimport picture from '../../img/metamask_logo.png';\n\nconst InfoCards = () => (\n  <CardDeck>\n    <Card bg=\"dark\" text=\"light\">\n      <Card.Header as=\"h3\">Getting started</Card.Header>\n      <a href=\"https://metamask.io/\">\n        <Card.Img src={picture} />\n      </a>\n      <Card.Body>\n        <Card.Text>\n            Access the official MetaMask site from the link above and install\n            MetaMask on your browser to begin using Soldino!\n          {' '}\n          <strong>\n              For a full guide on how to install MetaMask and create a wallet\n              click the link below!\n          </strong>\n        </Card.Text>\n        <Link to=\"/help\">\n          <Button variant=\"info\" block>\n              Guide to MetaMask\n          </Button>\n        </Link>\n      </Card.Body>\n    </Card>\n    <Card bg=\"dark\" text=\"light\">\n      <Card.Header as=\"h3\">Main costs inside the app</Card.Header>\n      <Card.Body>\n        <Table bordered variant=\"dark\" size=\"sm\">\n          <thead>\n            <tr>\n              <th>Operation name</th>\n              <th>Average cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Login</td>\n              <td>FREE</td>\n            </tr>\n            <tr>\n              <td>Registration</td>\n              <td>2 ETH</td>\n            </tr>\n            <tr>\n              <td>Buying a product</td>\n              <td>0.3 ETH</td>\n            </tr>\n          </tbody>\n        </Table>\n        <p>\n            Every operation that reads data from the blockchain is\n          {' '}\n          <strong>FREE!</strong>\n          {' '}\nInstead, every operation that writes data\n            onto the blockchain has a cost that depends on the weight of the\n            information.\n        </p>\n        <Link to=\"/costs\">\n          <Button variant=\"info\" block>\n              See all costs\n          </Button>\n        </Link>\n      </Card.Body>\n    </Card>\n  </CardDeck>\n);\n\nexport default InfoCards;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport InfoCards from './InfoCards';\nimport logo from '../../img/logo.png';\nimport AlertMessage from './AlertMessage';\n\nconst Home = (props) => {\n  const { metamask } = props;\n  return (\n    <div>\n      <Jumbotron fluid className=\"container-img\">\n        {metamask === null ? (\n          <AlertMessage\n            variant=\"danger\"\n            message={'Metamask not installed. Install'\n                  + 'Metamask to use Soldino!'}\n          />\n        ) : null}\n        <Container>\n          <img src={logo} alt=\"Soldino - logo\" width=\"102.8%\" height=\"auto\" />\n          <h5 style={{ marginTop: '4em' }}>\n                        Soldino is a platform provided by the Government that allows\n                        business owners to register their business and buy/sell\n                        goods/services as well to receive and record taxes. Citizens can buy\n                        things or services using money minted and distributed by the\n                        Government.\n          </h5>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <InfoCards />\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  metamask: state.web3.web3Instance,\n});\n\nHome.propTypes = {\n  // eslint-disable-next-line\n  metamask: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Home);\n","import React from 'react';\nimport gilberto from '../../img/gilberto.gif';\n\nconst NotFound = () => {\n    return (\n        <div style={{textAlign: 'center', marginTop: '8em'}}>\n            <img alt=\"Not found\" src={gilberto} style={{marginBottom: '1em'}}/>\n            <h1>404</h1>\n            <h3 style={{marginTop: '1em'}}>Sorry, page not found</h3>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport {\n  Route, IndexRoute, Router, browserHistory,\n} from 'react-router';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport businessRoutes from './businessRoutes';\nimport citizenRoutes from './citizenRoutes';\nimport governmentRoutes from './governmentRoutes';\nimport publicRoutes from './publicRoutes';\n\n\nimport App from '../components/App';\nimport Homepage from '../components/public/Home';\nimport NotFound from '../components/public/NotFound';\nimport store from '../store';\n\nconst SoldinoRoutes = () => {\n  const history = syncHistoryWithStore(browserHistory, store);\n  return (\n    <Router onUpdate={() => window.scrollTo(0, 0)} history={history}>\n      <Route path=\"/\" component={App}>\n        <IndexRoute component={Homepage} />\n        {publicRoutes}\n        {citizenRoutes}\n        {businessRoutes}\n        {governmentRoutes}\n        <Route path=\"*\" component={NotFound} />\n      </Route>\n    </Router>\n  );\n};\n\nexport default SoldinoRoutes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\n\nimport SoldinoRoutes from '../routes/SoldinoRoutes';\n\n// Redux Store\nimport store from '../store';\n\nclass Root extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Provider store={store}>\n          <SoldinoRoutes />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nRoot.propTypes = {\n  // eslint-disable-next-line\n  store: PropTypes.object.isRequired,\n};\n\nexport default Root;\n","import Web3 from 'web3';\nimport store from '../../store';\n\nexport const WEB3_INITIALIZED = 'WEB3_INITIALIZED';\nfunction web3Initialized(results) {\n  return {\n    type: WEB3_INITIALIZED,\n    payload: results,\n  };\n}\n\nfunction getWeb3() {\n  return new Promise(((resolve) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    // window.addEventListener('load', function(dispatch) {\n    let results;\n    let { web3 } = window;\n\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n    if (typeof web3 !== 'undefined') {\n      // Use Mist/MetaMask's provider.\n      web3 = new Web3(web3.currentProvider);\n\n      results = {\n        web3Instance: web3,\n      };\n\n      console.log('Injected web3 detected.');\n    } else {\n      // Fallback to localhost if no web3 injection. We've configured this to\n      // use the development console's port by default.\n      Web3.providers.HttpProvider.prototype.sendAsync = Web3.providers.HttpProvider.prototype.send;\n      const provider = new Web3.providers.HttpProvider('http://127.0.0.1:7545');\n\n      web3 = new Web3(provider);\n\n      results = {\n        web3Instance: web3,\n      };\n\n      console.log('No web3 instance injected, using Local web3.');\n    }\n\n    return web3.eth.getAccounts()\n      .then((account) => {\n        results = {\n          ...results,\n          account: account[0],\n        };\n        return resolve(store.dispatch(web3Initialized(results)));\n      });\n  }));\n}\nexport default getWeb3;\n","import store from '../../store';\nimport { networks } from './truffle-config';\n\n// import proxyAddresses from './proxyAddresses';\nimport CubitAbi from './build/contracts/Cubit';\nimport GovernmentAbi from './build/contracts/Government';\nimport UserManagerAbi from './build/contracts/UserManager';\nimport VATAbi from './build/contracts/VAT';\nimport VATTransactionAbi from './build/contracts/VATTransaction';\nimport ProductTransactionAbi from './build/contracts/ProductTransaction';\nimport ProductAbi from './build/contracts/Product';\n\nexport const CONTRACTS_INITIALIZED = 'CONTRACTS_INITIALIZED';\n\nfunction contractsInitialized(results) {\n  return {\n    type: CONTRACTS_INITIALIZED,\n    payload: results,\n  };\n}\n\nfunction getContracts() {\n  return new Promise((resolve) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    const web3 = store.getState().web3.web3Instance;\n    web3.eth.net.getId().then((networkId) => {\n      let proxyAddresses;\n      let net;\n      for (net in networks) {\n        // if (networkId === 3) {\n        // eslint-disable-next-line\n        //  proxyAddresses = require('./proxyAddresses.ropsten');\n        // } else\n        if (networks[net].network_id.toString() === networkId.toString()) {\n          // eslint-disable-next-line\n          proxyAddresses = require(`./proxyAddresses.${net}`);\n        }\n      }\n      let results;\n      if (proxyAddresses) {\n        results = {\n          cubit: new web3.eth.Contract(CubitAbi.abi, proxyAddresses.cubitAddress()),\n\n          government: new web3.eth.Contract(GovernmentAbi.abi, proxyAddresses.governmentAddress()),\n\n          userManager: new web3.eth.Contract(UserManagerAbi.abi,\n            proxyAddresses.userManagerAddress()),\n\n          vat: new web3.eth.Contract(VATAbi.abi, proxyAddresses.vatAddress()),\n\n          vatTransaction: new web3.eth.Contract(VATTransactionAbi.abi,\n            proxyAddresses.vatTransactionAddress()),\n\n          productTransaction: new web3.eth.Contract(ProductTransactionAbi.abi,\n            proxyAddresses.productTransactionAddress()),\n\n          product: new web3.eth.Contract(ProductAbi.abi, proxyAddresses.productAddress()),\n        };\n      }\n\n      resolve(store.dispatch(contractsInitialized(results)));\n    });\n  });\n}\n\nexport default getContracts;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './containers/Root';\nimport store from './store';\nimport getWeb3 from './util/web3/getWeb3';\nimport getContracts from './util/web3/getContracts';\nimport SoldinoAPI from './util/API/SoldinoAPI';\n\nwindow.onload = function () {\n  window.ethereum.enable()\n    .then(() => getWeb3()\n      .then(() => getContracts()\n        .then(() => SoldinoAPI.init.setupAccountChecking())));\n};\n\n\nReactDOM.render(<Root store={store} />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/Product1.8ce44454.jpg\";","const HDWalletProvider = require('truffle-hdwallet-provider');\n\nconst mnemonic = 'daring call move grief wish patch small notable shift violin solve fortune';\n\nmodule.exports = {\n  networks: {\n    local: {\n      host: 'localhost',\n      port: 9545,\n      gas: 5000000,\n      gasPrice: 5e9,\n      network_id: '*',\n    },\n    development: {\n      host: '127.0.0.1',\n      port: 7545,\n      gas: 6721975,\n      gasPrice: 20000000000,\n      network_id: 5777,\n    },\n    test: {\n      host: '127.0.0.1',\n      port: 8545,\n      gas: 5000000,\n      gasPrice: 1,\n      network_id: 7357,\n    },\n\n    coverage: {\n      host: 'localhost',\n      network_id: '*',\n      port: 8555,\n      gas: 0xfffffffffff,\n      gasPrice: 0x01,\n    },\n\n    ropsten: {\n      // must be a thunk, otherwise truffle commands may hang in CI\n      provider: () => new HDWalletProvider(mnemonic, 'https://ropsten.infura.io/v3/e30c349943b64dfdab035e45bfec5012'),\n      network_id: '3',\n    },\n  },\n};\n","\nexports.businessOwnerAddress = () => '0x2855b3F08c55BF01f7AaE199eAAAEFe9d89b8284';\nexports.citizenAddress = () => '0x8A10225A1E1EA80a156105FbD3EB70F545A9cAC3';\nexports.cubitAddress = () => '0xFBe7D2Cd0A493A02Fd72e9818bd3959D1EC1F822';\nexports.governmentAddress = () => '0xB775Ba81D3fB1177e0DC9E5379DDFF68d88D3B58';\nexports.productAddress = () => '0x07e0E852971b1C01738A46823E00B5876f23F643';\nexports.productTransactionAddress = () => '0xd255F7ea28C33514b40Fd4f0715cc28d7dCA056C';\nexports.userManagerAddress = () => '0xdC5c8Db888841d7A4e3C3A21de49903d34830E01';\nexports.vatAddress = () => '0xFD43D16FAEb883f4187C1C0a7cc8A2Ad98E39669';\nexports.vatTransactionAddress = () => '0xf6955d94Cbd7C1fFCf81234221ca6932c8C3d418';\n","\nexports.businessOwnerAddress = () => '0x4379Afa7731EDa63F8cd202E78AECfd6BdB15Aa5';\nexports.citizenAddress = () => '0xF33e8587B64D7625b05B3dE3FfFEE123846BcD72';\nexports.cubitAddress = () => '0x848F9415bA5c54280269a0B3575c03caCD2EBa1b';\nexports.governmentAddress = () => '0x4f930b459039360ca0fFE70442927Ec737B83A89';\nexports.productAddress = () => '0x3Fecc6e40592c823Ed9718c98f0a2Ac348D29077';\nexports.productTransactionAddress = () => '0xB4749cd2968DeA924b96B03ee6416AE7d7d74f24';\nexports.userManagerAddress = () => '0xB775Ba81D3fB1177e0DC9E5379DDFF68d88D3B58';\nexports.vatAddress = () => '0x8A10225A1E1EA80a156105FbD3EB70F545A9cAC3';\nexports.vatTransactionAddress = () => '0xFBe7D2Cd0A493A02Fd72e9818bd3959D1EC1F822';\n","module.exports = __webpack_public_path__ + \"static/media/metamask_big.41b31543.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask_guide_start.29c88161.gif\";","module.exports = __webpack_public_path__ + \"static/media/metamask_guide_start2.ba7a4f02.gif\";","module.exports = __webpack_public_path__ + \"static/media/company.ce72fed0.png\";","module.exports = __webpack_public_path__ + \"static/media/man.6f2bab19.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_min.02da60c5.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask_logo.e16c8640.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.8bb6b754.png\";","module.exports = __webpack_public_path__ + \"static/media/gilberto.01761fda.gif\";"],"sourceRoot":""}